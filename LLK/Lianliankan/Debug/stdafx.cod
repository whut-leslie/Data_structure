; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	D:\Study\数据结构与算法综合实验\连连看游戏\LLKPro17.6.18\Lianliankan\stdafx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___@@_PchSym_@00@UhgfwbUKltKquKozKltKrmKplKlsKooKqwKltKqlKrvKlvKorKrlKlsKplKqsKltKowKquKlsKooKonKluKqzKrrKluKplKqlKlqKppKrnUKlrKokKqlKlrKokKqlKlsKqnKroKltKorKorKltKrrKrkUoopkilBHOGOBIUorzmorzmpzmUwvyftUhgwzucOlyq@E553376BDE2558FC
PUBLIC	?__LINE__Var@?0???A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z@4JA ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]'::`1'::__LINE__Var
PUBLIC	??_C@_1CE@NAJDPMNB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ@4JA ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ@4JA ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z@4JA ; `ATL::CTrace::TraceV'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ@4JA ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >'::`1'::__LINE__Var
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?__LINE__Var@?0??RegisterCategory@CTrace@ATL@@SAXPB_WI@Z@4JA ; `ATL::CTrace::RegisterCategory'::`1'::__LINE__Var
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm?$AAa?$AAn?$AAy?$AA?5?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAd?$AAe@ ; `string'
PUBLIC	??_C@_1IO@PCOKKAMF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ ; `string'
PUBLIC	?__LINE__Var@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ@4JA ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ@4JA ; `ATL::CAtlBaseModule::GetModuleInstance'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4JA ; `ATL::CImage::GetInitGDIPlusInstance'::`1'::__LINE__Var
PUBLIC	?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::gdiPlus
PUBLIC	?__LINE__Var@?0??__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z@4JA ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::__autoclassinit2'::`1'::__LINE__Var
PUBLIC	?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
PUBLIC	??_C@_1CC@IMNJGBED@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4JA ; `ATL::CImage::GetCDCCacheInstance'::`1'::__LINE__Var
PUBLIC	?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A ; `ATL::CImage::GetCDCCacheInstance'::`2'::cache
PUBLIC	?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??CImageStaticInitialize@CImage@ATL@@CA_NXZ@4JA ; `ATL::CImage::CImageStaticInitialize'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ@4JA ; `ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0CPreserveLastError@ATL@@QAE@XZ@4JA ; `ATL::CPreserveLastError::CPreserveLastError'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z@4JA ; `ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1CPreserveLastError@ATL@@QAE@XZ@4JA ; `ATL::CPreserveLastError::~CPreserveLastError'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ@4JA ; `ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0CInitGDIPlus@CImage@ATL@@QAE@XZ@4JA ; `ATL::CImage::CInitGDIPlus::CInitGDIPlus'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@OMOMONMN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAH?$AAo?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???1CInitGDIPlus@CImage@ATL@@QAE@XZ@4JA ; `ATL::CImage::CInitGDIPlus::~CInitGDIPlus'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__local_stdio_printf_options@@9@4JA ; `__local_stdio_printf_options'::`1'::__LINE__Var
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?__LINE__Var@?0???0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z@4JA ; `ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ@4JA ; `ATL::CImage::CInitGDIPlus::ReleaseGDIPlus'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ@4JA ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::__LINE__Var
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	?__LINE__Var@?0???0CDCCache@CImage@ATL@@QAE@XZ@4JA ; `ATL::CImage::CDCCache::CDCCache'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1CDCCache@CImage@ATL@@QAE@XZ@4JA ; `ATL::CImage::CDCCache::~CDCCache'::`1'::__LINE__Var
PUBLIC	??_C@_1CC@JNJJDOOH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?$AA@ ; `string'
PUBLIC	_IID_IInternalConnection
PUBLIC	??_C@_1CG@MNMMIOOI@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAP?$AAr?$AAo?$AAv?$AAi?$AAd?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	?chDirSep@ATL@@3_WB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3_WB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3_WB			; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3_WB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3_WB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QB_WB			; ATL::szStringVal
PUBLIC	??_C@_13HADIAKP@?$AAS?$AA?$AA@			; `string'
PUBLIC	?multiszStringVal@ATL@@3QB_WB			; ATL::multiszStringVal
PUBLIC	??_C@_13LHMFKAAD@?$AAM?$AA?$AA@			; `string'
PUBLIC	?szDwordVal@ATL@@3QB_WB				; ATL::szDwordVal
PUBLIC	?__LINE__Var@?0???0CAtlComModule@ATL@@QAE@XZ@4JA ; `ATL::CAtlComModule::CAtlComModule'::`1'::__LINE__Var
PUBLIC	??_C@_13MKMNOPIJ@?$AAD?$AA?$AA@			; `string'
PUBLIC	?szBinaryVal@ATL@@3QB_WB			; ATL::szBinaryVal
PUBLIC	??_C@_13OPKGLAFF@?$AAB?$AA?$AA@			; `string'
PUBLIC	?szValToken@ATL@@3QB_WB				; ATL::szValToken
PUBLIC	??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl?$AA?$AA@	; `string'
PUBLIC	?szForceRemove@ATL@@3QB_WB			; ATL::szForceRemove
PUBLIC	??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0EG@DCKBPMDA@d?3?2developer?2microsoft?5visual?5st@ ; `string'
PUBLIC	?szNoRemove@ATL@@3QB_WB				; ATL::szNoRemove
PUBLIC	??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BO@EFPHNHHN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAn?$AAa?$AAp?$AAi?$AAn?$AA?$AA@ ; `string'
PUBLIC	?szDelete@ATL@@3QB_WB				; ATL::szDelete
PUBLIC	??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???1CAtlComModule@ATL@@QAE@XZ@4JA ; `ATL::CAtlComModule::~CAtlComModule'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Term@CAtlComModule@ATL@@QAEXXZ@4JA ; `ATL::CAtlComModule::Term'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_AtlRaiseException@ATL@@YAXKK@Z@4JA ; `ATL::_AtlRaiseException'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA ; `ATL::AtlWinModuleInit'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@DMHPIODO@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAN?$AAo?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	?__LINE__Var@?0???0_ATL_COM_MODULE70@ATL@@QAE@XZ@4JA ; `ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ@4JA ; ?__LINE__Var@?0???B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ@4JA
PUBLIC	?__LINE__Var@?0???1_ATL_COM_MODULE70@ATL@@QAE@XZ@4JA ; `ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ@4JA ; `ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z@4JA ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate'::`1'::__LINE__Var
PUBLIC	??_C@_1JE@EEGEPFAF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ ; `string'
PUBLIC	?__LINE__Var@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ@4JA ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::__LINE__Var
PUBLIC	_CLSID_Registrar
PUBLIC	??_C@_1CG@KFEEMCDH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???0CAtlWinModule@ATL@@QAE@XZ@4JA ; `ATL::CAtlWinModule::CAtlWinModule'::`1'::__LINE__Var
PUBLIC	?_AfxInitManaged@@YAHXZ				; _AfxInitManaged
PUBLIC	?__LINE__Var@?0???B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ@4JA ; ?__LINE__Var@?0???B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ@4JA
PUBLIC	?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z ; ATL::CAtlStringMgr::Allocate
PUBLIC	?__LINE__Var@?0???1CAtlWinModule@ATL@@QAE@XZ@4JA ; `ATL::CAtlWinModule::~CAtlWinModule'::`1'::__LINE__Var
PUBLIC	?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z ; ATL::CAtlStringMgr::Free
PUBLIC	?__LINE__Var@?0??_vswprintf_s_l@@9@4JA		; `_vswprintf_s_l'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Term@CAtlWinModule@ATL@@QAEXXZ@4JA ; `ATL::CAtlWinModule::Term'::`1'::__LINE__Var
PUBLIC	?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z ; ATL::CAtlStringMgr::Reallocate
PUBLIC	?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ ; ATL::CAtlStringMgr::GetNilString
PUBLIC	?__LINE__Var@?0???B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ@4JA ; ?__LINE__Var@?0???B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ@4JA
PUBLIC	?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::Clone
PUBLIC	?__LINE__Var@?0???0_ATL_WIN_MODULE70@ATL@@QAE@XZ@4JA ; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::__LINE__Var
PUBLIC	??_7CAtlStringMgr@ATL@@6B@			; ATL::CAtlStringMgr::`vftable'
PUBLIC	?__LINE__Var@?0???1_ATL_WIN_MODULE70@ATL@@QAE@XZ@4JA ; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::__LINE__Var
PUBLIC	_IID_IRegistrar
PUBLIC	??_GCAtlStringMgr@ATL@@UAEPAXI@Z		; ATL::CAtlStringMgr::`scalar deleting destructor'
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?__LINE__Var@?0???0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@2@@Z@4JA ; `ATL::CAtlStringMgr::CAtlStringMgr'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1CAtlStringMgr@ATL@@UAE@XZ@4JA ; `ATL::CAtlStringMgr::~CAtlStringMgr'::`1'::__LINE__Var
PUBLIC	??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ ; `string'
PUBLIC	?__LINE__Var@?0??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4JA ; `ATL::CAtlStringMgr::GetInstance'::`1'::__LINE__Var
PUBLIC	?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
PUBLIC	?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
PUBLIC	?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
PUBLIC	?Allocate@CWin32Heap@ATL@@UAEPAXI@Z		; ATL::CWin32Heap::Allocate
PUBLIC	?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
PUBLIC	?Free@CWin32Heap@ATL@@UAEXPAX@Z			; ATL::CWin32Heap::Free
PUBLIC	?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z	; ATL::CWin32Heap::Reallocate
PUBLIC	?GetSize@CWin32Heap@ATL@@UAEIPAX@Z		; ATL::CWin32Heap::GetSize
PUBLIC	?__LINE__Var@?0??Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@3@HH@Z@4JA ; `ATL::CAtlStringMgr::Allocate'::`1'::__LINE__Var
PUBLIC	??_7CWin32Heap@ATL@@6B@				; ATL::CWin32Heap::`vftable'
PUBLIC	??_GCWin32Heap@ATL@@UAEPAXI@Z			; ATL::CWin32Heap::`scalar deleting destructor'
PUBLIC	?__LINE__Var@?0???0CWin32Heap@ATL@@QAE@PAX@Z@4JA ; `ATL::CWin32Heap::CWin32Heap'::`1'::__LINE__Var
PUBLIC	??_C@_1BK@NCJHOFCL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@CLPBKBHG@?$AAh?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IK@EFGHAAKH@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ ; `string'
PUBLIC	?__LINE__Var@?0???1CWin32Heap@ATL@@UAE@XZ@4JA	; `ATL::CWin32Heap::~CWin32Heap'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@3@@Z@4JA ; `ATL::CAtlStringMgr::Free'::`1'::__LINE__Var
PUBLIC	??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@IEBIBJEI@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@3@PAU43@HH@Z@4JA ; `ATL::CAtlStringMgr::Reallocate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Allocate@CWin32Heap@ATL@@UAEPAXI@Z@4JA ; `ATL::CWin32Heap::Allocate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Free@CWin32Heap@ATL@@UAEXPAX@Z@4JA ; `ATL::CWin32Heap::Free'::`1'::__LINE__Var
PUBLIC	_LIBID_ATLLib
PUBLIC	?__LINE__Var@?0??Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z@4JA ; `ATL::CWin32Heap::Reallocate'::`1'::__LINE__Var
PUBLIC	??_C@_1BM@GIKLHLFD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAa?$AAc?$AAh?$AAe?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??GetSize@CWin32Heap@ATL@@UAEIPAX@Z@4JA ; `ATL::CWin32Heap::GetSize'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@3@XZ@4JA ; `ATL::CAtlStringMgr::GetNilString'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???_GCWin32Heap@ATL@@UAEPAXI@Z@4JA ; `ATL::CWin32Heap::`scalar deleting destructor''::`1'::__LINE__Var
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?__LINE__Var@?0??Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@3@XZ@4JA ; `ATL::CAtlStringMgr::Clone'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ@4JA ; `ATL::CAtlStringMgr::StaticInitialize'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???_GCAtlStringMgr@ATL@@UAEPAXI@Z@4JA ; `ATL::CAtlStringMgr::`scalar deleting destructor''::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__autoclassinit2@CWin32Heap@ATL@@QAEXI@Z@4JA ; `ATL::CWin32Heap::__autoclassinit2'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??AddRef@CStringData@ATL@@QAEXXZ@4JA ; `ATL::CStringData::AddRef'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_AfxInitManaged@@YAHXZ@4JA	; `_AfxInitManaged'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__autoclassinit2@CAtlStringMgr@ATL@@QAEXI@Z@4JA ; `ATL::CAtlStringMgr::__autoclassinit2'::`1'::__LINE__Var
PUBLIC	??_C@_1BE@BLGCOAPB@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	__pIncludeInitManaged
PUBLIC	??_C@_1JC@IDFEEAEM@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ ; `string'
PUBLIC	?__LINE__Var@?0??swprintf_s@@9@4JA		; `swprintf_s'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@PBPHANCD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAe?$AAn?$AAc?$AAi?$AAl?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???0CNilStringData@ATL@@QAE@XZ@4JA ; `ATL::CNilStringData::CNilStringData'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@3@@Z@4JA ; `ATL::CNilStringData::SetManager'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ@4JA ; `__vcrt_va_start_verify_argument_type<wchar_t const * const>'::`1'::__LINE__Var
PUBLIC	??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ@4JA ; `__vcrt_va_start_verify_argument_type<wchar_t const *>'::`1'::__LINE__Var
PUBLIC	??_R4CWin32Heap@ATL@@6B@			; ATL::CWin32Heap::`RTTI Complete Object Locator'
PUBLIC	?__LINE__Var@?0??AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@2@PAUHINSTANCE__@@@Z@4JA ; `ATL::AtlWinModuleTerm'::`1'::__LINE__Var
PUBLIC	??_R0?AVCWin32Heap@ATL@@@8			; ATL::CWin32Heap `RTTI Type Descriptor'
PUBLIC	??_R3CWin32Heap@ATL@@8				; ATL::CWin32Heap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWin32Heap@ATL@@8				; ATL::CWin32Heap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWin32Heap@ATL@@8			; ATL::CWin32Heap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IAtlMemMgr@ATL@@8			; ATL::IAtlMemMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIAtlMemMgr@ATL@@@8			; ATL::IAtlMemMgr `RTTI Type Descriptor'
PUBLIC	??_R3IAtlMemMgr@ATL@@8				; ATL::IAtlMemMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAtlMemMgr@ATL@@8				; ATL::IAtlMemMgr::`RTTI Base Class Array'
PUBLIC	?CLSID_WinFormsControl@@3U_GUID@@B		; CLSID_WinFormsControl
PUBLIC	??_R1A@?0A@EA@IAtlStringMgr@ATL@@8		; ATL::IAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_C@_1IM@NONHLJLN@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ ; `string'
PUBLIC	??_R0?AUIAtlStringMgr@ATL@@@8			; ATL::IAtlStringMgr `RTTI Type Descriptor'
PUBLIC	??_R3IAtlStringMgr@ATL@@8			; ATL::IAtlStringMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAtlStringMgr@ATL@@8			; ATL::IAtlStringMgr::`RTTI Base Class Array'
PUBLIC	??_C@_1BI@OKDLCIEM@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAa?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@DMHCKHHD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAU?$AAt?$AAi?$AAl?$AA?$AA@ ; `string'
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	?__LINE__Var@?0???$AtlAdd@K@ATL@@YAJPAKKK@Z@4JA	; `ATL::AtlAdd<unsigned long>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$AtlMultiply@I@ATL@@YAJPAIII@Z@4JA ; `ATL::AtlMultiply<unsigned int>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>'::`1'::__LINE__Var
PUBLIC	??_R4CAtlStringMgr@ATL@@6B@			; ATL::CAtlStringMgr::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAtlStringMgr@ATL@@@8			; ATL::CAtlStringMgr `RTTI Type Descriptor'
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	??_R3CAtlStringMgr@ATL@@8			; ATL::CAtlStringMgr::`RTTI Class Hierarchy Descriptor'
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>'::`1'::__LINE__Var
PUBLIC	??_R2CAtlStringMgr@ATL@@8			; ATL::CAtlStringMgr::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAtlStringMgr@ATL@@8		; ATL::CAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>'::`1'::__LINE__Var
PUBLIC	??_C@_1CC@DMMBNCFG@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt?$AAy?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>'::`1'::__LINE__Var
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?__LINE__Var@?0???$AtlMultiply@K@ATL@@YAJPAKKK@Z@4JA ; `ATL::AtlMultiply<unsigned long>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>'::`1'::__LINE__Var
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>'::`1'::__LINE__Var
PUBLIC	??_C@_1BK@OPAPOCAL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAy?$AAn?$AAc?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@ONGMEOAB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Allocate@CCRTAllocator@ATL@@SAPAXI@Z@4JA ; `ATL::CCRTAllocator::Allocate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Free@CCRTAllocator@ATL@@SAXPAX@Z@4JA ; `ATL::CCRTAllocator::Free'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>'::`1'::__LINE__Var
PUBLIC	??_C@_1BM@FHAEDBFK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAS?$AAA?$AAP?$AAI?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>'::`1'::__LINE__Var
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0CComCriticalSection@ATL@@QAE@XZ@4JA ; `ATL::CComCriticalSection::CComCriticalSection'::`1'::__LINE__Var
PUBLIC	?szInvalidDateTime@ATL@@3QB_WB			; ATL::szInvalidDateTime
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>'::`1'::__LINE__Var
PUBLIC	??_C@_1CC@FFBCNGIJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@ ; `string'
PUBLIC	?szInvalidDateTimeSpan@ATL@@3QB_WB		; ATL::szInvalidDateTimeSpan
PUBLIC	?__LINE__Var@?0???1CComCriticalSection@ATL@@QAE@XZ@4JA ; `ATL::CComCriticalSection::~CComCriticalSection'::`1'::__LINE__Var
PUBLIC	??_C@_1CK@NMKILLLB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAS?$AAp?$AAa?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@MAFGHOEE@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAO?$AAM?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??HRESULT_FROM_WIN32@@9@4JA	; `HRESULT_FROM_WIN32'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Init@CComCriticalSection@ATL@@QAEJXZ@4JA ; `ATL::CComCriticalSection::Init'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??Term@CComCriticalSection@ATL@@QAEJXZ@4JA ; `ATL::CComCriticalSection::Term'::`1'::__LINE__Var
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	?__LINE__Var@?0???$AtlAdd@I@ATL@@YAJPAIII@Z@4JA	; `ATL::AtlAdd<unsigned int>'::`1'::__LINE__Var
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	?__LINE__Var@?0??GetCategoryName@CTrace@ATL@@CAPA_WI@Z@4JA ; `ATL::CTrace::GetCategoryName'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$AtlAdd@H@ATL@@YAJPAHHH@Z@4JA	; `ATL::AtlAdd<int>'::`1'::__LINE__Var
PUBLIC	??_C@_1BG@FPLJJEMF@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAQ?$AAI?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z@4JA ; `ATL::CTrace::TraceV'::`1'::__LINE__Var
PUBLIC	??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAm?$AA_?$AAn?$AAS?$AAi?$AAz?$AAe?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ@4JA ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >'::`1'::__LINE__Var
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1IO@IBEBMCEG@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ ; `string'
PUBLIC	??_C@_1CE@NIAEAIDK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAa?$AAr?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0???$AtlAlignUp@H@ATL@@YGHHK@Z@4JA ; `ATL::AtlAlignUp<int>'::`1'::__LINE__Var
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1CC@BNHGJFNK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAf?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ ; `string'
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_ECAtlStringMgr@ATL@@UAEPAXI@Z:PROC		; ATL::CAtlStringMgr::`vector deleting destructor'
EXTRN	??_ECWin32Heap@ATL@@UAEPAXI@Z:PROC		; ATL::CWin32Heap::`vector deleting destructor'
EXTRN	___ImageBase:BYTE
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ___@@_PchSym_@00@UhgfwbUKltKquKozKltKrmKplKlsKooKqwKltKqlKrvKlvKorKrlKlsKplKqsKltKowKquKlsKooKonKluKqzKrrKluKplKqlKlqKppKrnUKlrKokKqlKlrKokKqlKlsKqnKroKltKorKorKltKrrKrkUoopkilBHOGOBIUorzmorzmpzmUwvyftUhgwzucOlyq@E553376BDE2558FC
_BSS	SEGMENT
___@@_PchSym_@00@UhgfwbUKltKquKozKltKrmKplKlsKooKqwKltKqlKrvKlvKorKrlKlsKplKqsKltKowKquKlsKooKonKluKqzKrrKluKplKqlKlqKppKrnUKlrKokKqlKlrKokKqlKlsKqnKroKltKorKorKltKrrKrkUoopkilBHOGOBIUorzmorzmpzmUwvyftUhgwzucOlyq@E553376BDE2558FC DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A
_BSS	SEGMENT
?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A DB 024H DUP (?) ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::gdiPlus
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A
_BSS	SEGMENT
?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A DB 010H DUP (?) ; `ATL::CImage::GetCDCCacheInstance'::`2'::cache
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A
_BSS	SEGMENT
?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A DB 0cH DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
_BSS	ENDS
;	COMDAT ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A
_BSS	SEGMENT
?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A DB 01cH DUP (?) ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
_BSS	ENDS
;	COMDAT ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA
_BSS	SEGMENT
?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA DD 01H DUP (?) ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
_BSS	SEGMENT
?GenericTypographicStringFormatBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericTypographicStringFormatBuffer
?GenericDefaultStringFormatBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericDefaultStringFormatBuffer
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
_BSS	SEGMENT
?GenericSansSerifFontFamilyBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericSansSerifFontFamilyBuffer
?GenericSerifFontFamilyBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericSerifFontFamilyBuffer
?GenericMonospaceFontFamilyBuffer@Gdiplus@@3PAEA DB 08H DUP (?) ; Gdiplus::GenericMonospaceFontFamilyBuffer
_BSS	ENDS
;	COMDAT ??_C@_1CC@BNHGJFNK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAf?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@BNHGJFNK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAf?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'c', 00H, 'o', 00H, 'u'
	DB	00H, 'n', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs?$AA?$AA@ DB '%', 00H, 'h', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H
	DB	'l', 00H, 's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5?$AA?$AA@ DB '%', 00H, 'u'
	DB	00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5?$AA?$AA@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5?$AA?$AA@ DB '%', 00H
	DB	'l', 00H, 's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???$AtlAlignUp@H@ATL@@YGHHK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$AtlAlignUp@H@ATL@@YGHHK@Z@4JA DD 06H	; `ATL::AtlAlignUp<int>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CE@NIAEAIDK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAa?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@NIAEAIDK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAa?$AAr?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'a', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@IBEBMCEG@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
CONST	SEGMENT
??_C@_1IO@IBEBMCEG@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '\', 00H, 'm'
	DB	00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'u'
	DB	00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '0', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ@4JA DD 0136H ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAm?$AA_?$AAn?$AAS?$AAi?$AAz?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAm?$AA_?$AAn?$AAS?$AAi?$AAz?$AAe?$AA?$AA@ DB 'n'
	DB	00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'n'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z@4JA DD 096H ; `ATL::CTrace::TraceV'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BG@FPLJJEMF@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAQ?$AAI?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@FPLJJEMF@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAQ?$AAI?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'Q', 00H, 'I', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???$AtlAdd@H@ATL@@YAJPAHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$AtlAdd@H@ATL@@YAJPAHHH@Z@4JA DD 06H	; `ATL::AtlAdd<int>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetCategoryName@CTrace@ATL@@CAPA_WI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetCategoryName@CTrace@ATL@@CAPA_WI@Z@4JA DD 084H ; `ATL::CTrace::GetCategoryName'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???$AtlAdd@I@ATL@@YAJPAIII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$AtlAdd@I@ATL@@YAJPAIII@Z@4JA DD 06H	; `ATL::AtlAdd<unsigned int>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Term@CComCriticalSection@ATL@@QAEJXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Term@CComCriticalSection@ATL@@QAEJXZ@4JA DD 08bH ; `ATL::CComCriticalSection::Term'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Init@CComCriticalSection@ATL@@QAEJXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Init@CComCriticalSection@ATL@@QAEJXZ@4JA DD 080H ; `ATL::CComCriticalSection::Init'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??HRESULT_FROM_WIN32@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?0??HRESULT_FROM_WIN32@@9@4JA DD 066b9H	; `HRESULT_FROM_WIN32'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BI@MAFGHOEE@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAO?$AAM?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@MAFGHOEE@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAO?$AAM?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NMKILLLB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAS?$AAp?$AAa?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@NMKILLLB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAS?$AAp?$AAa?$AAn?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 'S', 00H, 'p', 00H, 'a', 00H, 'n', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1CComCriticalSection@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CComCriticalSection@ATL@@QAE@XZ@4JA DD 072H ; `ATL::CComCriticalSection::~CComCriticalSection'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QB_WB
CONST	SEGMENT
?szInvalidDateTimeSpan@ATL@@3QB_WB DD FLAT:??_C@_1CK@NMKILLLB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAS?$AAp?$AAa?$AAn?$AA?$AA@ ; ATL::szInvalidDateTimeSpan
CONST	ENDS
;	COMDAT ??_C@_1CC@FFBCNGIJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@FFBCNGIJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QB_WB
CONST	SEGMENT
?szInvalidDateTime@ATL@@3QB_WB DD FLAT:??_C@_1CC@FFBCNGIJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@ ; ATL::szInvalidDateTime
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0CComCriticalSection@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CComCriticalSection@ATL@@QAE@XZ@4JA DD 06cH ; `ATL::CComCriticalSection::CComCriticalSection'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BM@FHAEDBFK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAS?$AAA?$AAP?$AAI?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@FHAEDBFK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAS?$AAA?$AAP?$AAI?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'I', 00H, 'S', 00H, 'A', 00H, 'P', 00H, 'I', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Free@CCRTAllocator@ATL@@SAXPAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Free@CCRTAllocator@ATL@@SAXPAX@Z@4JA DD 0119H ; `ATL::CCRTAllocator::Free'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Allocate@CCRTAllocator@ATL@@SAPAXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Allocate@CCRTAllocator@ATL@@SAPAXI@Z@4JA DD 0114H ; `ATL::CCRTAllocator::Allocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CA@ONGMEOAB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@ONGMEOAB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BK@OPAPOCAL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAy?$AAn?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@OPAPOCAL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAy?$AAn?$AAc?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$AtlMultiply@K@ATL@@YAJPAKKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$AtlMultiply@K@ATL@@YAJPAKKK@Z@4JA DD 0bcH ; `ATL::AtlMultiply<unsigned long>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CC@DMMBNCFG@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@DMMBNCFG@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt?$AAy?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAtlStringMgr@ATL@@8 DD FLAT:??_R0?AVCAtlStringMgr@ATL@@@8 ; ATL::CAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R2CAtlStringMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@CAtlStringMgr@ATL@@8 ; ATL::CAtlStringMgr::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_R3CAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R3CAtlStringMgr@ATL@@8 DD 00H			; ATL::CAtlStringMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAtlStringMgr@ATL@@@8
data$r	SEGMENT
??_R0?AVCAtlStringMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlStringMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlStringMgr@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R4CAtlStringMgr@ATL@@6B@
rdata$r	SEGMENT
??_R4CAtlStringMgr@ATL@@6B@ DD 00H			; ATL::CAtlStringMgr::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAtlStringMgr@ATL@@@8
	DD	FLAT:??_R3CAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$AtlMultiply@I@ATL@@YAJPAIII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$AtlMultiply@I@ATL@@YAJPAIII@Z@4JA DD 09eH ; `ATL::AtlMultiply<unsigned int>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$AtlAdd@K@ATL@@YAJPAKKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$AtlAdd@K@ATL@@YAJPAKKK@Z@4JA DD 06H	; `ATL::AtlAdd<unsigned long>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT ??_C@_1BK@DMHCKHHD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAU?$AAt?$AAi?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@DMHCKHHD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAU?$AAt?$AAi?$AAl?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@OKDLCIEM@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAa?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@OKDLCIEM@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAa?$AAp?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_R2IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R2IAtlStringMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@IAtlStringMgr@ATL@@8 ; ATL::IAtlStringMgr::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R3IAtlStringMgr@ATL@@8 DD 00H			; ATL::IAtlStringMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAtlStringMgr@ATL@@@8
data$r	SEGMENT
??_R0?AUIAtlStringMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::IAtlStringMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAtlStringMgr@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_C@_1IM@NONHLJLN@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
CONST	SEGMENT
??_C@_1IM@NONHLJLN@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '\', 00H, 'm'
	DB	00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'u'
	DB	00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '0', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 's'
	DB	00H, 'e', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@IAtlStringMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAtlStringMgr@ATL@@8 DD FLAT:??_R0?AUIAtlStringMgr@ATL@@@8 ; ATL::IAtlStringMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAtlStringMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ?CLSID_WinFormsControl@@3U_GUID@@B
CONST	SEGMENT
?CLSID_WinFormsControl@@3U_GUID@@B DD 0b7e7a666H	; CLSID_WinFormsControl
	DW	0d623H
	DW	0457fH
	DB	0a3H
	DB	0aH
	DB	06aH
	DB	049H
	DB	0a3H
	DB	0e5H
	DB	0b4H
	DB	070H
CONST	ENDS
;	COMDAT ??_R2IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R2IAtlMemMgr@ATL@@8 DD FLAT:??_R1A@?0A@EA@IAtlMemMgr@ATL@@8 ; ATL::IAtlMemMgr::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R3IAtlMemMgr@ATL@@8 DD 00H				; ATL::IAtlMemMgr::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAtlMemMgr@ATL@@@8
data$r	SEGMENT
??_R0?AUIAtlMemMgr@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::IAtlMemMgr `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAtlMemMgr@ATL@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAtlMemMgr@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAtlMemMgr@ATL@@8 DD FLAT:??_R0?AUIAtlMemMgr@ATL@@@8 ; ATL::IAtlMemMgr::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWin32Heap@ATL@@8 DD FLAT:??_R0?AVCWin32Heap@ATL@@@8 ; ATL::CWin32Heap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R2CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R2CWin32Heap@ATL@@8 DD FLAT:??_R1A@?0A@EA@CWin32Heap@ATL@@8 ; ATL::CWin32Heap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAtlMemMgr@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R3CWin32Heap@ATL@@8
rdata$r	SEGMENT
??_R3CWin32Heap@ATL@@8 DD 00H				; ATL::CWin32Heap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWin32Heap@ATL@@@8
data$r	SEGMENT
??_R0?AVCWin32Heap@ATL@@@8 DD FLAT:??_7type_info@@6B@	; ATL::CWin32Heap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWin32Heap@ATL@@', 00H
data$r	ENDS
;	COMDAT ?__LINE__Var@?0??AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@2@PAUHINSTANCE__@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@2@PAUHINSTANCE__@@@Z@4JA DD 01de1H ; `ATL::AtlWinModuleTerm'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_R4CWin32Heap@ATL@@6B@
rdata$r	SEGMENT
??_R4CWin32Heap@ATL@@6B@ DD 00H				; ATL::CWin32Heap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWin32Heap@ATL@@@8
	DD	FLAT:??_R3CWin32Heap@ATL@@8
rdata$r	ENDS
;	COMDAT ?__LINE__Var@?0???$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ@4JA DD 06H ; `__vcrt_va_start_verify_argument_type<wchar_t const *>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ@4JA DD 06H ; `__vcrt_va_start_verify_argument_type<wchar_t const * const>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'p'
	DB	00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'M', 00H, 'g', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@3@@Z@4JA DD 07bH ; `ATL::CNilStringData::SetManager'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0CNilStringData@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CNilStringData@ATL@@QAE@XZ@4JA DD 070H ; `ATL::CNilStringData::CNilStringData'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CA@PBPHANCD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAe?$AAn?$AAc?$AAi?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@PBPHANCD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAe?$AAn?$AAc?$AAi?$AAl?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'i'
	DB	00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??swprintf_s@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?0??swprintf_s@@9@4JA DD 0600H		; `swprintf_s'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1JC@IDFEEAEM@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
CONST	SEGMENT
??_C@_1JC@IDFEEAEM@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '\', 00H, 'm'
	DB	00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'u'
	DB	00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '0', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 's', 00H, 'i', 00H, 'm'
	DB	00H, 'p', 00H, 's', 00H, 't', 00H, 'r', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT __pIncludeInitManaged
_DATA	SEGMENT
__pIncludeInitManaged DD FLAT:?_AfxInitManaged@@YAHXZ
_DATA	ENDS
;	COMDAT ??_C@_1BE@BLGCOAPB@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@BLGCOAPB@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 'n'
	DB	00H, 'R', 00H, 'e', 00H, 'f', 00H, 's', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??__autoclassinit2@CAtlStringMgr@ATL@@QAEXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__autoclassinit2@CAtlStringMgr@ATL@@QAEXI@Z@4JA DD 0a3H ; `ATL::CAtlStringMgr::__autoclassinit2'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_AfxInitManaged@@YAHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_AfxInitManaged@@YAHXZ@4JA DD 04cH	; `_AfxInitManaged'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??AddRef@CStringData@ATL@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AddRef@CStringData@ATL@@QAEXXZ@4JA DD 03fH ; `ATL::CStringData::AddRef'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__autoclassinit2@CWin32Heap@ATL@@QAEXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__autoclassinit2@CWin32Heap@ATL@@QAEXI@Z@4JA DD 0a3H ; `ATL::CWin32Heap::__autoclassinit2'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???_GCAtlStringMgr@ATL@@UAEPAXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???_GCAtlStringMgr@ATL@@UAEPAXI@Z@4JA DD 0a3H ; `ATL::CAtlStringMgr::`scalar deleting destructor''::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ@4JA DD 09dH ; `ATL::CAtlStringMgr::StaticInitialize'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@3@XZ@4JA DD 094H ; `ATL::CAtlStringMgr::Clone'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???_GCWin32Heap@ATL@@UAEPAXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???_GCWin32Heap@ATL@@UAEPAXI@Z@4JA DD 0b6H ; `ATL::CWin32Heap::`scalar deleting destructor''::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@3@XZ@4JA DD 08fH ; `ATL::CAtlStringMgr::GetNilString'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetSize@CWin32Heap@ATL@@UAEIPAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetSize@CWin32Heap@ATL@@UAEIPAX@Z@4JA DD 0afH ; `ATL::CWin32Heap::GetSize'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BM@GIKLHLFD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAa?$AAc?$AAh?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@GIKLHLFD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAa?$AAc?$AAh?$AAe?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'C', 00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z@4JA DD 0a0H ; `ATL::CWin32Heap::Reallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Free@CWin32Heap@ATL@@UAEXPAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Free@CWin32Heap@ATL@@UAEXPAX@Z@4JA DD 094H ; `ATL::CWin32Heap::Free'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Allocate@CWin32Heap@ATL@@UAEPAXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Allocate@CWin32Heap@ATL@@UAEPAXI@Z@4JA DD 090H ; `ATL::CWin32Heap::Allocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@3@PAU43@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@3@PAU43@HH@Z@4JA DD 070H ; `ATL::CAtlStringMgr::Reallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@ DB 'p'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, '-', 00H, '>', 00H
	DB	'p', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 'M', 00H, 'g', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, 't', 00H, 'h', 00H, 'i', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@IEBIBJEI@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@IEBIBJEI@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'p'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AA@ DB 'b'
	DB	00H, 'S', 00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@3@@Z@4JA DD 066H ; `ATL::CAtlStringMgr::Free'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CWin32Heap@ATL@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CWin32Heap@ATL@@UAE@XZ@4JA DD 06dH	; `ATL::CWin32Heap::~CWin32Heap'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1IK@EFGHAAKH@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
CONST	SEGMENT
??_C@_1IK@EFGHAAKH@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '\', 00H, 'm'
	DB	00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'u'
	DB	00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '0', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm'
	DB	00H, '.', 00H, 'h', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@CLPBKBHG@?$AAh?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@CLPBKBHG@?$AAh?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'h'
	DB	00H, 'H', 00H, 'e', 00H, 'a', 00H, 'p', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NCJHOFCL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@NCJHOFCL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0CWin32Heap@ATL@@QAE@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CWin32Heap@ATL@@QAE@PAX@Z@4JA DD 056H ; `ATL::CWin32Heap::CWin32Heap'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CWin32Heap@ATL@@6B@
CONST	SEGMENT
??_7CWin32Heap@ATL@@6B@ DD FLAT:??_R4CWin32Heap@ATL@@6B@ ; ATL::CWin32Heap::`vftable'
	DD	FLAT:?Allocate@CWin32Heap@ATL@@UAEPAXI@Z
	DD	FLAT:?Free@CWin32Heap@ATL@@UAEXPAX@Z
	DD	FLAT:?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z
	DD	FLAT:?GetSize@CWin32Heap@ATL@@UAEIPAX@Z
	DD	FLAT:??_ECWin32Heap@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@3@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@3@HH@Z@4JA DD 045H ; `ATL::CAtlStringMgr::Allocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4JA DD 037H ; `ATL::CAtlStringMgr::GetInstance'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
CONST	SEGMENT
??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '\', 00H, 'm'
	DB	00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'u'
	DB	00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '0', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, '.', 00H, 'h', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1CAtlStringMgr@ATL@@UAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CAtlStringMgr@ATL@@UAE@XZ@4JA DD 02cH ; `ATL::CAtlStringMgr::~CAtlStringMgr'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@2@@Z@4JA DD 026H ; `ATL::CAtlStringMgr::CAtlStringMgr'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1_ATL_WIN_MODULE70@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1_ATL_WIN_MODULE70@ATL@@QAE@XZ@4JA DD 0afcH ; `ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CAtlStringMgr@ATL@@6B@
CONST	SEGMENT
??_7CAtlStringMgr@ATL@@6B@ DD FLAT:??_R4CAtlStringMgr@ATL@@6B@ ; ATL::CAtlStringMgr::`vftable'
	DD	FLAT:?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
	DD	FLAT:?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
	DD	FLAT:?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
	DD	FLAT:?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
	DD	FLAT:?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
	DD	FLAT:??_ECAtlStringMgr@ATL@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0_ATL_WIN_MODULE70@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0_ATL_WIN_MODULE70@ATL@@QAE@XZ@4JA DD 0afcH ; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ@4JA DD 04fH ; ?__LINE__Var@?0???B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ@4JA
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Term@CAtlWinModule@ATL@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Term@CAtlWinModule@ATL@@QAEXXZ@4JA DD 0aefH ; `ATL::CAtlWinModule::Term'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_vswprintf_s_l@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_vswprintf_s_l@@9@4JA DD 04eeH		; `_vswprintf_s_l'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CAtlWinModule@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CAtlWinModule@ATL@@QAE@XZ@4JA DD 0aeaH ; `ATL::CAtlWinModule::~CAtlWinModule'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ@4JA DD 04fH ; ?__LINE__Var@?0???B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ@4JA
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0CAtlWinModule@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CAtlWinModule@ATL@@QAE@XZ@4JA DD 0adcH ; `ATL::CAtlWinModule::CAtlWinModule'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CG@KFEEMCDH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@KFEEMCDH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ@4JA DD 01c1H ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1JE@EEGEPFAF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
CONST	SEGMENT
??_C@_1JE@EEGEPFAF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '\', 00H, 'm'
	DB	00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'u'
	DB	00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '0', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 's', 00H, 'i', 00H, 'm'
	DB	00H, 'p', 00H, 'c', 00H, 'o', 00H, 'l', 00H, 'l', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z@4JA DD 01d6H ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ@4JA DD 016cH ; `ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1_ATL_COM_MODULE70@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1_ATL_COM_MODULE70@ATL@@QAE@XZ@4JA DD 09fcH ; `ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ@4JA DD 017aH ; ?__LINE__Var@?0???B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ@4JA
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0_ATL_COM_MODULE70@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0_ATL_COM_MODULE70@ATL@@QAE@XZ@4JA DD 09fcH ; `ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAc?$AAr?$AAi@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@ DB '_'
	DB	00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@DMHPIODO@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAN?$AAo?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@DMHPIODO@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAN?$AAo?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA DD 020c9H ; `ATL::AtlWinModuleInit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_AtlRaiseException@ATL@@YAXKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_AtlRaiseException@ATL@@YAXKK@Z@4JA DD 01eH ; `ATL::_AtlRaiseException'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Term@CAtlComModule@ATL@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Term@CAtlComModule@ATL@@QAEXXZ@4JA DD 0998H ; `ATL::CAtlComModule::Term'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CAtlComModule@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CAtlComModule@ATL@@QAE@XZ@4JA DD 0992H ; `ATL::CAtlComModule::~CAtlComModule'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$AA@ DB 'D', 00H, 'e', 00H
	DB	'l', 00H, 'e', 00H, 't', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?szDelete@ATL@@3QB_WB
CONST	SEGMENT
?szDelete@ATL@@3QB_WB DD FLAT:??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$AA@ ; ATL::szDelete
CONST	ENDS
;	COMDAT ??_C@_1BO@EFPHNHHN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAn?$AAa?$AAp?$AAi?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@EFPHNHHN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAn?$AAa?$AAp?$AAi?$AAn?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 'n', 00H, 'a', 00H, 'p', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ DB 'N'
	DB	00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAc?$AAr?$AAi@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'A', 00H, 't', 00H, 'l'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QB_WB
CONST	SEGMENT
?szNoRemove@ATL@@3QB_WB DD FLAT:??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ ; ATL::szNoRemove
CONST	ENDS
;	COMDAT ??_C@_0EG@DCKBPMDA@d?3?2developer?2microsoft?5visual?5st@
CONST	SEGMENT
??_C@_0EG@DCKBPMDA@d?3?2developer?2microsoft?5visual?5st@ DB 'd:\develope'
	DB	'r\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ DB 'F'
	DB	00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QB_WB
CONST	SEGMENT
?szForceRemove@ATL@@3QB_WB DD FLAT:??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ ; ATL::szForceRemove
CONST	ENDS
;	COMDAT ??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl?$AA?$AA@ DB 'V', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QB_WB
CONST	SEGMENT
?szValToken@ATL@@3QB_WB DD FLAT:??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl?$AA?$AA@ ; ATL::szValToken
CONST	ENDS
;	COMDAT ??_C@_13OPKGLAFF@?$AAB?$AA?$AA@
CONST	SEGMENT
??_C@_13OPKGLAFF@?$AAB?$AA?$AA@ DB 'B', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QB_WB
CONST	SEGMENT
?szBinaryVal@ATL@@3QB_WB DD FLAT:??_C@_13OPKGLAFF@?$AAB?$AA?$AA@ ; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ??_C@_13MKMNOPIJ@?$AAD?$AA?$AA@
CONST	SEGMENT
??_C@_13MKMNOPIJ@?$AAD?$AA?$AA@ DB 'D', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0CAtlComModule@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CAtlComModule@ATL@@QAE@XZ@4JA DD 097dH ; `ATL::CAtlComModule::CAtlComModule'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?szDwordVal@ATL@@3QB_WB
CONST	SEGMENT
?szDwordVal@ATL@@3QB_WB DD FLAT:??_C@_13MKMNOPIJ@?$AAD?$AA?$AA@ ; ATL::szDwordVal
CONST	ENDS
;	COMDAT ??_C@_13LHMFKAAD@?$AAM?$AA?$AA@
CONST	SEGMENT
??_C@_13LHMFKAAD@?$AAM?$AA?$AA@ DB 'M', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QB_WB
CONST	SEGMENT
?multiszStringVal@ATL@@3QB_WB DD FLAT:??_C@_13LHMFKAAD@?$AAM?$AA?$AA@ ; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ??_C@_13HADIAKP@?$AAS?$AA?$AA@
CONST	SEGMENT
??_C@_13HADIAKP@?$AAS?$AA?$AA@ DB 'S', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QB_WB
CONST	SEGMENT
?szStringVal@ATL@@3QB_WB DD FLAT:??_C@_13HADIAKP@?$AAS?$AA?$AA@ ; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3_WB
CONST	SEGMENT
?chEquals@ATL@@3_WB DW 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3_WB
CONST	SEGMENT
?chQuote@ATL@@3_WB DW 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3_WB
CONST	SEGMENT
?chLeftBracket@ATL@@3_WB DW 07bH			; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3_WB
CONST	SEGMENT
?chRightBracket@ATL@@3_WB DW 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3_WB
CONST	SEGMENT
?chDirSep@ATL@@3_WB DW 05cH				; ATL::chDirSep
CONST	ENDS
;	COMDAT ??_C@_1CG@MNMMIOOI@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAP?$AAr?$AAo?$AAv?$AAi?$AAd?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@MNMMIOOI@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAP?$AAr?$AAo?$AAv?$AAi?$AAd?$AAe?$AAr?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'D', 00H, 'B', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'v'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT ??_C@_1CC@JNJJDOOH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@JNJJDOOH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'D', 00H, 'B', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???1CDCCache@CImage@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CDCCache@CImage@ATL@@QAE@XZ@4JA DD 025eH ; `ATL::CImage::CDCCache::~CDCCache'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0CDCCache@CImage@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CDCCache@CImage@ATL@@QAE@XZ@4JA DD 0254H ; `ATL::CImage::CDCCache::CDCCache'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ@4JA DD 01b4H ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ@4JA DD 023aH ; `ATL::CImage::CInitGDIPlus::ReleaseGDIPlus'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z@4JA DD 0197H ; `ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__local_stdio_printf_options@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__local_stdio_printf_options@@9@4JA DD 049H ; `__local_stdio_printf_options'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CInitGDIPlus@CImage@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CInitGDIPlus@CImage@ATL@@QAE@XZ@4JA DD 021eH ; `ATL::CImage::CInitGDIPlus::~CInitGDIPlus'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CA@OMOMONMN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAH?$AAo?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@OMOMONMN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAH?$AAo?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'H', 00H, 'o', 00H, 's', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0CInitGDIPlus@CImage@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CInitGDIPlus@CImage@ATL@@QAE@XZ@4JA DD 0214H ; `ATL::CImage::CInitGDIPlus::CInitGDIPlus'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ@4JA DD 015dH ; `ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1CPreserveLastError@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1CPreserveLastError@ATL@@QAE@XZ@4JA DD 018cH ; `ATL::CPreserveLastError::~CPreserveLastError'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z@4JA DD 018cH ; `ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0CPreserveLastError@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0CPreserveLastError@ATL@@QAE@XZ@4JA DD 0186H ; `ATL::CPreserveLastError::CPreserveLastError'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ@4JA DD 01a6H ; `ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??CImageStaticInitialize@CImage@ATL@@CA_NXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??CImageStaticInitialize@CImage@ATL@@CA_NXZ@4JA DD 01f5H ; `ATL::CImage::CImageStaticInitialize'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4JA DD 01efH ; `ATL::CImage::GetCDCCacheInstance'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CC@IMNJGBED@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@IMNJGBED@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o'
	DB	00H, 'l', 00H, 's', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z@4JA DD 0175H ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::__autoclassinit2'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4JA DD 01baH ; `ATL::CImage::GetInitGDIPlusInstance'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ@4JA DD 0112H ; `ATL::CAtlBaseModule::GetModuleInstance'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ@4JA DD 0175H ; `ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1IO@PCOKKAMF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
CONST	SEGMENT
??_C@_1IO@PCOKKAMF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '\', 00H, 'm'
	DB	00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'u'
	DB	00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '0', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm?$AAa?$AAn?$AAy?$AA?5?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAd?$AAe@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm?$AAa?$AAn?$AAy?$AA?5?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAd?$AAe@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??RegisterCategory@CTrace@ATL@@SAXPB_WI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RegisterCategory@CTrace@ATL@@SAXPB_WI@Z@4JA DD 0149H ; `ATL::CTrace::RegisterCategory'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ@4JA DD 076H ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z@4JA DD 0119H ; `ATL::CTrace::TraceV'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ@4JA DD 0a0H ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ@4JA DD 0d7H ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CE@NAJDPMNB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@NAJDPMNB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z@4JA DD 0ecH ; `ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]'::`1'::__LINE__Var
_DATA	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ ; __vcrt_va_start_verify_argument_type<wchar_t const * const>
PUBLIC	_swprintf_s
PUBLIC	??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ ; __vcrt_va_start_verify_argument_type<wchar_t const *>
PUBLIC	?GetCategoryName@CTrace@ATL@@CAPA_WI@Z		; ATL::CTrace::GetCategoryName
PUBLIC	?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z		; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z	; ATL::CTrace::RegisterCategory
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??1CWin32Heap@ATL@@UAE@XZ			; ATL::CWin32Heap::~CWin32Heap
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	??0CAtlComModule@ATL@@QAE@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QAEXXZ			; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z	; ATL::CAtlStringMgr::CAtlStringMgr
PUBLIC	??1CAtlStringMgr@ATL@@UAE@XZ			; ATL::CAtlStringMgr::~CAtlStringMgr
PUBLIC	?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::GetInstance
PUBLIC	??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
PUBLIC	??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
PUBLIC	?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ ; ATL::CImage::GetInitGDIPlusInstance
PUBLIC	?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ ; ATL::CImage::GetCDCCacheInstance
PUBLIC	??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::`dynamic atexit destructor for 'gdiPlus''
PUBLIC	??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ ; `ATL::CImage::GetCDCCacheInstance'::`2'::`dynamic atexit destructor for 'cache''
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	?isInitialized@CAtlStringMgr@ATL@@0_NA		; ATL::CAtlStringMgr::isInitialized
PUBLIC	?isCImageStaticInitialized@CImage@ATL@@0_NA	; ATL::CImage::isCImageStaticInitialized
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__DecodePointer@4:PROC
EXTRN	__imp__RaiseException@16:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
EXTRN	__imp__HeapDestroy@4:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapReAlloc@16:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__HeapSize@12:PROC
EXTRN	__imp__GetProcessHeap@0:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__InitializeCriticalSectionEx@12:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__DeleteDC@4:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp____stdio_common_vswprintf:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp____stdio_common_vsnwprintf_s:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	_GdiplusShutdown@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_BSS	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 028H DUP (?)	; ATL::_AtlComModule
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
;	COMDAT ?isInitialized@CAtlStringMgr@ATL@@0_NA
_BSS	SEGMENT
?isInitialized@CAtlStringMgr@ATL@@0_NA DB 01H DUP (?)	; ATL::CAtlStringMgr::isInitialized
_BSS	ENDS
;	COMDAT ?isCImageStaticInitialized@CImage@ATL@@0_NA
_BSS	SEGMENT
?isCImageStaticInitialized@CImage@ATL@@0_NA DB 01H DUP (?) ; ATL::CImage::isCImageStaticInitialized
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceGeneral$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceGeneral@ATL@@YAXXZ ; ATL::atlTraceGeneral$initializer$
CRT$XCU	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??__F_AtlComModule@ATL@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__F_AtlComModule@ATL@@YAXXZ$0
__ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__F_AtlComModule@ATL@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCOM$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCOM@ATL@@YAXXZ ; ATL::atlTraceCOM$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceQI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceQI@ATL@@YAXXZ ; ATL::atlTraceQI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRegistrar$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRegistrar@ATL@@YAXXZ ; ATL::atlTraceRegistrar$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRefcount$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceRefcount@ATL@@YAXXZ ; ATL::atlTraceRefcount$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceWindowing$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceWindowing@ATL@@YAXXZ ; ATL::atlTraceWindowing$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceControls$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceControls@ATL@@YAXXZ ; ATL::atlTraceControls$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceHosting$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceHosting@ATL@@YAXXZ ; ATL::atlTraceHosting$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBClient$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBClient@ATL@@YAXXZ ; ATL::atlTraceDBClient$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBProvider$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceDBProvider@ATL@@YAXXZ ; ATL::atlTraceDBProvider$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSnapin$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSnapin@ATL@@YAXXZ ; ATL::atlTraceSnapin$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceNotImpl$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceNotImpl@ATL@@YAXXZ ; ATL::atlTraceNotImpl$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceAllocation$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceAllocation@ATL@@YAXXZ ; ATL::atlTraceAllocation$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceTime$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceTime@ATL@@YAXXZ ; ATL::atlTraceTime$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCache$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceCache@ATL@@YAXXZ ; ATL::atlTraceCache$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceStencil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceStencil@ATL@@YAXXZ ; ATL::atlTraceStencil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceMap$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceMap@ATL@@YAXXZ ; ATL::atlTraceMap$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceUtil$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceUtil@ATL@@YAXXZ ; ATL::atlTraceUtil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSecurity$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSecurity@ATL@@YAXXZ ; ATL::atlTraceSecurity$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSync$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceSync@ATL@@YAXXZ ; ATL::atlTraceSync$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceISAPI$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceISAPI@ATL@@YAXXZ ; ATL::atlTraceISAPI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZA DD FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??isInitialized$initializer$@CAtlStringMgr@ATL@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ ; ??isInitialized$initializer$@CAtlStringMgr@ATL@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??isCImageStaticInitialized$initializer$@CImage@ATL@@0P6AXXZA@@3P6AXXZA DD FLAT:??__E?isCImageStaticInitialized@CImage@ATL@@0_NA@@YAXXZ ; ??isCImageStaticInitialized$initializer$@CImage@ATL@@0P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??__E?isCImageStaticInitialized@CImage@ATL@@0_NA@@YAXXZ
text$di	SEGMENT
??__E?isCImageStaticInitialized@CImage@ATL@@0_NA@@YAXXZ PROC ; `dynamic initializer for 'ATL::CImage::isCImageStaticInitialized'', COMDAT

; 502  : 		GetInitGDIPlusInstance();

  00000	e8 00 00 00 00	 call	 ?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ ; ATL::CImage::GetInitGDIPlusInstance

; 503  : 		GetCDCCacheInstance();

  00005	e8 00 00 00 00	 call	 ?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ ; ATL::CImage::GetCDCCacheInstance

; 510  : __declspec(selectany) bool CImage::isCImageStaticInitialized = CImage::CImageStaticInitialize();

  0000a	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?isCImageStaticInitialized@CImage@ATL@@0_NA, 1 ; ATL::CImage::isCImageStaticInitialized
  00011	c3		 ret	 0
??__E?isCImageStaticInitialized@CImage@ATL@@0_NA@@YAXXZ ENDP ; `dynamic initializer for 'ATL::CImage::isCImageStaticInitialized''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ
text$yd	SEGMENT
??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ PROC ; `ATL::CImage::GetCDCCacheInstance'::`2'::`dynamic atexit destructor for 'cache'', COMDAT
  00000	56		 push	 esi
  00001	57		 push	 edi

; 609  : 	for( iDC = 0; iDC < CIMAGE_DC_CACHE_SIZE; iDC++ )

  00002	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__DeleteDC@4
  00008	be 00 00 00 00	 mov	 esi, OFFSET ?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A ; `ATL::CImage::GetCDCCacheInstance'::`2'::cache
  0000d	0f 1f 00	 npad	 3
$LL6@dynamic:

; 610  : 	{
; 611  : 		if( m_ahDCs[iDC] != NULL )

  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	85 c0		 test	 eax, eax
  00014	74 03		 je	 SHORT $LN4@dynamic

; 612  : 		{
; 613  : 			::DeleteDC( m_ahDCs[iDC] );

  00016	50		 push	 eax
  00017	ff d7		 call	 edi
$LN4@dynamic:

; 609  : 	for( iDC = 0; iDC < CIMAGE_DC_CACHE_SIZE; iDC++ )

  00019	83 c6 04	 add	 esi, 4
  0001c	81 fe 10 00 00
	00		 cmp	 esi, OFFSET ?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A+16
  00022	7c ec		 jl	 SHORT $LL6@dynamic
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ ENDP ; `ATL::CImage::GetCDCCacheInstance'::`2'::`dynamic atexit destructor for 'cache''
text$yd	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ
text$yd	SEGMENT
??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ PROC ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::`dynamic atexit destructor for 'gdiPlus'', COMDAT

; 571  : 	EnterCriticalSection(&m_sect);

  00000	68 04 00 00 00	 push	 OFFSET ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A+4
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 572  : 	if( m_dwToken != 0 )

  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN6@dynamic

; 573  : 	{
; 574  : 		Gdiplus::GdiplusShutdown( m_dwToken );

  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _GdiplusShutdown@4
$LN6@dynamic:

; 575  : 	}
; 576  : 	m_dwToken = 0;
; 577  : 	LeaveCriticalSection(&m_sect);

  0001a	68 04 00 00 00	 push	 OFFSET ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A+4
  0001f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A, 0
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 544  : 	DeleteCriticalSection(&m_sect);

  0002f	68 04 00 00 00	 push	 OFFSET ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A+4
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  0003a	c3		 ret	 0
??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ ENDP ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::`dynamic atexit destructor for 'gdiPlus''
text$yd	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ?CImageStaticInitialize@CImage@ATL@@CA_NXZ
_TEXT	SEGMENT
?CImageStaticInitialize@CImage@ATL@@CA_NXZ PROC		; ATL::CImage::CImageStaticInitialize, COMDAT

; 502  : 		GetInitGDIPlusInstance();

  00000	e8 00 00 00 00	 call	 ?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ ; ATL::CImage::GetInitGDIPlusInstance

; 503  : 		GetCDCCacheInstance();

  00005	e8 00 00 00 00	 call	 ?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ ; ATL::CImage::GetCDCCacheInstance

; 504  : 		return true;

  0000a	b0 01		 mov	 al, 1

; 505  : 	}

  0000c	c3		 ret	 0
?CImageStaticInitialize@CImage@ATL@@CA_NXZ ENDP		; ATL::CImage::CImageStaticInitialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ
_TEXT	SEGMENT
?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ PROC ; ATL::CImage::GetCDCCacheInstance, COMDAT

; 496  : 		static CDCCache cache;

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0000c	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
  00014	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0001a	7f 06		 jg	 SHORT $LN21@GetCDCCach
$LN19@GetCDCCach:

; 497  : 		return &cache;

  0001c	b8 00 00 00 00	 mov	 eax, OFFSET ?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A ; `ATL::CImage::GetCDCCacheInstance'::`2'::cache

; 498  : 	}

  00021	c3		 ret	 0
$LN21@GetCDCCach:

; 496  : 		static CDCCache cache;

  00022	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
  00027	e8 00 00 00 00	 call	 __Init_thread_header
  0002c	83 c4 04	 add	 esp, 4
  0002f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA, -1 ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
  00036	75 e4		 jne	 SHORT $LN19@GetCDCCach
  00038	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  0003c	68 00 00 00 00	 push	 OFFSET ??__Fcache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ@YAXXZ ; `ATL::CImage::GetCDCCacheInstance'::`2'::`dynamic atexit destructor for 'cache''
  00041	c5 fa 7f 05 00
	00 00 00	 vmovdqu XMMWORD PTR ?cache@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4V423@A, xmm0
  00049	e8 00 00 00 00	 call	 _atexit
  0004e	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tCDCCacheInstance,signed char,ATL::CImage::CDCCache const volatile __based() &,void,int, ?? &>
  00053	e8 00 00 00 00	 call	 __Init_thread_footer
  00058	83 c4 08	 add	 esp, 8
  0005b	eb bf		 jmp	 SHORT $LN19@GetCDCCach
?GetCDCCacheInstance@CImage@ATL@@CAPAVCDCCache@12@XZ ENDP ; ATL::CImage::GetCDCCacheInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ
_TEXT	SEGMENT
?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ PROC ; ATL::CImage::GetInitGDIPlusInstance, COMDAT

; 443  : 		static CInitGDIPlus gdiPlus;

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0000c	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
  00014	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0001a	7e 02		 jle	 SHORT $LN13@GetInitGDI
  0001c	eb 06		 jmp	 SHORT $LN16@GetInitGDI
$LN13@GetInitGDI:

; 444  : 		return &gdiPlus;

  0001e	b8 00 00 00 00	 mov	 eax, OFFSET ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::gdiPlus

; 445  : 	}

  00023	c3		 ret	 0
$LN16@GetInitGDI:

; 443  : 		static CInitGDIPlus gdiPlus;

  00024	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
  00029	e8 00 00 00 00	 call	 __Init_thread_header
  0002e	83 c4 04	 add	 esp, 4
  00031	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA, -1 ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
  00038	75 e4		 jne	 SHORT $LN13@GetInitGDI
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  0003a	6a 00		 push	 0
  0003c	6a 00		 push	 0
  0003e	68 04 00 00 00	 push	 OFFSET ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A+4
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h

; 533  : 	m_dwToken( 0 ), m_nCImageObjects( 0 ), m_dwLastError(S_OK)

  00043	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A, 0
  0004d	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A+28, 0
  00057	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A+32, 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h

; 535  : 	if (!_AtlInitializeCriticalSectionEx(&m_sect, 0, 0))

  00067	85 c0		 test	 eax, eax
  00069	75 1b		 jne	 SHORT $LN12@GetInitGDI

; 536  : 	{
; 537  : 		m_dwLastError = HRESULT_FROM_WIN32(GetLastError());

  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00071	85 c0		 test	 eax, eax
  00073	7e 0a		 jle	 SHORT $LN15@GetInitGDI
  00075	0f b7 c0	 movzx	 eax, ax
  00078	0d 00 00 07 80	 or	 eax, -2147024896	; 80070000H
  0007d	eb 00		 jmp	 SHORT $LN15@GetInitGDI
$LN15@GetInitGDI:
  0007f	a3 20 00 00 00	 mov	 DWORD PTR ?gdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4V423@A+32, eax
  00084	eb 00		 jmp	 SHORT $LN12@GetInitGDI
$LN12@GetInitGDI:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h

; 443  : 		static CInitGDIPlus gdiPlus;

  00086	68 00 00 00 00	 push	 OFFSET ??__FgdiPlus@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ@YAXXZ ; `ATL::CImage::GetInitGDIPlusInstance'::`2'::`dynamic atexit destructor for 'gdiPlus''
  0008b	e8 00 00 00 00	 call	 _atexit
  00090	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@23@XZ@4HA ; TSS0<`template-parameter-2',ATL::CImage::tInitGDIPlusInstance,signed char,ATL::CImage::CInitGDIPlus const volatile __based() &,void,int, ?? &>
  00095	e8 00 00 00 00	 call	 __Init_thread_footer
  0009a	83 c4 08	 add	 esp, 8
  0009d	e9 7c ff ff ff	 jmp	 $LN13@GetInitGDI
?GetInitGDIPlusInstance@CImage@ATL@@CAPAVCInitGDIPlus@12@XZ ENDP ; ATL::CImage::GetInitGDIPlusInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ?ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ
_TEXT	SEGMENT
?ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ PROC	; ATL::CImage::CInitGDIPlus::ReleaseGDIPlus, COMDAT
; _this$ = ecx

; 570  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 571  : 	EnterCriticalSection(&m_sect);

  00004	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00007	57		 push	 edi
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 572  : 	if( m_dwToken != 0 )

  0000e	8b 06		 mov	 eax, DWORD PTR [esi]
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN2@ReleaseGDI

; 573  : 	{
; 574  : 		Gdiplus::GdiplusShutdown( m_dwToken );

  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _GdiplusShutdown@4
$LN2@ReleaseGDI:

; 575  : 	}
; 576  : 	m_dwToken = 0;
; 577  : 	LeaveCriticalSection(&m_sect);

  0001a	57		 push	 edi
  0001b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi

; 578  : }

  00029	c3		 ret	 0
?ReleaseGDIPlus@CInitGDIPlus@CImage@ATL@@QAEXXZ ENDP	; ATL::CImage::CInitGDIPlus::ReleaseGDIPlus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??1CInitGDIPlus@CImage@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CInitGDIPlus@CImage@ATL@@QAE@XZ PROC			; ATL::CImage::CInitGDIPlus::~CInitGDIPlus, COMDAT
; _this$ = ecx

; 542  : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 571  : 	EnterCriticalSection(&m_sect);

  00004	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00007	56		 push	 esi
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 572  : 	if( m_dwToken != 0 )

  0000e	8b 07		 mov	 eax, DWORD PTR [edi]
  00010	85 c0		 test	 eax, eax
  00012	74 06		 je	 SHORT $LN4@CInitGDIPl

; 573  : 	{
; 574  : 		Gdiplus::GdiplusShutdown( m_dwToken );

  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 _GdiplusShutdown@4
$LN4@CInitGDIPl:

; 575  : 	}
; 576  : 	m_dwToken = 0;
; 577  : 	LeaveCriticalSection(&m_sect);

  0001a	56		 push	 esi
  0001b	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 543  : 	ReleaseGDIPlus();
; 544  : 	DeleteCriticalSection(&m_sect);

  00027	56		 push	 esi
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi

; 545  : }

  00030	c3		 ret	 0
??1CInitGDIPlus@CImage@ATL@@QAE@XZ ENDP			; ATL::CImage::CInitGDIPlus::~CInitGDIPlus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??0CInitGDIPlus@CImage@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CInitGDIPlus@CImage@ATL@@QAE@XZ PROC			; ATL::CImage::CInitGDIPlus::CInitGDIPlus, COMDAT
; _this$ = ecx

; 534  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h

; 535  : 	if (!_AtlInitializeCriticalSectionEx(&m_sect, 0, 0))

  00007	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00010	50		 push	 eax
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h

; 533  : 	m_dwToken( 0 ), m_nCImageObjects( 0 ), m_dwLastError(S_OK)

  00011	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  00018	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h

; 535  : 	if (!_AtlInitializeCriticalSectionEx(&m_sect, 0, 0))

  00025	85 c0		 test	 eax, eax
  00027	75 15		 jne	 SHORT $LN10@CInitGDIPl

; 537  : 		m_dwLastError = HRESULT_FROM_WIN32(GetLastError());

  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0002f	85 c0		 test	 eax, eax
  00031	7e 08		 jle	 SHORT $LN9@CInitGDIPl
  00033	0f b7 c0	 movzx	 eax, ax
  00036	0d 00 00 07 80	 or	 eax, -2147024896	; 80070000H
$LN9@CInitGDIPl:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h

; 537  : 		m_dwLastError = HRESULT_FROM_WIN32(GetLastError());

  0003b	89 46 20	 mov	 DWORD PTR [esi+32], eax
$LN10@CInitGDIPl:

; 538  : 	}
; 539  : }

  0003e	8b c6		 mov	 eax, esi
  00040	5e		 pop	 esi
  00041	c3		 ret	 0
??0CInitGDIPlus@CImage@ATL@@QAE@XZ ENDP			; ATL::CImage::CInitGDIPlus::CInitGDIPlus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??1CDCCache@CImage@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CDCCache@CImage@ATL@@QAE@XZ PROC			; ATL::CImage::CDCCache::~CDCCache, COMDAT
; _this$ = ecx

; 606  : {

  00000	53		 push	 ebx

; 607  : 	int iDC;
; 608  : 
; 609  : 	for( iDC = 0; iDC < CIMAGE_DC_CACHE_SIZE; iDC++ )

  00001	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__DeleteDC@4
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	33 f6		 xor	 esi, esi
  0000d	0f 1f 00	 npad	 3
$LL4@CDCCache:

; 610  : 	{
; 611  : 		if( m_ahDCs[iDC] != NULL )

  00010	8b 04 b7	 mov	 eax, DWORD PTR [edi+esi*4]
  00013	85 c0		 test	 eax, eax
  00015	74 03		 je	 SHORT $LN2@CDCCache

; 612  : 		{
; 613  : 			::DeleteDC( m_ahDCs[iDC] );

  00017	50		 push	 eax
  00018	ff d3		 call	 ebx
$LN2@CDCCache:

; 607  : 	int iDC;
; 608  : 
; 609  : 	for( iDC = 0; iDC < CIMAGE_DC_CACHE_SIZE; iDC++ )

  0001a	46		 inc	 esi
  0001b	83 fe 04	 cmp	 esi, 4
  0001e	7c f0		 jl	 SHORT $LL4@CDCCache

; 614  : 		}
; 615  : 	}
; 616  : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	c3		 ret	 0
??1CDCCache@CImage@ATL@@QAE@XZ ENDP			; ATL::CImage::CDCCache::~CDCCache
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlimage.h
;	COMDAT ??0CDCCache@CImage@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CDCCache@CImage@ATL@@QAE@XZ PROC			; ATL::CImage::CDCCache::CDCCache, COMDAT
; _this$ = ecx

; 597  : 	int iDC;
; 598  : 
; 599  : 	for( iDC = 0; iDC < CIMAGE_DC_CACHE_SIZE; iDC++ )
; 600  : 	{
; 601  : 		m_ahDCs[iDC] = NULL;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 602  : 	}
; 603  : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001d	c3		 ret	 0
??0CDCCache@CImage@ATL@@QAE@XZ ENDP			; ATL::CImage::CDCCache::CDCCache
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ
text$di	SEGMENT
??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ PROC	; `dynamic initializer for 'ATL::CAtlStringMgr::isInitialized'', COMDAT

; 158  : 		GetInstance();

  00000	e8 00 00 00 00	 call	 ?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::GetInstance

; 165  : __declspec(selectany) bool CAtlStringMgr::isInitialized = CAtlStringMgr::StaticInitialize();

  00005	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA, 1 ; ATL::CAtlStringMgr::isInitialized
  0000c	c3		 ret	 0
??__E?isInitialized@CAtlStringMgr@ATL@@0_NA@@YAXXZ ENDP	; `dynamic initializer for 'ATL::CAtlStringMgr::isInitialized''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ??$AtlAlignUp@H@ATL@@YGHHK@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
_nAlign$ = 12						; size = 4
??$AtlAlignUp@H@ATL@@YGHHK@Z PROC			; ATL::AtlAlignUp<int>, COMDAT

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 29   : 	return( N( (n+(nAlign-1))&~(N( nAlign )-1) ) );

  00003	8b 55 0c	 mov	 edx, DWORD PTR _nAlign$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  00009	49		 dec	 ecx
  0000a	03 ca		 add	 ecx, edx
  0000c	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  0000f	c4 e2 78 f2 c1	 andn	 eax, eax, ecx

; 30   : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$AtlAlignUp@H@ATL@@YGHHK@Z ENDP			; ATL::AtlAlignUp<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ
text$yd	SEGMENT
??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ PROC ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr'', COMDAT

; 44   : 	{

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A, OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 45   : 		isInitialized = false;

  0000a	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA, 0 ; ATL::CAtlStringMgr::isInitialized
  00011	c3		 ret	 0
??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ENDP ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
text$yd	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ
text$yd	SEGMENT
??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ PROC ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap'', COMDAT

; 111  : 		if( m_bOwnHeap && (m_hHeap != NULL) )

  00000	80 3d 08 00 00
	00 00		 cmp	 BYTE PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A+8, 0
  00007	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A, OFFSET ??_7CWin32Heap@ATL@@6B@
  00011	74 37		 je	 SHORT $LN6@dynamic
  00013	a1 04 00 00 00	 mov	 eax, DWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A+4
  00018	85 c0		 test	 eax, eax
  0001a	74 2e		 je	 SHORT $LN6@dynamic

; 112  : 		{
; 113  : 			BOOL bSuccess;
; 114  : 
; 115  : 			bSuccess = ::HeapDestroy( m_hHeap );

  0001c	50		 push	 eax
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4

; 116  : 			ATLASSERT( bSuccess );

  00023	85 c0		 test	 eax, eax
  00025	75 23		 jne	 SHORT $LN6@dynamic
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AA@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00031	50		 push	 eax
  00032	6a 74		 push	 116			; 00000074H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@EFGHAAKH@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN6@dynamic
  00049	cc		 int	 3
$LN6@dynamic:
  0004a	c3		 ret	 0
??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ENDP ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
text$yd	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ??_GCAtlStringMgr@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCAtlStringMgr@ATL@@UAEPAXI@Z PROC			; ATL::CAtlStringMgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx

; 44   : 	{

  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 45   : 		isInitialized = false;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA, 0 ; ATL::CAtlStringMgr::isInitialized
  00017	74 0b		 je	 SHORT $LN6@scalar
  00019	6a 1c		 push	 28			; 0000001cH
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00021	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00024	8b c6		 mov	 eax, esi
  00026	5e		 pop	 esi
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??_GCAtlStringMgr@ATL@@UAEPAXI@Z ENDP			; ATL::CAtlStringMgr::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@CAtlStringMgr@ATL@@QAEXI@Z
_TEXT	SEGMENT
_classSize$ = 8						; size = 4
?__autoclassinit2@CAtlStringMgr@ATL@@QAEXI@Z PROC	; ATL::CAtlStringMgr::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _classSize$[ebp]
  00006	6a 00		 push	 0
  00008	51		 push	 ecx
  00009	e8 00 00 00 00	 call	 _memset
  0000e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?__autoclassinit2@CAtlStringMgr@ATL@@QAEXI@Z ENDP	; ATL::CAtlStringMgr::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ
_TEXT	SEGMENT
?StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ PROC	; ATL::CAtlStringMgr::StaticInitialize, COMDAT

; 158  : 		GetInstance();

  00000	e8 00 00 00 00	 call	 ?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::CAtlStringMgr::GetInstance

; 159  : 		return true;

  00005	b0 01		 mov	 al, 1

; 160  : 	}

  00007	c3		 ret	 0
?StaticInitialize@CAtlStringMgr@ATL@@CA_NXZ ENDP	; ATL::CAtlStringMgr::StaticInitialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ PROC	; ATL::CAtlStringMgr::Clone, COMDAT
; _this$ = ecx

; 149  : 		return this;

  00000	8b c1		 mov	 eax, ecx

; 150  : 	}

  00002	c3		 ret	 0
?Clone@CAtlStringMgr@ATL@@UAEPAUIAtlStringMgr@2@XZ ENDP	; ATL::CAtlStringMgr::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ PROC ; ATL::CAtlStringMgr::GetNilString, COMDAT
; _this$ = ecx

; 143  : 	{

  00000	56		 push	 esi

; 144  : 		m_nil.AddRef();

  00001	8d 71 08	 lea	 esi, DWORD PTR [ecx+8]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h

; 64   : 		ATLASSERT(nRefs > 0);

  00004	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  00008	57		 push	 edi
  00009	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]
  0000c	7f 24		 jg	 SHORT $LN6@GetNilStri
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@BLGCOAPB@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00018	6a 00		 push	 0
  0001a	6a 40		 push	 64			; 00000040H
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@IDFEEAEM@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00021	6a 02		 push	 2
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00029	83 c4 18	 add	 esp, 24			; 00000018H
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	75 01		 jne	 SHORT $LN6@GetNilStri
  00031	cc		 int	 3
$LN6@GetNilStri:

; 65   : 		_InterlockedIncrement(&nRefs);

  00032	f0 ff 07	 lock	  inc	 DWORD PTR [edi]
  00035	5f		 pop	 edi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 145  : 		return &m_nil;

  00036	8b c6		 mov	 eax, esi
  00038	5e		 pop	 esi

; 146  : 	}

  00039	c3		 ret	 0
?GetNilString@CAtlStringMgr@ATL@@UAEPAUCStringData@2@XZ ENDP ; ATL::CAtlStringMgr::GetNilString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z
_TEXT	SEGMENT
_pData$GSCopy$1$ = -8					; size = 4
_this$GSCopy$1$ = -4					; size = 4
_pData$ = 8						; size = 4
_nChars$ = 12						; size = 4
_nCharSize$ = 16					; size = 4
?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z PROC ; ATL::CAtlStringMgr::Reallocate, COMDAT
; _this$ = ecx

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	8b 55 08	 mov	 edx, DWORD PTR _pData$[ebp]
  00009	56		 push	 esi

; 113  : 		ATLENSURE_RETURN_VAL( nChars>=0, NULL );

  0000a	8b 75 0c	 mov	 esi, DWORD PTR _nChars$[ebp]
  0000d	8b c6		 mov	 eax, esi
  0000f	f7 d0		 not	 eax
  00011	89 4d fc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00014	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00017	89 55 f8	 mov	 DWORD PTR _pData$GSCopy$1$[ebp], edx
  0001a	85 c0		 test	 eax, eax
  0001c	75 2c		 jne	 SHORT $LN2@Reallocate
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00028	50		 push	 eax
  00029	6a 71		 push	 113			; 00000071H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00030	6a 02		 push	 2
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00038	83 c4 18	 add	 esp, 24			; 00000018H
  0003b	83 f8 01	 cmp	 eax, 1
  0003e	75 01		 jne	 SHORT $LN41@Reallocate
  00040	cc		 int	 3
$LN41@Reallocate:
  00041	33 c0		 xor	 eax, eax
  00043	5e		 pop	 esi

; 141  : 	}

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Reallocate:

; 114  : 		ATLASSERT( pData->pStringMgr == this );

  0004a	39 0a		 cmp	 DWORD PTR [edx], ecx
  0004c	74 27		 je	 SHORT $LN16@Reallocate
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00058	6a 00		 push	 0
  0005a	6a 72		 push	 114			; 00000072H
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00061	6a 02		 push	 2
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	83 f8 01	 cmp	 eax, 1
  0006f	75 01		 jne	 SHORT $LN46@Reallocate
  00071	cc		 int	 3
$LN46@Reallocate:
  00072	8b 4d fc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
$LN16@Reallocate:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00075	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0007a	2b c6		 sub	 eax, esi
  0007c	83 f8 01	 cmp	 eax, 1
  0007f	7c c0		 jl	 SHORT $LN41@Reallocate

; 104  : 	*ptResult= tLeft + tRight;

  00081	46		 inc	 esi
  00082	57		 push	 edi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h

; 29   : 	return( N( (n+(nAlign-1))&~(N( nAlign )-1) ) );

  00083	8d 7e 07	 lea	 edi, DWORD PTR [esi+7]
  00086	83 e7 f8	 and	 edi, -8			; fffffff8H
  00089	3b f7		 cmp	 esi, edi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 126  : 		ATLENSURE_RETURN_VAL( nChars<=nAlignedChars, NULL );

  0008b	7e 2e		 jle	 SHORT $LN5@Reallocate
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00097	6a 00		 push	 0
  00099	6a 7e		 push	 126			; 0000007eH
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  000a0	6a 02		 push	 2
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000a8	83 c4 18	 add	 esp, 24			; 00000018H
  000ab	83 f8 01	 cmp	 eax, 1
  000ae	75 01		 jne	 SHORT $LN17@Reallocate
  000b0	cc		 int	 3
$LN17@Reallocate:
  000b1	5f		 pop	 edi
  000b2	33 c0		 xor	 eax, eax
  000b4	5e		 pop	 esi

; 141  : 	}

  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Reallocate:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 181  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  000bb	8b c7		 mov	 eax, edi
  000bd	f7 65 10	 mul	 DWORD PTR _nCharSize$[ebp]

; 182  : 	if(i64Result>ULONG_MAX)

  000c0	85 d2		 test	 edx, edx
  000c2	77 ed		 ja	 SHORT $LN17@Reallocate
  000c4	72 05		 jb	 SHORT $LN45@Reallocate
  000c6	83 f8 ff	 cmp	 eax, -1
  000c9	77 e6		 ja	 SHORT $LN17@Reallocate
$LN45@Reallocate:

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  000cb	83 f8 ef	 cmp	 eax, -17		; ffffffefH
  000ce	77 e1		 ja	 SHORT $LN17@Reallocate
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 133  : 		pNewData = static_cast< CStringData* >( m_pMemMgr->Reallocate( pData, nTotalSize ) );

  000d0	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 104  : 	*ptResult= tLeft + tRight;

  000d3	83 c0 10	 add	 eax, 16			; 00000010H
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 133  : 		pNewData = static_cast< CStringData* >( m_pMemMgr->Reallocate( pData, nTotalSize ) );

  000d6	50		 push	 eax
  000d7	ff 75 f8	 push	 DWORD PTR _pData$GSCopy$1$[ebp]
  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	ff 52 08	 call	 DWORD PTR [edx+8]
  000df	8b c8		 mov	 ecx, eax

; 134  : 		if( pNewData == NULL )

  000e1	85 c9		 test	 ecx, ecx
  000e3	74 cc		 je	 SHORT $LN17@Reallocate

; 135  : 		{
; 136  : 			return NULL;
; 137  : 		}
; 138  : 		pNewData->nAllocLength = nAlignedChars - 1;

  000e5	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  000e8	5f		 pop	 edi
  000e9	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 139  : 
; 140  : 		return pNewData;

  000ec	8b c1		 mov	 eax, ecx
  000ee	5e		 pop	 esi

; 141  : 	}

  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 0c 00	 ret	 12			; 0000000cH
?Reallocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@PAU32@HH@Z ENDP ; ATL::CAtlStringMgr::Reallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z PROC	; ATL::CAtlStringMgr::Free, COMDAT
; _this$ = ecx

; 102  : 	{		

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 103  : 		ATLASSUME(pData != NULL);

  00005	8b 75 08	 mov	 esi, DWORD PTR _pData$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	85 f6		 test	 esi, esi
  0000c	75 23		 jne	 SHORT $LN2@Free
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@IEBIBJEI@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00018	56		 push	 esi
  00019	6a 67		 push	 103			; 00000067H
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00020	6a 02		 push	 2
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00028	83 c4 18	 add	 esp, 24			; 00000018H
  0002b	83 f8 01	 cmp	 eax, 1
  0002e	75 01		 jne	 SHORT $LN2@Free
  00030	cc		 int	 3
$LN2@Free:

; 104  : 		ATLASSERT(pData->pStringMgr == this);

  00031	39 1e		 cmp	 DWORD PTR [esi], ebx
  00033	74 24		 je	 SHORT $LN7@Free
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1DE@KEEBDKDC@?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0003f	6a 00		 push	 0
  00041	6a 68		 push	 104			; 00000068H
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00048	6a 02		 push	 2
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00050	83 c4 18	 add	 esp, 24			; 00000018H
  00053	83 f8 01	 cmp	 eax, 1
  00056	75 01		 jne	 SHORT $LN7@Free
  00058	cc		 int	 3
$LN7@Free:

; 105  : 			
; 106  : 		m_pMemMgr->Free( pData );

  00059	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0005c	56		 push	 esi
  0005d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005f	ff 50 04	 call	 DWORD PTR [eax+4]
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx

; 107  : 	}

  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?Free@CAtlStringMgr@ATL@@UAEXPAUCStringData@2@@Z ENDP	; ATL::CAtlStringMgr::Free
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z
_TEXT	SEGMENT
_nChars$ = 8						; size = 4
_nCharSize$ = 12					; size = 4
?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z PROC ; ATL::CAtlStringMgr::Allocate, COMDAT
; _this$ = ecx

; 69   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 70   : 		ATLENSURE_RETURN_VAL( nChars>=0, NULL );

  00003	8b 55 08	 mov	 edx, DWORD PTR _nChars$[ebp]
  00006	8b c2		 mov	 eax, edx
  00008	f7 d0		 not	 eax
  0000a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0000d	57		 push	 edi
  0000e	8b f9		 mov	 edi, ecx
  00010	85 c0		 test	 eax, eax
  00012	75 2a		 jne	 SHORT $LN2@Allocate
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0001e	50		 push	 eax
  0001f	6a 46		 push	 70			; 00000046H
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00026	6a 02		 push	 2
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0002e	83 c4 18	 add	 esp, 24			; 00000018H
  00031	83 f8 01	 cmp	 eax, 1
  00034	75 01		 jne	 SHORT $LN40@Allocate
  00036	cc		 int	 3
$LN40@Allocate:
  00037	33 c0		 xor	 eax, eax
  00039	5f		 pop	 edi

; 100  : 	}

  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@Allocate:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  0003e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00043	2b c2		 sub	 eax, edx
  00045	83 f8 01	 cmp	 eax, 1
  00048	7c ed		 jl	 SHORT $LN40@Allocate

; 104  : 	*ptResult= tLeft + tRight;

  0004a	42		 inc	 edx
  0004b	56		 push	 esi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h

; 29   : 	return( N( (n+(nAlign-1))&~(N( nAlign )-1) ) );

  0004c	8d 72 07	 lea	 esi, DWORD PTR [edx+7]
  0004f	83 e6 f8	 and	 esi, -8			; fffffff8H
  00052	3b d6		 cmp	 edx, esi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 82   : 		ATLENSURE_RETURN_VAL( nChars<=nAlignedChars, NULL );

  00054	7e 2c		 jle	 SHORT $LN5@Allocate
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00060	6a 00		 push	 0
  00062	6a 52		 push	 82			; 00000052H
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@MNLJPHBE@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00069	6a 02		 push	 2
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00071	83 c4 18	 add	 esp, 24			; 00000018H
  00074	83 f8 01	 cmp	 eax, 1
  00077	75 01		 jne	 SHORT $LN16@Allocate
  00079	cc		 int	 3
$LN16@Allocate:
  0007a	5e		 pop	 esi
  0007b	33 c0		 xor	 eax, eax
  0007d	5f		 pop	 edi

; 100  : 	}

  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
$LN5@Allocate:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 151  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00082	8b c6		 mov	 eax, esi
  00084	f7 65 0c	 mul	 DWORD PTR _nCharSize$[ebp]

; 152  : 	if(i64Result>UINT_MAX)

  00087	85 d2		 test	 edx, edx
  00089	77 ef		 ja	 SHORT $LN16@Allocate
  0008b	72 05		 jb	 SHORT $LN44@Allocate
  0008d	83 f8 ff	 cmp	 eax, -1
  00090	77 e8		 ja	 SHORT $LN16@Allocate
$LN44@Allocate:

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00092	83 f8 ef	 cmp	 eax, -17		; ffffffefH
  00095	77 e3		 ja	 SHORT $LN16@Allocate
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 89   : 		pData = static_cast< CStringData* >( m_pMemMgr->Allocate( nTotalSize ) );

  00097	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 104  : 	*ptResult= tLeft + tRight;

  0009a	8d 50 10	 lea	 edx, DWORD PTR [eax+16]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 89   : 		pData = static_cast< CStringData* >( m_pMemMgr->Allocate( nTotalSize ) );

  0009d	52		 push	 edx
  0009e	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a0	ff 10		 call	 DWORD PTR [eax]
  000a2	8b c8		 mov	 ecx, eax

; 90   : 		if( pData == NULL )

  000a4	85 c9		 test	 ecx, ecx
  000a6	74 d2		 je	 SHORT $LN16@Allocate

; 91   : 		{
; 92   : 			return( NULL );
; 93   : 		}
; 94   : 		pData->pStringMgr = this;
; 95   : 		pData->nRefs = 1;
; 96   : 		pData->nAllocLength = nAlignedChars - 1;

  000a8	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  000ab	89 39		 mov	 DWORD PTR [ecx], edi
  000ad	5e		 pop	 esi
  000ae	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 97   : 		pData->nDataLength = 0;
; 98   : 
; 99   : 		return( pData );

  000b1	8b c1		 mov	 eax, ecx
  000b3	c7 41 0c 01 00
	00 00		 mov	 DWORD PTR [ecx+12], 1
  000ba	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  000c1	5f		 pop	 edi

; 100  : 	}

  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
?Allocate@CAtlStringMgr@ATL@@UAEPAUCStringData@2@HH@Z ENDP ; ATL::CAtlStringMgr::Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ PROC ; ATL::CAtlStringMgr::GetInstance, COMDAT

; 58   : 		static CWin32Heap strHeap( ::GetProcessHeap() );

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00005	56		 push	 esi
  00006	64 8b 35 00 00
	00 00		 mov	 esi, DWORD PTR fs:__tls_array
  0000d	57		 push	 edi
  0000e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __tls_index
  00014	8b 0c be	 mov	 ecx, DWORD PTR [esi+edi*4]
  00017	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0001d	7e 02		 jle	 SHORT $LN2@GetInstanc
  0001f	eb 1c		 jmp	 SHORT $LN16@GetInstanc
$LN2@GetInstanc:

; 59   : 		static CAtlStringMgr strMgr(&strHeap);

  00021	8b 0c be	 mov	 ecx, DWORD PTR [esi+edi*4]
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  00031	0f 8f 93 00 00
	00		 jg	 $LN18@GetInstanc
$LN14@GetInstanc:

; 60   : #pragma warning(pop)
; 61   : 
; 62   : 		return &strMgr;

  00037	b8 00 00 00 00	 mov	 eax, OFFSET ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr

; 63   : 	}

  0003c	c3		 ret	 0
$LN16@GetInstanc:

; 58   : 		static CWin32Heap strHeap( ::GetProcessHeap() );

  0003d	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00042	e8 00 00 00 00	 call	 __Init_thread_header
  00047	83 c4 04	 add	 esp, 4
  0004a	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA, -1 ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00051	75 ce		 jne	 SHORT $LN2@GetInstanc
  00053	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  00057	c5 f9 d6 05 00
	00 00 00	 vmovq	 QWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A, xmm0
  0005f	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A+8, 0
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessHeap@0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h

; 89   : 	{

  0006f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A, OFFSET ??_7CWin32Heap@ATL@@6B@
  00079	a3 04 00 00 00	 mov	 DWORD PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A+4, eax
  0007e	c6 05 08 00 00
	00 00		 mov	 BYTE PTR ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A+8, 0

; 90   : 		ATLASSERT( hHeap != NULL );

  00085	85 c0		 test	 eax, eax
  00087	75 25		 jne	 SHORT $LN10@GetInstanc
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@CLPBKBHG@?$AAh?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00093	50		 push	 eax
  00094	6a 5a		 push	 90			; 0000005aH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@EFGHAAKH@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0009b	6a 02		 push	 2
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000a3	83 c4 18	 add	 esp, 24			; 00000018H
  000a6	83 f8 01	 cmp	 eax, 1
  000a9	75 03		 jne	 SHORT $LN10@GetInstanc
  000ab	cc		 int	 3
  000ac	eb 00		 jmp	 SHORT $LN10@GetInstanc
$LN10@GetInstanc:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 58   : 		static CWin32Heap strHeap( ::GetProcessHeap() );

  000ae	68 00 00 00 00	 push	 OFFSET ??__FstrHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strHeap''
  000b3	e8 00 00 00 00	 call	 _atexit
  000b8	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS0<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  000bd	e8 00 00 00 00	 call	 __Init_thread_footer
  000c2	83 c4 08	 add	 esp, 8
  000c5	e9 57 ff ff ff	 jmp	 $LN2@GetInstanc
$LN18@GetInstanc:

; 59   : 		static CAtlStringMgr strMgr(&strHeap);

  000ca	68 00 00 00 00	 push	 OFFSET ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  000cf	e8 00 00 00 00	 call	 __Init_thread_header
  000d4	83 c4 04	 add	 esp, 4
  000d7	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA, -1 ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  000de	0f 85 53 ff ff
	ff		 jne	 $LN14@GetInstanc
  000e4	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  000e8	68 00 00 00 00	 push	 OFFSET ?strHeap@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4VCWin32Heap@3@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strHeap
  000ed	b9 00 00 00 00	 mov	 ecx, OFFSET ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A ; `ATL::CAtlStringMgr::GetInstance'::`2'::strMgr
  000f2	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A+24, 0
  000fc	c5 fa 7f 05 00
	00 00 00	 vmovdqu XMMWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A, xmm0
  00104	c5 f9 d6 05 10
	00 00 00	 vmovq	 QWORD PTR ?strMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4V23@A+16, xmm0
  0010c	e8 00 00 00 00	 call	 ??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z ; ATL::CAtlStringMgr::CAtlStringMgr
  00111	68 00 00 00 00	 push	 OFFSET ??__FstrMgr@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ@YAXXZ ; `ATL::CAtlStringMgr::GetInstance'::`2'::`dynamic atexit destructor for 'strMgr''
  00116	e8 00 00 00 00	 call	 _atexit
  0011b	68 00 00 00 00	 push	 OFFSET ?$TSS1@?1??GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@3@XZ@4HA ; TSS1<`template-parameter-2',ATL::CAtlStringMgr::tInstance,ATL::IAtlStringMgr * * const volatile,void,int, ?? &>
  00120	e8 00 00 00 00	 call	 __Init_thread_footer
  00125	83 c4 08	 add	 esp, 8
  00128	e9 0a ff ff ff	 jmp	 $LN14@GetInstanc
?GetInstance@CAtlStringMgr@ATL@@SAPAUIAtlStringMgr@2@XZ ENDP ; ATL::CAtlStringMgr::GetInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ??1CAtlStringMgr@ATL@@UAE@XZ
_TEXT	SEGMENT
??1CAtlStringMgr@ATL@@UAE@XZ PROC			; ATL::CAtlStringMgr::~CAtlStringMgr, COMDAT
; _this$ = ecx

; 44   : 	{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CAtlStringMgr@ATL@@6B@

; 45   : 		isInitialized = false;

  00006	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?isInitialized@CAtlStringMgr@ATL@@0_NA, 0 ; ATL::CAtlStringMgr::isInitialized

; 46   : 	}

  0000d	c3		 ret	 0
??1CAtlStringMgr@ATL@@UAE@XZ ENDP			; ATL::CAtlStringMgr::~CAtlStringMgr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h
;	COMDAT ??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z
_TEXT	SEGMENT
_pMemMgr$ = 8						; size = 4
??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z PROC	; ATL::CAtlStringMgr::CAtlStringMgr, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 39   : 		m_pMemMgr( pMemMgr )

  00003	8b 45 08	 mov	 eax, DWORD PTR _pMemMgr$[ebp]
  00006	56		 push	 esi

; 40   : 	{

  00007	8b f1		 mov	 esi, ecx
  00009	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h

; 118  : 		achNil[0] = 0;

  0000c	33 c0		 xor	 eax, eax
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 40   : 	{

  0000e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CAtlStringMgr@ATL@@6B@
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h

; 114  : 		pStringMgr = NULL;

  00014	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 115  : 		nRefs = 2;  // Never gets freed by IAtlStringMgr

  0001b	c7 46 14 02 00
	00 00		 mov	 DWORD PTR [esi+20], 2

; 116  : 		nDataLength = 0;

  00022	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 117  : 		nAllocLength = 0;

  00029	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 118  : 		achNil[0] = 0;

  00030	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 124  : 		ATLASSERT( pStringMgr == NULL );

  00033	39 46 08	 cmp	 DWORD PTR [esi+8], eax
  00036	74 23		 je	 SHORT $LN8@CAtlString
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00042	50		 push	 eax
  00043	6a 7c		 push	 124			; 0000007cH
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@IDFEEAEM@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0004a	6a 02		 push	 2
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00052	83 c4 18	 add	 esp, 24			; 00000018H
  00055	83 f8 01	 cmp	 eax, 1
  00058	75 01		 jne	 SHORT $LN8@CAtlString
  0005a	cc		 int	 3
$LN8@CAtlString:

; 125  : 		pStringMgr = pMgr;

  0005b	89 76 08	 mov	 DWORD PTR [esi+8], esi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlstr.h

; 42   : 	}

  0005e	8b c6		 mov	 eax, esi
  00060	5e		 pop	 esi
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
??0CAtlStringMgr@ATL@@QAE@PAUIAtlMemMgr@1@@Z ENDP	; ATL::CAtlStringMgr::CAtlStringMgr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 2800 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  00000	ff 35 04 00 00
	00		 push	 DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
  00006	68 00 00 00 00	 push	 OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  0000b	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

  00010	a1 20 00 00 00	 mov	 eax, DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32
  00015	85 c0		 test	 eax, eax
  00017	74 14		 je	 SHORT $LN29@dynamic

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

  00019	50		 push	 eax
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00020	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  00023	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+32, 0
$LN29@dynamic:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

  0002d	c7 05 28 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+40, 0
  00037	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A+36, 0
  00041	c3		 ret	 0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2815 : __declspec(selectany) CAtlWinModule _AtlWinModule;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  00005	e8 00 00 00 00	 call	 ??0CAtlWinModule@ATL@@QAE@XZ ; ATL::CAtlWinModule::CAtlWinModule
  0000a	68 00 00 00 00	 push	 OFFSET ??__F_AtlWinModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlWinModule''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CAtlWinModule@ATL@@QAEXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx

; 2800 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  00000	ff 35 04 00 00
	00		 push	 DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
  00006	51		 push	 ecx
  00007	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2801 : 	}

  0000c	c3		 ret	 0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx

; 2794 : 	{

  00000	56		 push	 esi

; 2800 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  00001	ff 35 04 00 00
	00		 push	 DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4

; 2794 : 	{

  00007	8b f1		 mov	 esi, ecx

; 2800 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

  0000f	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00012	85 c0		 test	 eax, eax
  00014	74 11		 je	 SHORT $LN26@CAtlWinMod

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

  00016	50		 push	 eax
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0001d	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  00020	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN26@CAtlWinMod:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

  00027	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  0002e	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00035	5e		 pop	 esi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 2796 : 	}

  00036	c3		 ret	 0
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAtlWinModule@ATL@@QAE@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx

; 2780 : 	CAtlWinModule()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0

; 2783 : 		HRESULT hr = AtlWinModuleInit(this);

  0000b	56		 push	 esi
  0000c	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 110  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  0000f	c5 fa 7f 46 04	 vmovdqu XMMWORD PTR [esi+4], xmm0
  00014	c5 f9 d6 46 14	 vmovq	 QWORD PTR [esi+20], xmm0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00019	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  00020	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00027	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 2782 : 		cbSize = sizeof(_ATL_WIN_MODULE);

  0002e	c7 06 2c 00 00
	00		 mov	 DWORD PTR [esi], 44	; 0000002cH

; 2783 : 		HRESULT hr = AtlWinModuleInit(this);

  00034	e8 00 00 00 00	 call	 ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit

; 2784 : 		if (FAILED(hr))

  00039	85 c0		 test	 eax, eax
  0003b	79 34		 jns	 SHORT $LN12@CAtlWinMod

; 2785 : 		{
; 2786 : 			ATLASSERT(0);

  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00047	6a 00		 push	 0
  00049	68 e2 0a 00 00	 push	 2786			; 00000ae2H
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NONHLJLN@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00053	6a 02		 push	 2
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0005b	83 c4 18	 add	 esp, 24			; 00000018H
  0005e	83 f8 01	 cmp	 eax, 1
  00061	75 01		 jne	 SHORT $LN4@CAtlWinMod
  00063	cc		 int	 3
$LN4@CAtlWinMod:

; 2787 : 			CAtlBaseModule::m_bInitFailed = true;

  00064	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2788 : 			cbSize = 0;

  0006b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN12@CAtlWinMod:

; 2789 : 			return;
; 2790 : 		}
; 2791 : 	}

  00071	8b c6		 mov	 eax, esi
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
__$EHRec$ = -12						; size = 12
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??__F_AtlComModule@ATL@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2451 : 		Term();

  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0002e	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QAEXXZ ; ATL::CAtlComModule::Term

; 2452 : 	}

  00033	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  00038	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
text$yd	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__F_AtlComModule@ATL@@YAXXZ$0:
  00000	e8 00 00 00 00	 call	 ___std_terminate
  00005	c3		 ret	 0
__ehhandler$??__F_AtlComModule@ATL@@YAXXZ:
  00006	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000d	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00010	33 c8		 xor	 ecx, eax
  00012	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00017	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??__F_AtlComModule@ATL@@YAXXZ
  0001c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT

; 2559 : __declspec(selectany) CAtlComModule _AtlComModule;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  00005	e8 00 00 00 00	 call	 ??0CAtlComModule@ATL@@QAE@XZ ; ATL::CAtlComModule::CAtlComModule
  0000a	68 00 00 00 00	 push	 OFFSET ??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CAtlComModule@ATL@@QAEXXZ PROC			; ATL::CAtlComModule::Term, COMDAT
; _this$ = ecx

; 2456 : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 2457 : 		if (cbSize == 0)

  00003	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00006	74 46		 je	 SHORT $LN1@Term

; 2458 : 			return;
; 2459 : 
; 2460 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  00008	56		 push	 esi
  00009	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  0000c	3b 77 0c	 cmp	 esi, DWORD PTR [edi+12]
  0000f	73 2c		 jae	 SHORT $LN3@Term
  00011	53		 push	 ebx
$LL4@Term:

; 2461 : 		{
; 2462 : 			if (*ppEntry != NULL)

  00012	8b 06		 mov	 eax, DWORD PTR [esi]
  00014	85 c0		 test	 eax, eax
  00016	74 1c		 je	 SHORT $LN2@Term

; 2463 : 			{
; 2464 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

  00018	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]

; 2465 : 				
; 2466 : 				if (pCache->pCF != NULL)

  0001b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001d	85 c0		 test	 eax, eax
  0001f	74 13		 je	 SHORT $LN2@Term

; 2467 : 				{
; 2468 : 					// Decode factory pointer if it's not null
; 2469 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DecodePointer@4

; 2470 : 					_Analysis_assume_(factory != nullptr);
; 2471 : 					factory->Release();					

  00028	50		 push	 eax
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	ff 51 08	 call	 DWORD PTR [ecx+8]

; 2472 : 					pCache->pCF = NULL;

  0002e	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
$LN2@Term:

; 2458 : 			return;
; 2459 : 
; 2460 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  00034	83 c6 04	 add	 esi, 4
  00037	3b 77 0c	 cmp	 esi, DWORD PTR [edi+12]
  0003a	72 d6		 jb	 SHORT $LL4@Term
  0003c	5b		 pop	 ebx
$LN3@Term:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 140  : 		DeleteCriticalSection(&m_sec);

  0003d	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  00040	50		 push	 eax
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 2480 : 		cbSize = 0;

  00047	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0004d	5e		 pop	 esi
$LN1@Term:
  0004e	5f		 pop	 edi

; 2481 : 	}

  0004f	c3		 ret	 0
?Term@CAtlComModule@ATL@@QAEXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT
; _this$ = ecx

; 2450 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CAtlComModule@ATL@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2451 : 		Term();

  00022	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QAEXXZ ; ATL::CAtlComModule::Term

; 2452 : 	}

  00027	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0002a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00031	59		 pop	 ecx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CAtlComModule@ATL@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CAtlComModule@ATL@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 8
??0CAtlComModule@ATL@@QAE@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT
; _this$ = ecx

; 2429 : 	CAtlComModule() throw()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 110  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00010	c5 fa 7f 00	 vmovdqu XMMWORD PTR [eax], xmm0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00014	6a 00		 push	 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 110  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00016	c5 f9 d6 40 10	 vmovq	 QWORD PTR [eax+16], xmm0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  0001b	6a 00		 push	 0
  0001d	50		 push	 eax
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 2431 : 		cbSize = 0;

  0001e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 2432 : 
; 2433 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

  00024	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ___ImageBase

; 2434 : 
; 2435 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

  0002b	c7 46 08 04 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ___pobjMapEntryFirst+4

; 2436 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

  00032	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ___pobjMapEntryLast
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 130  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  0003f	85 c0		 test	 eax, eax
  00041	75 6b		 jne	 SHORT $LN2@CAtlComMod

; 131  : 		{
; 132  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00049	85 c0		 test	 eax, eax
  0004b	7e 0a		 jle	 SHORT $LN23@CAtlComMod
  0004d	0f b7 c0	 movzx	 eax, ax
  00050	0d 00 00 07 80	 or	 eax, -2147024896	; 80070000H
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 2438 : 		if (FAILED(m_csObjMap.Init()))

  00055	85 c0		 test	 eax, eax
$LN23@CAtlComMod:
  00057	79 55		 jns	 SHORT $LN2@CAtlComMod

; 2440 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAc?$AAr?$AAi@
  0005e	6a 00		 push	 0
  00060	8d 45 f8	 lea	 eax, DWORD PTR $T1[ebp]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00063	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], OFFSET ??_C@_0EG@DCKBPMDA@d?3?2developer?2microsoft?5visual?5st@
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 2440 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));

  0006a	6a 02		 push	 2
  0006c	50		 push	 eax
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  0006d	c7 45 fc 88 09
	00 00		 mov	 DWORD PTR $T1[ebp+4], 2440 ; 00000988H
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 2440 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));

  00074	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 2441 : 			ATLASSERT(0);

  00079	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00083	6a 00		 push	 0
  00085	68 89 09 00 00	 push	 2441			; 00000989H
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NONHLJLN@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0008f	6a 02		 push	 2
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00097	83 c4 28	 add	 esp, 40			; 00000028H
  0009a	83 f8 01	 cmp	 eax, 1
  0009d	75 01		 jne	 SHORT $LN4@CAtlComMod
  0009f	cc		 int	 3
$LN4@CAtlComMod:

; 2447 : 	}

  000a0	8b c6		 mov	 eax, esi
  000a2	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
  000a9	5e		 pop	 esi
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c3		 ret	 0
$LN2@CAtlComMod:

; 2442 : 			CAtlBaseModule::m_bInitFailed = true;
; 2443 : 			return;
; 2444 : 		}
; 2445 : 		// Set cbSize on success.
; 2446 : 		cbSize = sizeof(_ATL_COM_MODULE);

  000ae	c7 06 28 00 00
	00		 mov	 DWORD PTR [esi], 40	; 00000028H

; 2447 : 	}

  000b4	8b c6		 mov	 eax, esi
  000b6	5e		 pop	 esi
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
??0CAtlComModule@ATL@@QAE@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_pWinModule$ = 8					; size = 4
_hInst$ = 12						; size = 4
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7649 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 7650 : 	if (pWinModule == NULL)

  00004	8b 75 08	 mov	 esi, DWORD PTR _pWinModule$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	75 0a		 jne	 SHORT $LN5@AtlWinModu
$LN28@AtlWinModu:

; 7651 : 		return E_INVALIDARG;

  0000b	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H
  00010	5e		 pop	 esi

; 7663 : }

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
$LN5@AtlWinModu:

; 7652 : 	if (pWinModule->cbSize == 0)

  00015	8b 06		 mov	 eax, DWORD PTR [esi]
  00017	85 c0		 test	 eax, eax
  00019	74 69		 je	 SHORT $LN27@AtlWinModu

; 7653 : 		return S_OK;
; 7654 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  0001b	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  0001e	75 eb		 jne	 SHORT $LN28@AtlWinModu

; 7655 : 		return E_INVALIDARG;
; 7656 : 
; 7657 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  00020	57		 push	 edi
  00021	33 ff		 xor	 edi, edi
  00023	39 7e 24	 cmp	 DWORD PTR [esi+36], edi
  00026	7e 25		 jle	 SHORT $LN3@AtlWinModu
  00028	53		 push	 ebx
  00029	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@AtlWinModu:

; 7658 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

  00030	57		 push	 edi
  00031	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00034	e8 00 00 00 00	 call	 ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
  00039	ff 75 0c	 push	 DWORD PTR _hInst$[ebp]
  0003c	0f b7 00	 movzx	 eax, WORD PTR [eax]
  0003f	50		 push	 eax
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnregisterClassW@8
  00046	47		 inc	 edi
  00047	3b 7e 24	 cmp	 edi, DWORD PTR [esi+36]
  0004a	7c e4		 jl	 SHORT $LL4@AtlWinModu
  0004c	5b		 pop	 ebx
$LN3@AtlWinModu:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h

; 216  : 		if(m_aT != NULL)

  0004d	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00050	5f		 pop	 edi
  00051	85 c0		 test	 eax, eax
  00053	74 11		 je	 SHORT $LN15@AtlWinModu

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

  00055	50		 push	 eax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0005c	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  0005f	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN15@AtlWinModu:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 140  : 		DeleteCriticalSection(&m_sec);

  00066	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h

; 223  : 		m_nSize = 0;

  00069	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 140  : 		DeleteCriticalSection(&m_sec);

  00070	50		 push	 eax
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h

; 224  : 		m_nAllocSize = 0;

  00071	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 140  : 		DeleteCriticalSection(&m_sec);

  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 7661 : 	pWinModule->cbSize = 0;

  0007e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN27@AtlWinModu:

; 7662 : 	return S_OK;

  00084	33 c0		 xor	 eax, eax
  00086	5e		 pop	 esi

; 7663 : }

  00087	5d		 pop	 ebp
  00088	c2 08 00	 ret	 8
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_pWinModule$ = 8					; size = 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8393 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8394 : 	if (pWinModule == NULL)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pWinModule$[ebp]
  00006	83 ec 08	 sub	 esp, 8
  00009	85 c0		 test	 eax, eax
  0000b	75 0b		 jne	 SHORT $LN2@AtlWinModu
$LN21@AtlWinModu:

; 8395 : 		return E_INVALIDARG;

  0000d	b8 57 00 07 80	 mov	 eax, -2147024809	; 80070057H

; 8410 : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
$LN2@AtlWinModu:

; 8396 : 
; 8397 : 	// check only in the DLL
; 8398 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00018	83 38 2c	 cmp	 DWORD PTR [eax], 44	; 0000002cH
  0001b	75 f0		 jne	 SHORT $LN21@AtlWinModu
  0001d	56		 push	 esi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 129  : 		HRESULT hRes = S_OK;

  0001e	33 f6		 xor	 esi, esi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 8401 : 	pWinModule->m_pCreateWndList = NULL;

  00020	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00027	56		 push	 esi
  00028	56		 push	 esi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 130  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  00029	83 c0 04	 add	 eax, 4
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 130  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  00033	85 c0		 test	 eax, eax
  00035	75 68		 jne	 SHORT $LN6@AtlWinModu

; 131  : 		{
; 132  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0003d	8b f0		 mov	 esi, eax
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  0003f	85 f6		 test	 esi, esi
  00041	7e 0b		 jle	 SHORT $LN20@AtlWinModu
  00043	0f b7 f6	 movzx	 esi, si
  00046	81 ce 00 00 07
	80		 or	 esi, -2147024896	; 80070000H
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 8404 : 	if (FAILED(hr))

  0004c	85 f6		 test	 esi, esi
$LN20@AtlWinModu:
  0004e	79 4f		 jns	 SHORT $LN6@AtlWinModu

; 8406 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));

  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AA?5?$AAc?$AAr?$AAi@
  0005a	83 c0 0d	 add	 eax, 13			; 0000000dH
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  0005d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], OFFSET ??_C@_0EG@DCKBPMDA@d?3?2developer?2microsoft?5visual?5st@
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 8406 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));

  00064	6a 00		 push	 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00066	89 45 fc	 mov	 DWORD PTR $T1[ebp+4], eax
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlbase.h

; 8406 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));

  00069	8d 45 f8	 lea	 eax, DWORD PTR $T1[ebp]
  0006c	6a 20		 push	 32			; 00000020H
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 8407 : 		ATLASSERT(0);

  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@2@@Z@4JA
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00083	6a 00		 push	 0
  00085	83 c0 0e	 add	 eax, 14			; 0000000eH
  00088	50		 push	 eax
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@NONHLJLN@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0008e	6a 02		 push	 2
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00096	83 c4 28	 add	 esp, 40			; 00000028H
  00099	83 f8 01	 cmp	 eax, 1
  0009c	75 01		 jne	 SHORT $LN6@AtlWinModu
  0009e	cc		 int	 3
$LN6@AtlWinModu:

; 8408 : 	}
; 8409 : 	return hr;

  0009f	8b c6		 mov	 eax, esi
  000a1	5e		 pop	 esi

; 8410 : }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 216  : 		if(m_aT != NULL)

  00003	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00006	85 c0		 test	 eax, eax
  00008	74 11		 je	 SHORT $LN19@ATL_WIN_MO

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00011	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  00014	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN19@ATL_WIN_MO:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

  0001b	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  00022	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 110  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00008	c5 fa 7f 41 04	 vmovdqu XMMWORD PTR [ecx+4], xmm0
  0000d	c5 f9 d6 41 14	 vmovq	 QWORD PTR [ecx+20], xmm0
  00012	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00015	8b c1		 mov	 eax, ecx
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00017	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
  0001e	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
  00025	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlexcept.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 236  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  00004	8b 75 08	 mov	 esi, DWORD PTR _nIndex$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	85 f6		 test	 esi, esi
  0000c	78 05		 js	 SHORT $LN5@operator
  0000e	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
  00011	7c 27		 jl	 SHORT $LN6@operator
$LN5@operator:
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAm?$AA_?$AAn?$AAS?$AAi?$AAz?$AAe?$AA?$AA@
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0001d	6a 00		 push	 0
  0001f	68 ed 00 00 00	 push	 237			; 000000edH
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_1JE@EEGEPFAF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00029	6a 02		 push	 2
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00031	83 c4 18	 add	 esp, 24			; 00000018H
  00034	83 f8 01	 cmp	 eax, 1
  00037	75 01		 jne	 SHORT $LN6@operator
  00039	cc		 int	 3
$LN6@operator:

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  0003a	85 f6		 test	 esi, esi
  0003c	78 10		 js	 SHORT $LN3@operator
  0003e	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
  00041	7d 0b		 jge	 SHORT $LN3@operator

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);
; 241  : 		}
; 242  : 		return m_aT[nIndex];

  00043	8b 07		 mov	 eax, DWORD PTR [edi]
  00045	5f		 pop	 edi
  00046	8d 04 70	 lea	 eax, DWORD PTR [eax+esi*2]
  00049	5e		 pop	 esi

; 243  : 	}

  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
$LN3@operator:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlexcept.h

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	6a 01		 push	 1
  00054	68 8c 00 00 c0	 push	 -1073741684		; c000008cH
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RaiseException@16
$LN11@operator:
$LN10@operator:
  0005f	cc		 int	 3
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx

; 215  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 216  : 		if(m_aT != NULL)

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 10		 je	 SHORT $LN11@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00010	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  00013	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN11@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

  00019	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00020	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00027	5e		 pop	 esi

; 225  :     }

  00028	c3		 ret	 0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT
; _this$ = ecx

; 161  : 		return m_nSize;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 162  : 	}

  00003	c3		 ret	 0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 310  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 216  : 		if(m_aT != NULL)

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 10		 je	 SHORT $LN13@CSimpleArr

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)
; 219  : 				m_aT[i].~T();
; 220  : 			free(m_aT);

  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00010	83 c4 04	 add	 esp, 4

; 221  : 			m_aT = NULL;

  00013	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN13@CSimpleArr:

; 222  : 		}
; 223  : 		m_nSize = 0;
; 224  : 		m_nAllocSize = 0;

  00019	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00020	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00027	5e		 pop	 esi

; 311  : 	RemoveAll();
; 312  : }

  00028	c3		 ret	 0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 121  : 	}

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00016	c3		 ret	 0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??1_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
  00000	c3		 ret	 0
??1_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??0_ATL_COM_MODULE70@ATL@@QAE@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
; _this$ = ecx
  00000	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0

; 110  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00004	c5 fa 7f 41 10	 vmovdqu XMMWORD PTR [ecx+16], xmm0
  00009	c5 f9 d6 41 20	 vmovq	 QWORD PTR [ecx+32], xmm0
  0000e	8b c1		 mov	 eax, ecx
  00010	c3		 ret	 0
??0_ATL_COM_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\afx.inl
;	COMDAT ?_AfxInitManaged@@YAHXZ
_TEXT	SEGMENT
?_AfxInitManaged@@YAHXZ PROC				; _AfxInitManaged, COMDAT

; 77   : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 78   : }

  00002	c3		 ret	 0
?_AfxInitManaged@@YAHXZ ENDP				; _AfxInitManaged
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h
;	COMDAT ?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z
_TEXT	SEGMENT
_pMgr$ = 8						; size = 4
?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z PROC ; ATL::CNilStringData::SetManager, COMDAT
; _this$ = ecx

; 123  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 124  : 		ATLASSERT( pStringMgr == NULL );

  00006	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00009	74 24		 je	 SHORT $LN4@SetManager
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@MEFFJNJ@?$AAp?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAM?$AAg?$AAr?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00015	6a 00		 push	 0
  00017	6a 7c		 push	 124			; 0000007cH
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@IDFEEAEM@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0001e	6a 02		 push	 2
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00026	83 c4 18	 add	 esp, 24			; 00000018H
  00029	83 f8 01	 cmp	 eax, 1
  0002c	75 01		 jne	 SHORT $LN4@SetManager
  0002e	cc		 int	 3
$LN4@SetManager:

; 125  : 		pStringMgr = pMgr;

  0002f	8b 45 08	 mov	 eax, DWORD PTR _pMgr$[ebp]
  00032	89 06		 mov	 DWORD PTR [esi], eax
  00034	5e		 pop	 esi

; 126  : 	}

  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
?SetManager@CNilStringData@ATL@@QAEXPAUIAtlStringMgr@2@@Z ENDP ; ATL::CNilStringData::SetManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h
;	COMDAT ??0CNilStringData@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CNilStringData@ATL@@QAE@XZ PROC			; ATL::CNilStringData::CNilStringData, COMDAT
; _this$ = ecx

; 113  : 	{
; 114  : 		pStringMgr = NULL;
; 115  : 		nRefs = 2;  // Never gets freed by IAtlStringMgr
; 116  : 		nDataLength = 0;
; 117  : 		nAllocLength = 0;
; 118  : 		achNil[0] = 0;

  00000	33 c0		 xor	 eax, eax
  00002	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  00008	c7 41 0c 02 00
	00 00		 mov	 DWORD PTR [ecx+12], 2
  0000f	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00016	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  0001d	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 119  : 		achNil[1] = 0;
; 120  : 	}

  00020	8b c1		 mov	 eax, ecx
  00022	c3		 ret	 0
??0CNilStringData@ATL@@QAE@XZ ENDP			; ATL::CNilStringData::CNilStringData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlsimpstr.h
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?AddRef@CStringData@ATL@@QAEXXZ PROC			; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 64   : 		ATLASSERT(nRefs > 0);

  00000	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00004	56		 push	 esi
  00005	8d 71 0c	 lea	 esi, DWORD PTR [ecx+12]
  00008	7f 24		 jg	 SHORT $LN4@AddRef
  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@BLGCOAPB@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00014	6a 00		 push	 0
  00016	6a 40		 push	 64			; 00000040H
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@IDFEEAEM@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0001d	6a 02		 push	 2
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	83 f8 01	 cmp	 eax, 1
  0002b	75 01		 jne	 SHORT $LN4@AddRef
  0002d	cc		 int	 3
$LN4@AddRef:

; 65   : 		_InterlockedIncrement(&nRefs);

  0002e	f0 ff 06	 lock	  inc	 DWORD PTR [esi]
  00031	5e		 pop	 esi

; 66   : 	}

  00032	c3		 ret	 0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@H@ATL@@YAJPAHHH@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@H@ATL@@YAJPAHHH@Z PROC			; ATL::AtlAdd<int>, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  00006	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0000b	8b 55 10	 mov	 edx, DWORD PTR _tRight$[ebp]
  0000e	2b c1		 sub	 eax, ecx
  00010	3b c2		 cmp	 eax, edx
  00012	7d 07		 jge	 SHORT $LN2@AtlAdd

; 101  : 	{
; 102  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00014	b8 16 02 07 80	 mov	 eax, -2147024362	; 80070216H

; 106  : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN2@AtlAdd:

; 103  : 	}
; 104  : 	*ptResult= tLeft + tRight;

  0001b	8b 45 08	 mov	 eax, DWORD PTR _ptResult$[ebp]
  0001e	03 ca		 add	 ecx, edx
  00020	89 08		 mov	 DWORD PTR [eax], ecx

; 105  : 	return S_OK;

  00022	33 c0		 xor	 eax, eax

; 106  : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??$AtlAdd@H@ATL@@YAJPAHHH@Z ENDP			; ATL::AtlAdd<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlAdd<unsigned int>, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  00006	8b c1		 mov	 eax, ecx
  00008	8b 55 10	 mov	 edx, DWORD PTR _tRight$[ebp]
  0000b	f7 d0		 not	 eax
  0000d	3b c2		 cmp	 eax, edx
  0000f	73 07		 jae	 SHORT $LN2@AtlAdd

; 101  : 	{
; 102  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00011	b8 16 02 07 80	 mov	 eax, -2147024362	; 80070216H

; 106  : }

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
$LN2@AtlAdd:

; 103  : 	}
; 104  : 	*ptResult= tLeft + tRight;

  00018	8b 45 08	 mov	 eax, DWORD PTR _ptResult$[ebp]
  0001b	03 ca		 add	 ecx, edx
  0001d	89 08		 mov	 DWORD PTR [eax], ecx

; 105  : 	return S_OK;

  0001f	33 c0		 xor	 eax, eax

; 106  : }

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??$AtlAdd@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlAdd<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ??_GCWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCWin32Heap@ATL@@UAEPAXI@Z PROC			; ATL::CWin32Heap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 111  : 		if( m_bOwnHeap && (m_hHeap != NULL) )

  00006	80 7e 08 00	 cmp	 BYTE PTR [esi+8], 0
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CWin32Heap@ATL@@6B@
  00010	74 35		 je	 SHORT $LN7@scalar
  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	85 c0		 test	 eax, eax
  00017	74 2e		 je	 SHORT $LN7@scalar

; 112  : 		{
; 113  : 			BOOL bSuccess;
; 114  : 
; 115  : 			bSuccess = ::HeapDestroy( m_hHeap );

  00019	50		 push	 eax
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4

; 116  : 			ATLASSERT( bSuccess );

  00020	85 c0		 test	 eax, eax
  00022	75 23		 jne	 SHORT $LN7@scalar
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AA@
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0002e	50		 push	 eax
  0002f	6a 74		 push	 116			; 00000074H
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@EFGHAAKH@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00036	6a 02		 push	 2
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0003e	83 c4 18	 add	 esp, 24			; 00000018H
  00041	83 f8 01	 cmp	 eax, 1
  00044	75 01		 jne	 SHORT $LN7@scalar
  00046	cc		 int	 3
$LN7@scalar:
  00047	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004b	74 0b		 je	 SHORT $LN8@scalar
  0004d	6a 0c		 push	 12			; 0000000cH
  0004f	56		 push	 esi
  00050	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00055	83 c4 08	 add	 esp, 8
$LN8@scalar:
  00058	8b c6		 mov	 eax, esi
  0005a	5e		 pop	 esi
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
??_GCWin32Heap@ATL@@UAEPAXI@Z ENDP			; ATL::CWin32Heap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@CWin32Heap@ATL@@QAEXI@Z
_TEXT	SEGMENT
_classSize$ = 8						; size = 4
?__autoclassinit2@CWin32Heap@ATL@@QAEXI@Z PROC		; ATL::CWin32Heap::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _classSize$[ebp]
  00006	6a 00		 push	 0
  00008	51		 push	 ecx
  00009	e8 00 00 00 00	 call	 _memset
  0000e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?__autoclassinit2@CWin32Heap@ATL@@QAEXI@Z ENDP		; ATL::CWin32Heap::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ?GetSize@CWin32Heap@ATL@@UAEIPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?GetSize@CWin32Heap@ATL@@UAEIPAX@Z PROC			; ATL::CWin32Heap::GetSize, COMDAT
; _this$ = ecx

; 175  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 176  : 		return( ::HeapSize( m_hHeap, 0, p ) );

  00003	ff 75 08	 push	 DWORD PTR _p$[ebp]
  00006	6a 00		 push	 0
  00008	ff 71 04	 push	 DWORD PTR [ecx+4]
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapSize@12

; 177  : 	}

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?GetSize@CWin32Heap@ATL@@UAEIPAX@Z ENDP			; ATL::CWin32Heap::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_nBytes$ = 12						; size = 4
?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z PROC		; ATL::CWin32Heap::Reallocate, COMDAT
; _this$ = ecx

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 161  : 		if( p == NULL )

  00003	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	75 0b		 jne	 SHORT $LN2@Reallocate

; 162  : 		{
; 163  : 			return( Allocate( nBytes ) );

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	ff 75 0c	 push	 DWORD PTR _nBytes$[ebp]
  0000f	ff 10		 call	 DWORD PTR [eax]

; 173  : 	}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
$LN2@Reallocate:

; 164  : 		}
; 165  : 
; 166  : 		if (nBytes==0)

  00015	8b 45 0c	 mov	 eax, DWORD PTR _nBytes$[ebp]
  00018	85 c0		 test	 eax, eax
  0001a	75 0c		 jne	 SHORT $LN3@Reallocate

; 167  : 		{
; 168  : 			  Free(p);

  0001c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001e	52		 push	 edx
  0001f	ff 50 04	 call	 DWORD PTR [eax+4]

; 169  : 			  return NULL;

  00022	33 c0		 xor	 eax, eax

; 173  : 	}

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
$LN3@Reallocate:

; 170  : 		}
; 171  : 
; 172  : 		return( ::HeapReAlloc( m_hHeap, 0, p, nBytes ) );

  00028	50		 push	 eax
  00029	52		 push	 edx
  0002a	6a 00		 push	 0
  0002c	ff 71 04	 push	 DWORD PTR [ecx+4]
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapReAlloc@16

; 173  : 	}

  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z ENDP		; ATL::CWin32Heap::Reallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ?Free@CWin32Heap@ATL@@UAEXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CWin32Heap@ATL@@UAEXPAX@Z PROC			; ATL::CWin32Heap::Free, COMDAT
; _this$ = ecx

; 148  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 149  : 		if( p != NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 36		 je	 SHORT $LN4@Free

; 150  : 		{
; 151  : 			BOOL bSuccess;
; 152  : 
; 153  : 			bSuccess = ::HeapFree( m_hHeap, 0, p );

  0000a	50		 push	 eax
  0000b	6a 00		 push	 0
  0000d	ff 71 04	 push	 DWORD PTR [ecx+4]
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12

; 154  : 			ATLASSERT( bSuccess );

  00016	85 c0		 test	 eax, eax
  00018	75 26		 jne	 SHORT $LN4@Free
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AA@
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00024	50		 push	 eax
  00025	68 9a 00 00 00	 push	 154			; 0000009aH
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@EFGHAAKH@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0002f	6a 02		 push	 2
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00037	83 c4 18	 add	 esp, 24			; 00000018H
  0003a	83 f8 01	 cmp	 eax, 1
  0003d	75 01		 jne	 SHORT $LN4@Free
  0003f	cc		 int	 3
$LN4@Free:

; 155  : 		}
; 156  : 	}

  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?Free@CWin32Heap@ATL@@UAEXPAX@Z ENDP			; ATL::CWin32Heap::Free
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ?Allocate@CWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CWin32Heap@ATL@@UAEPAXI@Z PROC		; ATL::CWin32Heap::Allocate, COMDAT
; _this$ = ecx

; 144  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 145  : 		return( ::HeapAlloc( m_hHeap, 0, nBytes ) );

  00003	ff 75 08	 push	 DWORD PTR _nBytes$[ebp]
  00006	6a 00		 push	 0
  00008	ff 71 04	 push	 DWORD PTR [ecx+4]
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12

; 146  : 	}

  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?Allocate@CWin32Heap@ATL@@UAEPAXI@Z ENDP		; ATL::CWin32Heap::Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ??1CWin32Heap@ATL@@UAE@XZ
_TEXT	SEGMENT
??1CWin32Heap@ATL@@UAE@XZ PROC				; ATL::CWin32Heap::~CWin32Heap, COMDAT
; _this$ = ecx

; 110  : #ifdef _ATL_USE_WINAPI_FAMILY_DESKTOP_APP
; 111  : 		if( m_bOwnHeap && (m_hHeap != NULL) )

  00000	80 79 08 00	 cmp	 BYTE PTR [ecx+8], 0
  00004	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CWin32Heap@ATL@@6B@
  0000a	74 35		 je	 SHORT $LN4@CWin32Heap
  0000c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000f	85 c0		 test	 eax, eax
  00011	74 2e		 je	 SHORT $LN4@CWin32Heap

; 112  : 		{
; 113  : 			BOOL bSuccess;
; 114  : 
; 115  : 			bSuccess = ::HeapDestroy( m_hHeap );

  00013	50		 push	 eax
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapDestroy@4

; 116  : 			ATLASSERT( bSuccess );

  0001a	85 c0		 test	 eax, eax
  0001c	75 23		 jne	 SHORT $LN4@CWin32Heap
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@PMINONJG@?$AAb?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AA@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00028	50		 push	 eax
  00029	6a 74		 push	 116			; 00000074H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@EFGHAAKH@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00030	6a 02		 push	 2
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00038	83 c4 18	 add	 esp, 24			; 00000018H
  0003b	83 f8 01	 cmp	 eax, 1
  0003e	75 01		 jne	 SHORT $LN4@CWin32Heap
  00040	cc		 int	 3
$LN4@CWin32Heap:

; 117  : 		}
; 118  : #endif
; 119  : 	}

  00041	c3		 ret	 0
??1CWin32Heap@ATL@@UAE@XZ ENDP				; ATL::CWin32Heap::~CWin32Heap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlmem.h
;	COMDAT ??0CWin32Heap@ATL@@QAE@PAX@Z
_TEXT	SEGMENT
_hHeap$ = 8						; size = 4
??0CWin32Heap@ATL@@QAE@PAX@Z PROC			; ATL::CWin32Heap::CWin32Heap, COMDAT
; _this$ = ecx

; 89   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 		m_hHeap( hHeap ),

  00003	8b 45 08	 mov	 eax, DWORD PTR _hHeap$[ebp]
  00006	56		 push	 esi

; 89   : 	{

  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CWin32Heap@ATL@@6B@
  0000f	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00012	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0

; 90   : 		ATLASSERT( hHeap != NULL );

  00016	85 c0		 test	 eax, eax
  00018	75 23		 jne	 SHORT $LN4@CWin32Heap
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@CLPBKBHG@?$AAh?$AAH?$AAe?$AAa?$AAp?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00024	50		 push	 eax
  00025	6a 5a		 push	 90			; 0000005aH
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@EFGHAAKH@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0002c	6a 02		 push	 2
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00034	83 c4 18	 add	 esp, 24			; 00000018H
  00037	83 f8 01	 cmp	 eax, 1
  0003a	75 01		 jne	 SHORT $LN4@CWin32Heap
  0003c	cc		 int	 3
$LN4@CWin32Heap:

; 91   : 	}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
??0CWin32Heap@ATL@@QAE@PAX@Z ENDP			; ATL::CWin32Heap::CWin32Heap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 275  : 		return m_hInst;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 276  : 	}

  00003	c3		 ret	 0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Term@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 140  : 		DeleteCriticalSection(&m_sec);

  00000	51		 push	 ecx
  00001	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 141  : 		return S_OK;

  00007	33 c0		 xor	 eax, eax

; 142  : 	}

  00009	c3		 ret	 0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Init@CComCriticalSection@ATL@@QAEJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT
; _this$ = ecx
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h

; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	51		 push	 ecx
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 130  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  0000b	85 c0		 test	 eax, eax
  0000d	75 13		 jne	 SHORT $LN10@Init

; 131  : 		{
; 132  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00015	85 c0		 test	 eax, eax
  00017	7e 0b		 jle	 SHORT $LN9@Init
  00019	0f b7 c0	 movzx	 eax, ax
  0001c	0d 00 00 07 80	 or	 eax, -2147024896	; 80070000H
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h

; 136  : 	}

  00021	c3		 ret	 0
$LN10@Init:

; 133  : 		}
; 134  : 
; 135  : 		return hRes;

  00022	33 c0		 xor	 eax, eax
$LN9@Init:

; 136  : 	}

  00024	c3		 ret	 0
?Init@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::~CComCriticalSection, COMDAT
; _this$ = ecx

; 115  : 	}

  00000	c3		 ret	 0
??1CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComCriticalSection@ATL@@QAE@XZ PROC			; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 108  : 	CComCriticalSection() throw()

  00000	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0

; 109  : 	{
; 110  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  00004	c5 fa 7f 01	 vmovdqu XMMWORD PTR [ecx], xmm0
  00008	c5 f9 d6 41 10	 vmovq	 QWORD PTR [ecx+16], xmm0

; 111  : 	}

  0000d	8b c1		 mov	 eax, ecx
  0000f	c3		 ret	 0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
_lpCriticalSection$ = 8					; size = 4
_dwSpinCount$ = 12					; size = 4
_Flags$ = 16						; size = 4
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00003	ff 75 10	 push	 DWORD PTR _Flags$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR _dwSpinCount$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _lpCriticalSection$[ebp]
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSectionEx@12

; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
; 736  : #endif
; 737  : }

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	ff 75 0c	 push	 DWORD PTR _dwExceptionFlags$[ebp]
  0000a	ff 75 08	 push	 DWORD PTR _dwExceptionCode$[ebp]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RaiseException@16

; 32   : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ PROC		; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 436  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR _this$[ebp]

; 392  : 		m_dwLastError = GetLastError();

  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0000e	8b f0		 mov	 esi, eax

; 437  : 		CPreserveLastError ple;
; 438  : 		va_list ptr; va_start(ptr, pszFmt);
; 439  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  00010	8d 45 18	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  00013	50		 push	 eax
  00014	ff 75 14	 push	 DWORD PTR _pszFmt$[ebp]
  00017	ff 75 10	 push	 DWORD PTR _nLevel$[ebp]
  0001a	ff 75 0c	 push	 DWORD PTR _dwCategory$[ebp]
  0001d	ff 77 04	 push	 DWORD PTR [edi+4]
  00020	ff 37		 push	 DWORD PTR [edi]
  00022	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z ; ATL::CTrace::TraceV
  00027	83 c4 18	 add	 esp, 24			; 00000018H

; 397  : 		SetLastError(m_dwLastError);

  0002a	56		 push	 esi
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi

; 440  : 		va_end(ptr);
; 441  : 	}

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??RCTraceFileAndLineInfo@ATL@@QBAXHIPB_WZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 411  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pszFileName$[ebp]
  00006	89 01		 mov	 DWORD PTR [ecx], eax
  00008	8b 45 0c	 mov	 eax, DWORD PTR _nLineNo$[ebp]
  0000b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 412  : 	}

  0000e	8b c1		 mov	 eax, ecx
  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT
; _this$ = ecx

; 397  : 		SetLastError(m_dwLastError);

  00000	ff 31		 push	 DWORD PTR [ecx]
  00002	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetLastError@4

; 398  : 	}

  00008	c3		 ret	 0
??1CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CPreserveLastError@ATL@@QAE@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT
; _this$ = ecx

; 390  : 	CPreserveLastError()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 393  : 	}

  0000b	8b c6		 mov	 eax, esi
  0000d	5e		 pop	 esi
  0000e	c3		 ret	 0
??0CPreserveLastError@ATL@@QAE@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z
_TEXT	SEGMENT
_classSize$ = 8						; size = 4
?__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _classSize$[ebp]
  00006	6a 00		 push	 0
  00008	51		 push	 ecx
  00009	e8 00 00 00 00	 call	 _memset
  0000e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?__autoclassinit2@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAEXI@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 282  : 		free(p);

  00003	ff 36		 push	 DWORD PTR [esi]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0000b	83 c4 04	 add	 esp, 4

; 424  : 		m_pData = NULL;

  0000e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00014	5e		 pop	 esi
  00015	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_nElements$ = 8						; size = 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT
; _this$ = ecx

; 470  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 151  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00003	8b 45 08	 mov	 eax, DWORD PTR _nElements$[ebp]
  00006	56		 push	 esi

; 470  : 	{

  00007	8b f1		 mov	 esi, ecx

; 151  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00009	b9 02 00 00 00	 mov	 ecx, 2
  0000e	f7 e1		 mul	 ecx
  00010	57		 push	 edi
  00011	8b f8		 mov	 edi, eax

; 152  : 	if(i64Result>UINT_MAX)

  00013	85 d2		 test	 edx, edx
  00015	75 45		 jne	 SHORT $LN18@Allocate
  00017	83 ff ff	 cmp	 edi, -1
  0001a	77 40		 ja	 SHORT $LN18@Allocate

; 397  : 		ATLASSERT(m_pData == NULL);

  0001c	39 16		 cmp	 DWORD PTR [esi], edx
  0001e	74 25		 je	 SHORT $LN14@Allocate
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0002a	52		 push	 edx
  0002b	68 8d 01 00 00	 push	 397			; 0000018dH
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@IBEBMCEG@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00035	51		 push	 ecx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0003c	83 c4 18	 add	 esp, 24			; 00000018H
  0003f	83 f8 01	 cmp	 eax, 1
  00042	75 01		 jne	 SHORT $LN14@Allocate
  00044	cc		 int	 3
$LN14@Allocate:

; 277  : 		return malloc(nBytes);

  00045	57		 push	 edi
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  0004c	83 c4 04	 add	 esp, 4

; 398  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  0004f	89 06		 mov	 DWORD PTR [esi], eax
  00051	85 c0		 test	 eax, eax
  00053	0f 95 c0	 setne	 al
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi

; 475  : 		}
; 476  : 		return AllocateBytes(nBytes);
; 477  : 	}

  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
$LN18@Allocate:
  0005c	5f		 pop	 edi

; 471  : 		size_t nBytes=0;
; 472  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))
; 473  : 		{
; 474  : 			return false;

  0005d	32 c0		 xor	 al, al
  0005f	5e		 pop	 esi

; 475  : 		}
; 476  : 		return AllocateBytes(nBytes);
; 477  : 	}

  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 350  : 		m_pData(NULL)

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 450  : 	{
; 451  : 	}

  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT
; _this$ = ecx

; 422  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 282  : 		free(p);

  00003	ff 36		 push	 DWORD PTR [esi]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0000b	83 c4 04	 add	 esp, 4

; 423  : 		Allocator::Free(m_pData);
; 424  : 		m_pData = NULL;

  0000e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00014	5e		 pop	 esi

; 425  : 	}

  00015	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT
; _this$ = ecx

; 396  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 397  : 		ATLASSERT(m_pData == NULL);

  00006	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00009	74 27		 je	 SHORT $LN4@AllocateBy
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00015	6a 00		 push	 0
  00017	68 8d 01 00 00	 push	 397			; 0000018dH
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@IBEBMCEG@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  00021	6a 02		 push	 2
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00029	83 c4 18	 add	 esp, 24			; 00000018H
  0002c	83 f8 01	 cmp	 eax, 1
  0002f	75 01		 jne	 SHORT $LN4@AllocateBy
  00031	cc		 int	 3
$LN4@AllocateBy:

; 277  : 		return malloc(nBytes);

  00032	ff 75 08	 push	 DWORD PTR _nBytes$[ebp]
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  0003b	83 c4 04	 add	 esp, 4

; 398  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  0003e	89 06		 mov	 DWORD PTR [esi], eax

; 399  : 		if (m_pData == NULL)

  00040	85 c0		 test	 eax, eax
  00042	0f 95 c0	 setne	 al
  00045	5e		 pop	 esi

; 400  : 			return false;
; 401  : 
; 402  : 		return true;
; 403  : 	}

  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT
; _this$ = ecx

; 379  : 		return m_pData;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QBEPA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 364  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 282  : 		free(p);

  00003	ff 36		 push	 DWORD PTR [esi]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0000b	83 c4 04	 add	 esp, 4

; 424  : 		m_pData = NULL;

  0000e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00014	5e		 pop	 esi

; 365  : 		Free();
; 366  : 	}

  00015	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ
_TEXT	SEGMENT
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 350  : 		m_pData(NULL)

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 352  : 	}

  00006	8b c1		 mov	 eax, ecx
  00008	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IAE@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z
_TEXT	SEGMENT
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 330  : 		if (pszCategory == nullptr)

  00003	8b 55 08	 mov	 edx, DWORD PTR _pszCategory$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 5b		 je	 SHORT $LN1@RegisterCa

; 331  : 		{
; 332  : 			return;
; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0000a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0000f	83 f8 20	 cmp	 eax, 32			; 00000020H
  00012	72 29		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm?$AAa?$AAn?$AAy?$AA?5?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAd?$AAe@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0001e	6a 00		 push	 0
  00020	68 51 01 00 00	 push	 337			; 00000151H
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@PCOKKAMF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00032	83 c4 18	 add	 esp, 24			; 00000018H
  00035	83 f8 01	 cmp	 eax, 1
  00038	75 2b		 jne	 SHORT $LN1@RegisterCa
  0003a	cc		 int	 3

; 355  : 	}

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
$LN3@RegisterCa:

; 338  : 			return;
; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  0003d	69 c8 04 01 00
	00		 imul	 ecx, eax, 260
  00043	8b 45 0c	 mov	 eax, DWORD PTR _nCategory$[ebp]

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);

  00046	52		 push	 edx
  00047	6a 7f		 push	 127			; 0000007fH
  00049	89 81 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[ecx], eax
  0004f	8d 81 04 00 00
	00		 lea	 eax, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[ecx+4]
  00055	50		 push	 eax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	
; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);
; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);
; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  0005f	ff 05 00 00 00
	00		 inc	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z
_TEXT	SEGMENT
_wszBuf$ = -4						; size = 4
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszFmt$ = 24						; size = 4
_args$ = 28						; size = 4
?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 281  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	57		 push	 edi

; 282  : #if _MSC_VER < 1900
; 283  : 		int cchNeeded = _vscwprintf(pwszFmt, args);
; 284  : #else
; 285  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 286  : 		// for compatibility with previous versions.  While the CRT supports two
; 287  : 		// modes, the ATL and MFC functions that accept format strings only support
; 288  : 		// legacy mode format strings.
; 289  : 		int cchNeeded = __stdio_common_vswprintf(

  00006	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0000b	ff 75 1c	 push	 DWORD PTR _args$[ebp]
  0000e	8b f8		 mov	 edi, eax
  00010	6a 00		 push	 0
  00012	ff 75 18	 push	 DWORD PTR _pwszFmt$[ebp]
  00015	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00017	6a 00		 push	 0
  00019	6a 00		 push	 0
  0001b	ff 77 04	 push	 DWORD PTR [edi+4]
  0001e	83 c9 06	 or	 ecx, 6
  00021	51		 push	 ecx
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf
  00028	8b d8		 mov	 ebx, eax
  0002a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 290  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 291  : 			_CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR |
; 292  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 293  : 			NULL, 0, pwszFmt, NULL, args);
; 294  : #endif
; 295  : 		if (cchNeeded < 0)

  0002d	85 db		 test	 ebx, ebx
  0002f	78 63		 js	 SHORT $LN41@TraceV

; 301  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  00031	56		 push	 esi
  00032	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 350  : 		m_pData(NULL)

  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _wszBuf$[ebp], 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h

; 301  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  0003c	50		 push	 eax
  0003d	8d 4d fc	 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  00040	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  00045	8b 75 fc	 mov	 esi, DWORD PTR _wszBuf$[ebp]
  00048	84 c0		 test	 al, al
  0004a	74 3d		 je	 SHORT $LN8@TraceV

; 302  : 		{
; 303  : 			return;
; 304  : 		}
; 305  : 
; 306  : 		wszBuf[0] = '\0';
; 307  : 
; 308  : #if _MSC_VER < 1900
; 309  : 		if (_vsnwprintf_s(wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, args) == -1)
; 310  : #else
; 311  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 312  : 		// for compatibility with previous versions.  While the CRT supports two
; 313  : 		// modes, the ATL and MFC functions that accept format strings only support
; 314  : 		// legacy mode format strings.
; 315  : 		int const vsnwprintf_result = __stdio_common_vsnwprintf_s(

  0004c	ff 75 1c	 push	 DWORD PTR _args$[ebp]
  0004f	33 c0		 xor	 eax, eax
  00051	50		 push	 eax
  00052	ff 75 18	 push	 DWORD PTR _pwszFmt$[ebp]
  00055	66 89 06	 mov	 WORD PTR [esi], ax
  00058	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  0005b	53		 push	 ebx
  0005c	50		 push	 eax
  0005d	8b 07		 mov	 eax, DWORD PTR [edi]
  0005f	56		 push	 esi
  00060	ff 77 04	 push	 DWORD PTR [edi+4]
  00063	83 c8 04	 or	 eax, 4
  00066	50		 push	 eax
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsnwprintf_s
  0006d	83 c4 20	 add	 esp, 32			; 00000020H

; 316  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 317  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 318  : 			wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, NULL, args);
; 319  : 		if (vsnwprintf_result < 0)

  00070	85 c0		 test	 eax, eax
  00072	78 15		 js	 SHORT $LN8@TraceV

; 320  : #endif
; 321  : 		{
; 322  : 			return;
; 323  : 		}
; 324  : 
; 325  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  00074	56		 push	 esi
  00075	ff 75 14	 push	 DWORD PTR _nLevel$[ebp]
  00078	ff 75 10	 push	 DWORD PTR _dwCategory$[ebp]
  0007b	ff 75 0c	 push	 DWORD PTR _nLine$[ebp]
  0007e	ff 75 08	 push	 DWORD PTR _pszFileName$[ebp]
  00081	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ; ATL::CTrace::TraceV
  00086	83 c4 14	 add	 esp, 20			; 00000014H
$LN8@TraceV:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 282  : 		free(p);

  00089	56		 push	 esi
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00090	83 c4 04	 add	 esp, 4
  00093	5e		 pop	 esi
$LN41@TraceV:
  00094	5f		 pop	 edi
  00095	5b		 pop	 ebx
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h

; 326  : 	}

  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
?TraceV@CTrace@ATL@@SAXPBDHIIPB_WPAD@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z
_TEXT	SEGMENT
_pszFileName$GSCopy$1$ = -2580				; size = 4
_wszBuf$ = -2576					; size = 4
_wszCategory$ = -2572					; size = 2048
_fileName$ = -524					; size = 520
__$ArrayPad$ = -4					; size = 4
_pszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
_dwCategory$ = 16					; size = 4
_nLevel$ = 20						; size = 4
_pwszMessage$ = 24					; size = 4
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 0a 00
	00		 sub	 esp, 2580		; 00000a14H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszFileName$[ebp]
  00016	56		 push	 esi
  00017	8b 75 10	 mov	 esi, DWORD PTR _dwCategory$[ebp]
  0001a	89 85 ec f5 ff
	ff		 mov	 DWORD PTR _pszFileName$GSCopy$1$[ebp], eax

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLevel@CTrace@ATL@@1IA ; ATL::CTrace::m_nLevel
  00025	57		 push	 edi
  00026	8b 7d 18	 mov	 edi, DWORD PTR _pwszMessage$[ebp]
  00029	83 f8 ff	 cmp	 eax, -1
  0002c	0f 84 23 01 00
	00		 je	 $LN3@TraceV
  00032	3b 45 14	 cmp	 eax, DWORD PTR _nLevel$[ebp]
  00035	0f 82 1a 01 00
	00		 jb	 $LN3@TraceV
  0003b	85 35 00 00 00
	00		 test	 DWORD PTR ?m_nCategory@CTrace@ATL@@1IA, esi ; ATL::CTrace::m_nCategory
  00041	0f 84 0e 01 00
	00		 je	 $LN3@TraceV

; 152  : 		{
; 153  : 			return;
; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};
; 157  : 		int categoryLength = 0;
; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);

  00047	68 00 08 00 00	 push	 2048			; 00000800H
  0004c	8d 85 f4 f5 ff
	ff		 lea	 eax, DWORD PTR _wszCategory$[ebp]
  00052	6a 00		 push	 0
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 _memset
  0005a	56		 push	 esi
  0005b	e8 00 00 00 00	 call	 ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ; ATL::CTrace::GetCategoryName
  00060	83 c4 10	 add	 esp, 16			; 00000010H

; 159  : 		if (pwszCategoryName != nullptr)

  00063	85 c0		 test	 eax, eax
  00065	74 08		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  00067	50		 push	 eax
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5?$AA?$AA@

; 162  : 			{
; 163  : 				return;
; 164  : 			}
; 165  : 		}
; 166  : 		else

  0006d	eb 06		 jmp	 SHORT $LN67@TraceV
$LN4@TraceV:

; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  0006f	56		 push	 esi
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5?$AA?$AA@
$LN67@TraceV:
  00075	8d 85 f4 f5 ff
	ff		 lea	 eax, DWORD PTR _wszCategory$[ebp]
  0007b	68 00 04 00 00	 push	 1024			; 00000400H
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 _swprintf_s
  00086	8b d0		 mov	 edx, eax
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	83 fa ff	 cmp	 edx, -1
  0008e	0f 84 c1 00 00
	00		 je	 $LN3@TraceV

; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  00094	8b cf		 mov	 ecx, edi
  00096	8d 71 02	 lea	 esi, DWORD PTR [ecx+2]
  00099	0f 1f 80 00 00
	00 00		 npad	 7
$LL65@TraceV:
  000a0	66 8b 01	 mov	 ax, WORD PTR [ecx]
  000a3	83 c1 02	 add	 ecx, 2
  000a6	66 85 c0	 test	 ax, ax
  000a9	75 f5		 jne	 SHORT $LL65@TraceV
  000ab	53		 push	 ebx
  000ac	2b ce		 sub	 ecx, esi
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 350  : 		m_pData(NULL)

  000ae	c7 85 f0 f5 ff
	ff 00 00 00 00	 mov	 DWORD PTR _wszBuf$[ebp], 0
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h

; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  000b8	d1 f9		 sar	 ecx, 1
  000ba	8d 5a 01	 lea	 ebx, DWORD PTR [edx+1]
  000bd	03 d9		 add	 ebx, ecx

; 175  : 		CHeapPtr<wchar_t> wszBuf;
; 176  : 		if (!wszBuf.Allocate(chCount))

  000bf	8d 8d f0 f5 ff
	ff		 lea	 ecx, DWORD PTR _wszBuf$[ebp]
  000c5	53		 push	 ebx
  000c6	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QAE_NI@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  000cb	8b b5 f0 f5 ff
	ff		 mov	 esi, DWORD PTR _wszBuf$[ebp]
  000d1	84 c0		 test	 al, al
  000d3	74 75		 je	 SHORT $LN15@TraceV

; 177  : 		{
; 178  : 			return;
; 179  : 		}
; 180  : 
; 181  : 		wszBuf[0] = '\0';

  000d5	33 c0		 xor	 eax, eax

; 182  : 
; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  000d7	57		 push	 edi
  000d8	66 89 06	 mov	 WORD PTR [esi], ax
  000db	8d 85 f4 f5 ff
	ff		 lea	 eax, DWORD PTR _wszCategory$[ebp]
  000e1	50		 push	 eax
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs?$AA?$AA@
  000e7	53		 push	 ebx
  000e8	56		 push	 esi
  000e9	e8 00 00 00 00	 call	 _swprintf_s
  000ee	83 c4 14	 add	 esp, 20			; 00000014H
  000f1	83 f8 ff	 cmp	 eax, -1
  000f4	74 54		 je	 SHORT $LN15@TraceV

; 184  : 		{
; 185  : 			return;
; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	
; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  000f6	68 08 02 00 00	 push	 520			; 00000208H
  000fb	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _fileName$[ebp]
  00101	6a 00		 push	 0
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 _memset
  00109	ff b5 ec f5 ff
	ff		 push	 DWORD PTR _pszFileName$GSCopy$1$[ebp]
  0010f	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _fileName$[ebp]
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs?$AA?$AA@
  0011a	68 04 01 00 00	 push	 260			; 00000104H
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 _swprintf_s
  00125	83 c4 1c	 add	 esp, 28			; 0000001cH
  00128	83 f8 ff	 cmp	 eax, -1
  0012b	74 1d		 je	 SHORT $LN15@TraceV

; 193  : #endif
; 194  : 		{
; 195  : 			return;
; 196  : 		}
; 197  : 
; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  0012d	56		 push	 esi
  0012e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00133	6a 00		 push	 0
  00135	ff 75 0c	 push	 DWORD PTR _nLine$[ebp]
  00138	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _fileName$[ebp]
  0013e	50		 push	 eax
  0013f	6a 00		 push	 0
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00147	83 c4 18	 add	 esp, 24			; 00000018H
$LN15@TraceV:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h

; 282  : 		free(p);

  0014a	56		 push	 esi
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00151	83 c4 04	 add	 esp, 4
  00154	5b		 pop	 ebx
$LN3@TraceV:
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h

; 199  : 	}

  00155	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00158	5f		 pop	 edi
  00159	33 cd		 xor	 ecx, ebp
  0015b	5e		 pop	 esi
  0015c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c3		 ret	 0
?TraceV@CTrace@ATL@@CAXPBDHIIPB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPA_WI@Z
_TEXT	SEGMENT
_nCategory$ = 8						; size = 4
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  00003	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00009	33 c0		 xor	 eax, eax
  0000b	56		 push	 esi
  0000c	85 d2		 test	 edx, edx
  0000e	74 17		 je	 SHORT $LN3@GetCategor
  00010	8b 75 08	 mov	 esi, DWORD PTR _nCategory$[ebp]
  00013	b9 00 00 00 00	 mov	 ecx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
$LL4@GetCategor:

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00018	39 31		 cmp	 DWORD PTR [ecx], esi
  0001a	74 10		 je	 SHORT $LN8@GetCategor

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  0001c	40		 inc	 eax
  0001d	81 c1 04 01 00
	00		 add	 ecx, 260		; 00000104H
  00023	3b c2		 cmp	 eax, edx
  00025	72 f1		 jb	 SHORT $LL4@GetCategor
$LN3@GetCategor:

; 138  : 			}
; 139  : 		}
; 140  : 
; 141  : 		return nullptr;

  00027	33 c0		 xor	 eax, eax
  00029	5e		 pop	 esi

; 142  : 	}

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN8@GetCategor:

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  0002c	69 c0 04 01 00
	00		 imul	 eax, eax, 260
  00032	5e		 pop	 esi
  00033	05 04 00 00 00	 add	 eax, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4

; 142  : 	}

  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceISAPI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceISAPI@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceISAPI'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 00 40 00	 push	 4194304			; 00400000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@FHAEDBFK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAS?$AAA?$AAP?$AAI?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 119  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceISAPI> atlTraceISAPI(_T("atlTraceISAPI"));

  00012	c3		 ret	 0
??__EatlTraceISAPI@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceISAPI''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 00 40 00	 push	 4194304			; 00400000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSync@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSync@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSync'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 00 20 00	 push	 2097152			; 00200000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@OPAPOCAL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAy?$AAn?$AAc?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 118  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSync> atlTraceSync(_T("atlTraceSync"));

  00012	c3		 ret	 0
??__EatlTraceSync@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSync''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 00 20 00	 push	 2097152			; 00200000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSecurity@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSecurity@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSecurity'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 00 10 00	 push	 1048576			; 00100000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@DMMBNCFG@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt?$AAy?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 117  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSecurity> atlTraceSecurity(_T("atlTraceSecurity"));

  00012	c3		 ret	 0
??__EatlTraceSecurity@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSecurity''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 00 10 00	 push	 1048576			; 00100000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceUtil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceUtil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceUtil'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 00 08 00	 push	 524288			; 00080000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@DMHCKHHD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAU?$AAt?$AAi?$AAl?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 116  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceUtil> atlTraceUtil(_T("atlTraceUtil"));

  00012	c3		 ret	 0
??__EatlTraceUtil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceUtil''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceMap@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceMap@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceMap'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 00 04 00	 push	 262144			; 00040000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@OKDLCIEM@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAa?$AAp?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 115  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceMap> atlTraceMap(_T("atlTraceMap"));

  00012	c3		 ret	 0
??__EatlTraceMap@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceMap''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 00 04 00	 push	 262144			; 00040000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 00 02 00	 push	 131072			; 00020000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00012	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 00 02 00	 push	 131072			; 00020000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceStencil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceStencil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceStencil'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 00 01 00	 push	 65536			; 00010000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@PBPHANCD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAe?$AAn?$AAc?$AAi?$AAl?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 113  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceStencil> atlTraceStencil(_T("atlTraceStencil"));

  00012	c3		 ret	 0
??__EatlTraceStencil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceStencil''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 00 01 00	 push	 65536			; 00010000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCache@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCache@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCache'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 80 00 00	 push	 32768			; 00008000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GIKLHLFD@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAa?$AAc?$AAh?$AAe?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 112  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCache> atlTraceCache(_T("atlTraceCache"));

  00012	c3		 ret	 0
??__EatlTraceCache@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCache''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 80 00 00	 push	 32768			; 00008000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceTime@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceTime@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceTime'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 40 00 00	 push	 16384			; 00004000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@NCJHOFCL@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 111  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceTime> atlTraceTime(_T("atlTraceTime"));

  00012	c3		 ret	 0
??__EatlTraceTime@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceTime''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 40 00 00	 push	 16384			; 00004000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 20 00 00	 push	 8192			; 00002000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00012	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 20 00 00	 push	 8192			; 00002000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceAllocation@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceAllocation@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceAllocation'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 10 00 00	 push	 4096			; 00001000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@KFEEMCDH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 109  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceAllocation> atlTraceAllocation(_T("atlTraceAllocation"));

  00012	c3		 ret	 0
??__EatlTraceAllocation@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceAllocation''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 10 00 00	 push	 4096			; 00001000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceNotImpl@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceNotImpl@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceNotImpl'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 08 00 00	 push	 2048			; 00000800H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@DMHPIODO@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAN?$AAo?$AAt?$AAI?$AAm?$AAp?$AAl?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 108  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceNotImpl> atlTraceNotImpl(_T("atlTraceNotImpl"));

  00012	c3		 ret	 0
??__EatlTraceNotImpl@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceNotImpl''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 08 00 00	 push	 2048			; 00000800H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSnapin@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSnapin@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSnapin'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 04 00 00	 push	 1024			; 00000400H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@EFPHNHHN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAn?$AAa?$AAp?$AAi?$AAn?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 107  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSnapin> atlTraceSnapin(_T("atlTraceSnapin"));

  00012	c3		 ret	 0
??__EatlTraceSnapin@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSnapin''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 04 00 00	 push	 1024			; 00000400H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBProvider@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBProvider@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBProvider'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 02 00 00	 push	 512			; 00000200H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@MNMMIOOI@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAP?$AAr?$AAo?$AAv?$AAi?$AAd?$AAe?$AAr?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 106  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBProvider> atlTraceDBProvider(_T("atlTraceDBProvider"));

  00012	c3		 ret	 0
??__EatlTraceDBProvider@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBProvider''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 02 00 00	 push	 512			; 00000200H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBClient@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBClient@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBClient'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 01 00 00	 push	 256			; 00000100H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@JNJJDOOH@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAD?$AAB?$AAC?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 105  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBClient> atlTraceDBClient(_T("atlTraceDBClient"));

  00012	c3		 ret	 0
??__EatlTraceDBClient@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBClient''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 01 00 00	 push	 256			; 00000100H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceHosting@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceHosting@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceHosting'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 80 00 00 00	 push	 128			; 00000080H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@OMOMONMN@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAH?$AAo?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 104  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceHosting> atlTraceHosting(_T("atlTraceHosting"));

  00012	c3		 ret	 0
??__EatlTraceHosting@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceHosting''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 80 00 00 00	 push	 128			; 00000080H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceControls@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceControls@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceControls'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	6a 40		 push	 64			; 00000040H
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@IMNJGBED@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?$AA@
  00007	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000c	83 c4 08	 add	 esp, 8

; 103  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceControls> atlTraceControls(_T("atlTraceControls"));

  0000f	c3		 ret	 0
??__EatlTraceControls@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceControls''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	6a 40		 push	 64			; 00000040H
  00006	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00010	83 c4 08	 add	 esp, 8

; 482  : }

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceWindowing@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceWindowing@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceWindowing'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	6a 20		 push	 32			; 00000020H
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@NAJDPMNB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AAi?$AAn?$AAg?$AA?$AA@
  00007	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000c	83 c4 08	 add	 esp, 8

; 102  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceWindowing> atlTraceWindowing(_T("atlTraceWindowing"));

  0000f	c3		 ret	 0
??__EatlTraceWindowing@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceWindowing''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ PROC	; ATL::CTraceCategoryEx<32,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00000	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00005	c3		 ret	 0
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAEIXZ ENDP	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	6a 20		 push	 32			; 00000020H
  00006	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00010	83 c4 08	 add	 esp, 8

; 482  : }

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRefcount@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRefcount@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRefcount'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	6a 10		 push	 16			; 00000010H
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@BNHGJFNK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAf?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
  00007	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000c	83 c4 08	 add	 esp, 8

; 101  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRefcount> atlTraceRefcount(_T("atlTraceRefcount"));

  0000f	c3		 ret	 0
??__EatlTraceRefcount@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRefcount''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	6a 10		 push	 16			; 00000010H
  00006	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00010	83 c4 08	 add	 esp, 8

; 482  : }

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRegistrar@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRegistrar@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRegistrar'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	6a 08		 push	 8
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@NIAEAIDK@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAa?$AAr?$AA?$AA@
  00007	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000c	83 c4 08	 add	 esp, 8

; 100  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRegistrar> atlTraceRegistrar(_T("atlTraceRegistrar"));

  0000f	c3		 ret	 0
??__EatlTraceRegistrar@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRegistrar''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	6a 08		 push	 8
  00006	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00010	83 c4 08	 add	 esp, 8

; 482  : }

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$07$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceQI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceQI@ATL@@YAXXZ PROC				; ATL::`dynamic initializer for 'atlTraceQI'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	6a 04		 push	 4
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@FPLJJEMF@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAQ?$AAI?$AA?$AA@
  00007	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000c	83 c4 08	 add	 esp, 8

; 99   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceQI> atlTraceQI(_T("atlTraceQI"));

  0000f	c3		 ret	 0
??__EatlTraceQI@ATL@@YAXXZ ENDP				; ATL::`dynamic initializer for 'atlTraceQI''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	6a 04		 push	 4
  00006	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00010	83 c4 08	 add	 esp, 8

; 482  : }

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$03$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCOM@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCOM@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCOM'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	6a 02		 push	 2
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_1BI@MAFGHOEE@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAC?$AAO?$AAM?$AA?$AA@
  00007	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000c	83 c4 08	 add	 esp, 8

; 98   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCom> atlTraceCOM(_T("atlTraceCOM"));

  0000f	c3		 ret	 0
??__EatlTraceCOM@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCOM''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ
_TEXT	SEGMENT
??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ PROC		; ATL::CTraceCategoryEx<2,0>::operator unsigned int, COMDAT
; _this$ = ecx

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  00000	b8 02 00 00 00	 mov	 eax, 2

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  00005	c3		 ret	 0
??B?$CTraceCategoryEx@$01$0A@@ATL@@QAEIXZ ENDP		; ATL::CTraceCategoryEx<2,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	6a 02		 push	 2
  00006	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00010	83 c4 08	 add	 esp, 8

; 482  : }

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$01$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceGeneral@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceGeneral@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceGeneral'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	6a 01		 push	 1
  00002	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@ONGMEOAB@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAG?$AAe?$AAn?$AAe?$AAr?$AAa?$AAl?$AA?$AA@
  00007	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000c	83 c4 08	 add	 esp, 8

; 97   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceGeneral> atlTraceGeneral(_T("atlTraceGeneral"));

  0000f	c3		 ret	 0
??__EatlTraceGeneral@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceGeneral''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	6a 01		 push	 1
  00006	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00010	83 c4 08	 add	 esp, 8

; 482  : }

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$00$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 00 08 00	 push	 524288			; 00080000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlAdd@K@ATL@@YAJPAKKK@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@K@ATL@@YAJPAKKK@Z PROC			; ATL::AtlAdd<unsigned long>, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 	if(::ATL::AtlLimits<T>::_Max-tLeft < tRight)

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _tLeft$[ebp]
  00006	8b c1		 mov	 eax, ecx
  00008	8b 55 10	 mov	 edx, DWORD PTR _tRight$[ebp]
  0000b	f7 d0		 not	 eax
  0000d	3b c2		 cmp	 eax, edx
  0000f	73 07		 jae	 SHORT $LN2@AtlAdd

; 101  : 	{
; 102  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00011	b8 16 02 07 80	 mov	 eax, -2147024362	; 80070216H

; 106  : }

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
$LN2@AtlAdd:

; 103  : 	}
; 104  : 	*ptResult= tLeft + tRight;

  00018	8b 45 08	 mov	 eax, DWORD PTR _ptResult$[ebp]
  0001b	03 ca		 add	 ecx, edx
  0001d	89 08		 mov	 DWORD PTR [eax], ecx

; 105  : 	return S_OK;

  0001f	33 c0		 xor	 eax, eax

; 106  : }

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??$AtlAdd@K@ATL@@YAJPAKKK@Z ENDP			; ATL::AtlAdd<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 282  : 		free(p);

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__free
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 276  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 278  : 	}

  00003	5d		 pop	 ebp

; 277  : 		return malloc(nBytes);

  00004	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__malloc
?Allocate@CCRTAllocator@ATL@@SAPAXI@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@K@ATL@@YAJPAKKK@Z
_TEXT	SEGMENT
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@K@ATL@@YAJPAKKK@Z PROC			; ATL::AtlMultiply<unsigned long>, COMDAT

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 181  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00006	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]

; 182  : 	if(i64Result>ULONG_MAX)

  00009	85 d2		 test	 edx, edx
  0000b	75 0e		 jne	 SHORT $LN8@AtlMultipl
  0000d	83 f8 ff	 cmp	 eax, -1
  00010	77 09		 ja	 SHORT $LN8@AtlMultipl

; 185  : 	}
; 186  : 	*piResult=static_cast<unsigned long _ATL_W64>(i64Result);

  00012	8b 4d 08	 mov	 ecx, DWORD PTR _piResult$[ebp]
  00015	89 01		 mov	 DWORD PTR [ecx], eax

; 187  : 	return S_OK;

  00017	33 c0		 xor	 eax, eax

; 188  : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN8@AtlMultipl:

; 183  : 	{
; 184  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0001b	b8 16 02 07 80	 mov	 eax, -2147024362	; 80070216H

; 188  : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$AtlMultiply@K@ATL@@YAJPAKKK@Z ENDP			; ATL::AtlMultiply<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@I@ATL@@YAJPAIII@Z
_TEXT	SEGMENT
_piResult$ = 8						; size = 4
_iLeft$ = 12						; size = 4
_iRight$ = 16						; size = 4
??$AtlMultiply@I@ATL@@YAJPAIII@Z PROC			; ATL::AtlMultiply<unsigned int>, COMDAT

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 151  : 	unsigned __int64 i64Result=static_cast<unsigned __int64>(iLeft) * static_cast<unsigned __int64>(iRight);

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iLeft$[ebp]
  00006	f7 65 10	 mul	 DWORD PTR _iRight$[ebp]

; 152  : 	if(i64Result>UINT_MAX)

  00009	85 d2		 test	 edx, edx
  0000b	75 0e		 jne	 SHORT $LN8@AtlMultipl
  0000d	83 f8 ff	 cmp	 eax, -1
  00010	77 09		 ja	 SHORT $LN8@AtlMultipl

; 155  : 	}
; 156  : 	*piResult=static_cast<unsigned int _ATL_W64>(i64Result);

  00012	8b 4d 08	 mov	 ecx, DWORD PTR _piResult$[ebp]
  00015	89 01		 mov	 DWORD PTR [ecx], eax

; 157  : 	return S_OK;

  00017	33 c0		 xor	 eax, eax

; 158  : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN8@AtlMultipl:

; 153  : 	{
; 154  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  0001b	b8 16 02 07 80	 mov	 eax, -2147024362	; 80070216H

; 158  : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$AtlMultiply@I@ATL@@YAJPAIII@Z ENDP			; ATL::AtlMultiply<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<wchar_t const *>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@PB_W@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1536 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]

; 1263 :     int const _Result = __stdio_common_vswprintf_s(

  00006	8d 4d 14	 lea	 ecx, DWORD PTR __Format$[ebp+4]
  00009	51		 push	 ecx
  0000a	6a 00		 push	 0
  0000c	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	ff 30		 push	 DWORD PTR [eax]
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s

; 1264 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1265 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1266 : 
; 1267 :     return _Result < 0 ? -1 : _Result;

  00023	83 c9 ff	 or	 ecx, -1
  00026	83 c4 1c	 add	 esp, 28			; 0000001cH
  00029	85 c0		 test	 eax, eax
  0002b	0f 48 c1	 cmovs	 eax, ecx

; 1537 :         int _Result;
; 1538 :         va_list _ArgList;
; 1539 :         __crt_va_start(_ArgList, _Format);
; 1540 :         _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1541 :         __crt_va_end(_ArgList);
; 1542 :         return _Result;
; 1543 :     }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1262 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1263 :     int const _Result = __stdio_common_vswprintf_s(

  00003	ff 75 18	 push	 DWORD PTR __ArgList$[ebp]
  00006	ff 75 14	 push	 DWORD PTR __Locale$[ebp]
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	ff 70 04	 push	 DWORD PTR [eax+4]
  0001a	ff 30		 push	 DWORD PTR [eax]
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s

; 1264 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1265 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1266 : 
; 1267 :     return _Result < 0 ? -1 : _Result;

  00022	83 c9 ff	 or	 ecx, -1
  00025	83 c4 1c	 add	 esp, 28			; 0000001cH
  00028	85 c0		 test	 eax, eax
  0002a	0f 48 c1	 cmovs	 eax, ecx

; 1268 : }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<wchar_t const * const>, COMDAT

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  00000	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@QB_W@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<wchar_t const * const>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 74   :     static unsigned __int64 _OptionsStorage;
; 75   :     return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 76   : }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\8.1\include\shared\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 26297: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	7e 08		 jle	 SHORT $LN4@HRESULT_FR
  0000a	0f b7 c0	 movzx	 eax, ax
  0000d	0d 00 00 07 80	 or	 eax, -2147024896	; 80070000H
$LN4@HRESULT_FR:
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\stdafx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\stdafx.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
