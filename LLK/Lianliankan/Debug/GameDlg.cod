; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	D:\Study\数据结构与算法综合实验\连连看游戏\LLKPro17.6.18\Lianliankan\GameDlg.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__LINE__Var@?0??RegisterCategory@CTrace@ATL@@SAXPB_WI@Z@4JA ; `ATL::CTrace::RegisterCategory'::`1'::__LINE__Var
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm?$AAa?$AAn?$AAy?$AA?5?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAd?$AAe@ ; `string'
PUBLIC	??_C@_1IO@PCOKKAMF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ ; `string'
PUBLIC	??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	?OnPaint@CGameDlg@@IAEXXZ			; CGameDlg::OnPaint
PUBLIC	?_dispatchEntries@CGameDlg@@0QBUAFX_DISPMAP_ENTRY@@B ; CGameDlg::_dispatchEntries
PUBLIC	?_dispatchEntryCount@CGameDlg@@0IA		; CGameDlg::_dispatchEntryCount
PUBLIC	?_dwStockPropMask@CGameDlg@@0KA			; CGameDlg::_dwStockPropMask
PUBLIC	?_interfaceEntries@CGameDlg@@0QBUAFX_INTERFACEMAP_ENTRY@@B ; CGameDlg::_interfaceEntries
PUBLIC	?OnBnClickedBtnStart@CGameDlg@@QAEXXZ		; CGameDlg::OnBnClickedBtnStart
PUBLIC	?OnClose@CGameDlg@@QAEXXZ			; CGameDlg::OnClose
PUBLIC	?OnLButtonUp@CGameDlg@@QAEXIVCPoint@@@Z		; CGameDlg::OnLButtonUp
PUBLIC	?OnTimer@CGameDlg@@QAEXI@Z			; CGameDlg::OnTimer
PUBLIC	?OnBnClickedBtnStop@CGameDlg@@QAEXXZ		; CGameDlg::OnBnClickedBtnStop
PUBLIC	?OnBnClickedBtnTip@CGameDlg@@QAEXXZ		; CGameDlg::OnBnClickedBtnTip
PUBLIC	?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ		; CGameDlg::OnBnClickedBtnRerank
PUBLIC	?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ		; CGameDlg::OnBnClickedBtnHelp
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA ; `ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>'::`1'::__LINE__Var
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
EXTRN	?GetThisMessageMap@CDialogEx@@KGPBUAFX_MSGMAP@@XZ:PROC ; CDialogEx::GetThisMessageMap
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z@4JA DD 01e0H ; `ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?_interfaceEntries@CGameDlg@@0QBUAFX_INTERFACEMAP_ENTRY@@B
CONST	SEGMENT
?_interfaceEntries@CGameDlg@@0QBUAFX_INTERFACEMAP_ENTRY@@B DD FLAT:?IID_IGameDlg@@3U_GUID@@B ; CGameDlg::_interfaceEntries
	DD	010H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?_dwStockPropMask@CGameDlg@@0KA
_DATA	SEGMENT
?_dwStockPropMask@CGameDlg@@0KA DD 0ffffffffH		; CGameDlg::_dwStockPropMask
_DATA	ENDS
;	COMDAT ?_dispatchEntryCount@CGameDlg@@0IA
_DATA	SEGMENT
?_dispatchEntryCount@CGameDlg@@0IA DD 0ffffffffH	; CGameDlg::_dispatchEntryCount
_DATA	ENDS
;	COMDAT ?_dispatchEntries@CGameDlg@@0QBUAFX_DISPMAP_ENTRY@@B
CONST	SEGMENT
?_dispatchEntries@CGameDlg@@0QBUAFX_DISPMAP_ENTRY@@B DD 00H ; CGameDlg::_dispatchEntries
	DD	0ffffffffH
	DD	00H
	DW	018H
	ORG $+2
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB 'a'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'c', 00H
	DB	'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@PCOKKAMF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
CONST	SEGMENT
??_C@_1IO@PCOKKAMF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '\', 00H, 'm'
	DB	00H, 'i', 00H, 'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H
	DB	'f', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'u'
	DB	00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'u', 00H
	DB	'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '0', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 'a', 00H
	DB	't', 00H, 'l', 00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'c', 00H, 'e', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm?$AAa?$AAn?$AAy?$AA?5?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAd?$AAe@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm?$AAa?$AAn?$AAy?$AA?5?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAd?$AAe@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??RegisterCategory@CTrace@ATL@@SAXPB_WI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??RegisterCategory@CTrace@ATL@@SAXPB_WI@Z@4JA DD 0149H ; `ATL::CTrace::RegisterCategory'::`1'::__LINE__Var
_DATA	ENDS
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CGameDlg@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0fH ; `CGameDlg::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnPaint@CGameDlg@@IAEXXZ
	DD	0111H
	DD	00H
	DD	03f3H
	DD	03f3H
	DD	03aH
	DD	FLAT:?OnBnClickedBtnStart@CGameDlg@@QAEXXZ
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	FLAT:?OnClose@CGameDlg@@QAEXXZ
	DD	0202H
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnLButtonUp@CGameDlg@@QAEXIVCPoint@@@Z
	DD	0113H
	DD	00H
	DD	00H
	DD	00H
	DD	015H
	DD	FLAT:?OnTimer@CGameDlg@@QAEXI@Z
	DD	0111H
	DD	00H
	DD	03f6H
	DD	03f6H
	DD	03aH
	DD	FLAT:?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ
	DD	0111H
	DD	00H
	DD	03f4H
	DD	03f4H
	DD	03aH
	DD	FLAT:?OnBnClickedBtnStop@CGameDlg@@QAEXXZ
	DD	0111H
	DD	00H
	DD	03f5H
	DD	03f5H
	DD	03aH
	DD	FLAT:?OnBnClickedBtnTip@CGameDlg@@QAEXXZ
	DD	0111H
	DD	00H
	DD	03efH
	DD	03efH
	DD	03aH
	DD	FLAT:?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?messageMap@?1??GetThisMessageMap@CGameDlg@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CDialogEx@@KGPBUAFX_MSGMAP@@XZ ; `CGameDlg::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CGameDlg@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
?IID_IGameDlg@@3U_GUID@@B DD 0f497b997H			; IID_IGameDlg
	DW	0b536H
	DW	044c5H
	DB	083H
	DB	0bH
	DB	0fdH
	DB	043H
	DB	036H
	DB	015H
	DB	0f5H
	DB	0f0H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z	; ATL::CTrace::RegisterCategory
PUBLIC	??1CDialogEx@@UAE@XZ				; CDialogEx::~CDialogEx
PUBLIC	?_GetBaseClass@CGameDlg@@KGPAUCRuntimeClass@@XZ	; CGameDlg::_GetBaseClass
PUBLIC	?GetThisClass@CGameDlg@@SGPAUCRuntimeClass@@XZ	; CGameDlg::GetThisClass
PUBLIC	?GetRuntimeClass@CGameDlg@@UBEPAUCRuntimeClass@@XZ ; CGameDlg::GetRuntimeClass
PUBLIC	??0CGameDlg@@QAE@HPAVCWnd@@@Z			; CGameDlg::CGameDlg
PUBLIC	??1CGameDlg@@UAE@XZ				; CGameDlg::~CGameDlg
PUBLIC	?OnFinalRelease@CGameDlg@@UAEXXZ		; CGameDlg::OnFinalRelease
PUBLIC	?DoDataExchange@CGameDlg@@MAEXPAVCDataExchange@@@Z ; CGameDlg::DoDataExchange
PUBLIC	?OnInitDialog@CGameDlg@@MAEHXZ			; CGameDlg::OnInitDialog
PUBLIC	?InitElement@CGameDlg@@IAEXXZ			; CGameDlg::InitElement
PUBLIC	?DrawTipFrame@CGameDlg@@IAEXHH@Z		; CGameDlg::DrawTipFrame
PUBLIC	?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z	; CGameDlg::DrawTipLine
PUBLIC	?GetThisMessageMap@CGameDlg@@KGPBUAFX_MSGMAP@@XZ ; CGameDlg::GetThisMessageMap
PUBLIC	?GetMessageMap@CGameDlg@@MBEPBUAFX_MSGMAP@@XZ	; CGameDlg::GetMessageMap
PUBLIC	?GetThisDispatchMap@CGameDlg@@KGPBUAFX_DISPMAP@@XZ ; CGameDlg::GetThisDispatchMap
PUBLIC	?GetDispatchMap@CGameDlg@@MBEPBUAFX_DISPMAP@@XZ	; CGameDlg::GetDispatchMap
PUBLIC	?GetThisInterfaceMap@CGameDlg@@KGPBUAFX_INTERFACEMAP@@XZ ; CGameDlg::GetThisInterfaceMap
PUBLIC	?GetInterfaceMap@CGameDlg@@MBEPBUAFX_INTERFACEMAP@@XZ ; CGameDlg::GetInterfaceMap
PUBLIC	?InitBackground@CGameDlg@@AAEXXZ		; CGameDlg::InitBackground
PUBLIC	?UpdateGameRect@CGameDlg@@AAEXXZ		; CGameDlg::UpdateGameRect
PUBLIC	?UpdateWindow@CGameDlg@@AAEXXZ			; CGameDlg::UpdateWindow
PUBLIC	?UpdateMap@CGameDlg@@AAEXXZ			; CGameDlg::UpdateMap
PUBLIC	?LevelModelSupt@CGameDlg@@AAEXXZ		; CGameDlg::LevelModelSupt
PUBLIC	??_GCGameDlg@@UAEPAXI@Z				; CGameDlg::`scalar deleting destructor'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDialog@@8			; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDialog@@@8				; CDialog `RTTI Type Descriptor'
PUBLIC	??_R3CDialog@@8					; CDialog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDialog@@8					; CDialog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	?classCGameDlg@CGameDlg@@2UCRuntimeClass@@B	; CGameDlg::classCGameDlg
PUBLIC	?dispatchMap@CGameDlg@@1UAFX_DISPMAP@@B		; CGameDlg::dispatchMap
PUBLIC	?interfaceMap@CGameDlg@@1UAFX_INTERFACEMAP@@B	; CGameDlg::interfaceMap
PUBLIC	??_7CGameDlg@@6B@				; CGameDlg::`vftable'
PUBLIC	??_C@_08GKMPLMMB@CGameDlg?$AA@			; `string'
PUBLIC	?__LINE__Var@?0??OnInitDialog@CGameDlg@@MAEHXZ@4JA ; `CGameDlg::OnInitDialog'::`1'::__LINE__Var
PUBLIC	??_C@_0FB@LAAAELAE@d?3?2study?2?J?$PN?$LO?$NN?$LN?a?$LJ?$LJ?S?k?K?c?$LH?$KI?W?$NL?$LK?O?J?$LF?Q?i?2@ ; `string'
PUBLIC	??_C@_0BE@MIOIJJOK@?$LP?$KI?M?$KI?A?$KM?A?$KM?$LP?$LE?9?P?$NN?O?P?D?$KD?J?$LN?$AA@ ; `string'
PUBLIC	??_C@_0BE@HLNBPPPG@?$LP?$KI?M?$KI?A?$KM?A?$KM?$LP?$LE?9?$LJ?X?$LP?$KI?D?$KD?J?$LN?$AA@ ; `string'
PUBLIC	??_C@_15EGCHAEPE@c?Py?3?$AA?$AA@		; `string'
PUBLIC	??_C@_1BA@LALLHPFH@xn?$FL?$JO?$IJ?$IB?$JA?$AAQ?zT?$BH?$PP?$BP?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EM@JLJMBGN@?$AAr?$AAe?$AAs?$AA?2?$AAt?$AAh?$AAe?$AAm?$AAe?$AA?2?$AAp?$AAi?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?2?$AAa?$AAn?$AAi?$AAm?$AAa?$AAl?$AAs?$AA_?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_1EG@MAFPBOLK@?$AAr?$AAe?$AAs?$AA?2?$AAt?$AAh?$AAe?$AAm?$AAe?$AA?2?$AAp?$AAi?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?2?$AAa?$AAn?$AAi?$AAm?$AAa?$AAl?$AAs?$AA_?$AAm?$AAa?$AAs?$AAk?$AA?4?$AAb@ ; `string'
PUBLIC	??_C@_0BK@NLKKCNHG@res?2theme?2gamebkg?5?$CI2?$CJ?4bmp?$AA@ ; `string'
PUBLIC	??_C@_0BK@BOANBDPI@res?2theme?2gamebkg?5?$CI5?$CJ?4bmp?$AA@ ; `string'
PUBLIC	??_C@_0BK@HNNNCGMC@res?2theme?2gamebkg?5?$CI3?$CJ?4bmp?$AA@ ; `string'
PUBLIC	??_C@_1BG@IONENMJH@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@ELCFKCIF@?$AAY?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAw?$AAi?$AAn?$AAn?$AAe?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@CCLKKEBF@?$AAG?$AAo?$AA?5?$AAo?$AAn?$PP?$AB?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EM@DEAGLPKJ@?$AAY?$AAo?$AAu?$AA?5?$AAw?$AAi?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?5?$AAl?$AAe?$AAv?$AAe?$AAl?$AA?$CB?$AA?6?$AA?5?$AAP?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAg@ ; `string'
PUBLIC	??_C@_1DA@OIOCLOL@?$AAr?$AAe?$AAs?$AA?2?$AAm?$AAu?$AAs?$AAi?$AAc?$AA?2?$AAg?$AAa?$AAm?$AAe?$AAm?$AAu?$AAs?$AAi?$AAc?$AA?4?$AAw?$AAa?$AAv?$AA?$AA@ ; `string'
PUBLIC	??_C@_19CNLLPKFB@f?$ICP?2n8b?$AP?$AA?$AA@	; `string'
PUBLIC	??_C@_19IILDEBPE@?$HO?g?$HO?mn8b?$AP?$AA?$AA@	; `string'
PUBLIC	??_C@_1GI@CKHJOPBH@?$AAS?$AAo?$AAr?$AAr?$AAy?$AA?0?$AAt?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAi?$AAn?$AAk?$AAs?$AA?$CB?$AA?5?$AA?6?$AA?5?$AAM?$AAa?$AAy@ ; `string'
PUBLIC	??_C@_1O@DAFNBMPC@?$JB?M?$AA?5c?$JC?$AA?5?$AA?$CF?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@NLDHDIMH@RiOYe?v?$JF?t?$AA?3?$AA?$CF?$AAd?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@KPPLMDID@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EE@PLPIGKJC@?$AAT?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AA?5?$AAt?$AAi?$AAm?$AAe?$AA?$CB?$AA?5?$AA?6?$AA?5?$AAP?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAa?$AAg?$AAa?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1M@OMBMMBOJ@QsSa?$AA?3?$AA?$CF?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_R4CGameDlg@@6B@				; CGameDlg::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGameDlg@@@8				; CGameDlg `RTTI Type Descriptor'
PUBLIC	??_R3CGameDlg@@8				; CGameDlg::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGameDlg@@8				; CGameDlg::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGameDlg@@8			; CGameDlg::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDialogEx@@8			; CDialogEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDialogEx@@@8				; CDialogEx `RTTI Type Descriptor'
PUBLIC	??_R3CDialogEx@@8				; CDialogEx::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDialogEx@@8				; CDialogEx::`RTTI Base Class Array'
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__PeekMessageW@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__LoadImageW@24:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	__imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ:PROC
EXTRN	__imp_?IsEmpty@?$CSimpleStringT@_W$00@ATL@@QBE_NXZ:PROC
EXTRN	__imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_?Format@?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAAXPB_WZZ:PROC
EXTRN	__imp_?LoadStringW@?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z:PROC
EXTRN	??0CPen@@QAE@HHK@Z:PROC				; CPen::CPen
EXTRN	??1CPen@@UAE@XZ:PROC				; CPen::~CPen
EXTRN	?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z:PROC	; CBrush::FromHandle
EXTRN	??1CBrush@@UAE@XZ:PROC				; CBrush::~CBrush
EXTRN	?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ:PROC		; CDC::GetSafeHdc
EXTRN	??0CDC@@QAE@XZ:PROC				; CDC::CDC
EXTRN	?CreateCompatibleDC@CDC@@QAEHPAV1@@Z:PROC	; CDC::CreateCompatibleDC
EXTRN	?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?SelectObject@CDC@@QAEPAVCBrush@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?MoveTo@CDC@@QAE?AVCPoint@@HH@Z:PROC		; CDC::MoveTo
EXTRN	?LineTo@CDC@@QAEHHH@Z:PROC			; CDC::LineTo
EXTRN	?DrawIcon@CDC@@QAEHHHPAUHICON__@@@Z:PROC	; CDC::DrawIcon
EXTRN	?Rectangle@CDC@@QAEHPBUtagRECT@@@Z:PROC		; CDC::Rectangle
EXTRN	?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z:PROC		; CDC::BitBlt
EXTRN	?StretchBlt@CDC@@QAEHHHHHPAV1@HHHHK@Z:PROC	; CDC::StretchBlt
EXTRN	??1CDC@@UAE@XZ:PROC				; CDC::~CDC
EXTRN	?SelectObject@CDC@@QAEPAXPAX@Z:PROC		; CDC::SelectObject
EXTRN	??0CPaintDC@@QAE@PAVCWnd@@@Z:PROC		; CPaintDC::CPaintDC
EXTRN	??1CPaintDC@@UAE@XZ:PROC			; CPaintDC::~CPaintDC
EXTRN	??0CClientDC@@QAE@PAVCWnd@@@Z:PROC		; CClientDC::CClientDC
EXTRN	??1CClientDC@@UAE@XZ:PROC			; CClientDC::~CClientDC
EXTRN	?AppendMenuW@CMenu@@QAEHIIPB_W@Z:PROC		; CMenu::AppendMenuW
EXTRN	?EnableAutomation@CCmdTarget@@QAEXXZ:PROC	; CCmdTarget::EnableAutomation
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetThisDispatchMap@CCmdTarget@@KGPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetThisDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPB_W0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPB_W0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPB_W0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTW@@@Z:PROC ; CWnd::PreCreateWindow
EXTRN	?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z:PROC	; CWnd::CalcWindowRect
EXTRN	?GetDlgItem@CWnd@@QBEPAV1@H@Z:PROC		; CWnd::GetDlgItem
EXTRN	?SendMessageW@CWnd@@QBEJIIJ@Z:PROC		; CWnd::SendMessageW
EXTRN	?SetWindowTextW@CWnd@@QAEXPB_W@Z:PROC		; CWnd::SetWindowTextW
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?GetSystemMenu@CWnd@@QBEPAVCMenu@@H@Z:PROC	; CWnd::GetSystemMenu
EXTRN	?IsIconic@CWnd@@QBEHXZ:PROC			; CWnd::IsIconic
EXTRN	?MoveWindow@CWnd@@QAEXHHHHH@Z:PROC		; CWnd::MoveWindow
EXTRN	?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::GetWindowRect
EXTRN	?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z:PROC	; CWnd::GetClientRect
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:PROC			; CWnd::ShowWindow
EXTRN	?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z:PROC ; CWnd::SetTimer
EXTRN	?KillTimer@CWnd@@QAEHI@Z:PROC			; CWnd::KillTimer
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOW@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?EnableWindow@CWnd@@QAEHH@Z:PROC		; CWnd::EnableWindow
EXTRN	?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z:PROC ; CWnd::GetScrollBarCtrl
EXTRN	?MessageBoxW@CWnd@@QAEHPB_W0I@Z:PROC		; CWnd::MessageBoxW
EXTRN	?SetIcon@CWnd@@QAEPAUHICON__@@PAU2@H@Z:PROC	; CWnd::SetIcon
EXTRN	?WinHelpW@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpW
EXTRN	?HtmlHelpW@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpW
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?CenterWindow@CWnd@@QAEXPAV1@@Z:PROC		; CWnd::CenterWindow
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetThisInterfaceMap@CWnd@@KGPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetThisInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?OnClose@CWnd@@IAEXXZ:PROC			; CWnd::OnClose
EXTRN	?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z:PROC	; CWnd::OnLButtonUp
EXTRN	?OnTimer@CWnd@@IAEXI@Z:PROC			; CWnd::OnTimer
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:PROC ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:PROC		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:PROC		; CWnd::EndModalState
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcW@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcW
EXTRN	?PostNcDestroy@CWnd@@MAEXXZ:PROC		; CWnd::PostNcDestroy
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?Create@CDialog@@UAEHPB_WPAVCWnd@@@Z:PROC	; CDialog::Create
EXTRN	?Create@CDialog@@UAEHIPAVCWnd@@@Z:PROC		; CDialog::Create
EXTRN	?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z:PROC ; CDialog::CreateIndirect
EXTRN	?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z:PROC ; CDialog::CreateIndirect
EXTRN	?DoModal@CDialog@@UAEHXZ:PROC			; CDialog::DoModal
EXTRN	?OnInitDialog@CDialog@@UAEHXZ:PROC		; CDialog::OnInitDialog
EXTRN	?OnSetFont@CDialog@@UAEXPAVCFont@@@Z:PROC	; CDialog::OnSetFont
EXTRN	?OnOK@CDialog@@MAEXXZ:PROC			; CDialog::OnOK
EXTRN	?OnCancel@CDialog@@MAEXXZ:PROC			; CDialog::OnCancel
EXTRN	??1CDialog@@UAE@XZ:PROC				; CDialog::~CDialog
EXTRN	?AssertValid@CDialog@@UBEXXZ:PROC		; CDialog::AssertValid
EXTRN	?Dump@CDialog@@UBEXAAVCDumpContext@@@Z:PROC	; CDialog::Dump
EXTRN	?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CDialog::OnCmdMsg
EXTRN	?CheckAutoCenter@CDialog@@UAEHXZ:PROC		; CDialog::CheckAutoCenter
EXTRN	?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CDialog::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CDialog::GetOccDialogInfo
EXTRN	?PreInitDialog@CDialog@@MAEXXZ:PROC		; CDialog::PreInitDialog
EXTRN	?OnPaint@CDialog@@IAEXXZ:PROC			; CDialog::OnPaint
EXTRN	?AfxGetApp@@YGPAVCWinApp@@XZ:PROC		; AfxGetApp
EXTRN	?LoadIconW@CWinApp@@QBEPAUHICON__@@I@Z:PROC	; CWinApp::LoadIconW
EXTRN	?SetRange@CProgressCtrl@@QAEXFF@Z:PROC		; CProgressCtrl::SetRange
EXTRN	?SetPos@CProgressCtrl@@QAEHH@Z:PROC		; CProgressCtrl::SetPos
EXTRN	??1CDialogImpl@@MAE@XZ:PROC			; CDialogImpl::~CDialogImpl
EXTRN	?GetThisClass@CDialogEx@@SGPAUCRuntimeClass@@XZ:PROC ; CDialogEx::GetThisClass
EXTRN	??0CDialogEx@@QAE@IPAVCWnd@@@Z:PROC		; CDialogEx::CDialogEx
EXTRN	?PreTranslateMessage@CDialogEx@@UAEHPAUtagMSG@@@Z:PROC ; CDialogEx::PreTranslateMessage
EXTRN	?OnCommand@CDialogEx@@MAEHIJ@Z:PROC		; CDialogEx::OnCommand
EXTRN	??0CGameControl@@QAE@XZ:PROC			; CGameControl::CGameControl
EXTRN	??1CGameControl@@QAE@XZ:PROC			; CGameControl::~CGameControl
EXTRN	?StartGame@CGameControl@@QAEXXZ:PROC		; CGameControl::StartGame
EXTRN	?GetElement@CGameControl@@QAEHHH@Z:PROC		; CGameControl::GetElement
EXTRN	?Rerank@CGameControl@@QAEXXZ:PROC		; CGameControl::Rerank
EXTRN	?SetFirstPoint@CGameControl@@QAEXHH@Z:PROC	; CGameControl::SetFirstPoint
EXTRN	?SetSecPoint@CGameControl@@QAEXHH@Z:PROC	; CGameControl::SetSecPoint
EXTRN	?Link@CGameControl@@QAE_NPAUtagVertex@@AAH@Z:PROC ; CGameControl::Link
EXTRN	?Help@CGameControl@@QAE_NPAUtagVertex@@AAH@Z:PROC ; CGameControl::Help
EXTRN	?IsWin@CGameControl@@QAE_NXZ:PROC		; CGameControl::IsWin
EXTRN	??0CGameHelp@@QAE@PAVCWnd@@@Z:PROC		; CGameHelp::CGameHelp
EXTRN	??1CGameHelp@@UAE@XZ:PROC			; CGameHelp::~CGameHelp
EXTRN	??_ECGameDlg@@UAEPAXI@Z:PROC			; CGameDlg::`vector deleting destructor'
EXTRN	__imp__sndPlaySoundW@8:PROC
EXTRN	__imp__PlaySoundW@12:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?s_nRows@CGameControl@@2HA:DWORD		; CGameControl::s_nRows
EXTRN	?s_nCols@CGameControl@@2HA:DWORD		; CGameControl::s_nCols
EXTRN	?s_nPicNum@CGameControl@@2HA:DWORD		; CGameControl::s_nPicNum
EXTRN	___security_cookie:DWORD
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R2CDialogEx@@8
rdata$r	SEGMENT
??_R2CDialogEx@@8 DD FLAT:??_R1A@?0A@EA@CDialogEx@@8	; CDialogEx::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDialogEx@@8
rdata$r	SEGMENT
??_R3CDialogEx@@8 DD 00H				; CDialogEx::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CDialogEx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDialogEx@@@8
data$r	SEGMENT
??_R0?AVCDialogEx@@@8 DD FLAT:??_7type_info@@6B@	; CDialogEx `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDialogEx@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDialogEx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDialogEx@@8 DD FLAT:??_R0?AVCDialogEx@@@8 ; CDialogEx::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDialogEx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGameDlg@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGameDlg@@8 DD FLAT:??_R0?AVCGameDlg@@@8	; CGameDlg::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGameDlg@@8
rdata$r	ENDS
;	COMDAT ??_R2CGameDlg@@8
rdata$r	SEGMENT
??_R2CGameDlg@@8 DD FLAT:??_R1A@?0A@EA@CGameDlg@@8	; CGameDlg::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDialogEx@@8
	DD	FLAT:??_R1A@?0A@EA@CDialog@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGameDlg@@8
rdata$r	SEGMENT
??_R3CGameDlg@@8 DD 00H					; CGameDlg::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2CGameDlg@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGameDlg@@@8
data$r	SEGMENT
??_R0?AVCGameDlg@@@8 DD FLAT:??_7type_info@@6B@		; CGameDlg `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGameDlg@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGameDlg@@6B@
rdata$r	SEGMENT
??_R4CGameDlg@@6B@ DD 00H				; CGameDlg::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGameDlg@@@8
	DD	FLAT:??_R3CGameDlg@@8
rdata$r	ENDS
;	COMDAT ??_C@_1M@OMBMMBOJ@QsSa?$AA?3?$AA?$CF?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1M@OMBMMBOJ@QsSa?$AA?3?$AA?$CF?$AAd?$AA?$AA@ DB 'sQaS:', 00H, '%', 00H
	DB	'd', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@PLPIGKJC@?$AAT?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AA?5?$AAt?$AAi?$AAm?$AAe?$AA?$CB?$AA?5?$AA?6?$AA?5?$AAP?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAa?$AAg?$AAa?$AAi?$AAn@
CONST	SEGMENT
??_C@_1EE@PLPIGKJC@?$AAT?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AA?5?$AAt?$AAi?$AAm?$AAe?$AA?$CB?$AA?5?$AA?6?$AA?5?$AAP?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAa?$AAg?$AAa?$AAi?$AAn@ DB 'T'
	DB	00H, 'h', 00H, 'e', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'i', 00H
	DB	's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, ' ', 00H, 't', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, '!', 00H, ' ', 00H, 0aH, 00H, ' ', 00H
	DB	'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'g', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '.', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@KPPLMDID@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@KPPLMDID@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AA@ DB 'F', 00H
	DB	'a', 00H, 'i', 00H, 'l', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@NLDHDIMH@RiOYe?v?$JF?t?$AA?3?$AA?$CF?$AAd?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@NLDHDIMH@RiOYe?v?$JF?t?$AA?3?$AA?$CF?$AAd?$AAs?$AA?$AA@ DB 'iRY'
	DB	'O', 0f6H, 'e', 0f4H, 095H, ':', 00H, '%', 00H, 'd', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@DAFNBMPC@?$JB?M?$AA?5c?$JC?$AA?5?$AA?$CF?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1O@DAFNBMPC@?$JB?M?$AA?5c?$JC?$AA?5?$AA?$CF?$AAd?$AA?$AA@ DB 0cdH, 091H
	DB	' ', 00H, 092H, 'c ', 00H, '%', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@CKHJOPBH@?$AAS?$AAo?$AAr?$AAr?$AAy?$AA?0?$AAt?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAi?$AAn?$AAk?$AAs?$AA?$CB?$AA?5?$AA?6?$AA?5?$AAM?$AAa?$AAy@
CONST	SEGMENT
??_C@_1GI@CKHJOPBH@?$AAS?$AAo?$AAr?$AAr?$AAy?$AA?0?$AAt?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAi?$AAn?$AAk?$AAs?$AA?$CB?$AA?5?$AA?6?$AA?5?$AAM?$AAa?$AAy@ DB 'S'
	DB	00H, 'o', 00H, 'r', 00H, 'r', 00H, 'y', 00H, ',', 00H, 't', 00H
	DB	'h', 00H, 'e', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'l', 00H, 'i', 00H, 'n', 00H, 'k', 00H, 's', 00H, '!', 00H, ' '
	DB	00H, 0aH, 00H, ' ', 00H, 'M', 00H, 'a', 00H, 'y', 00H, ' ', 00H
	DB	'y', 00H, 'o', 00H, 'u', 00H, ' ', 00H, 'h', 00H, 'a', 00H, 'v'
	DB	00H, 'e', 00H, ' ', 00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H
	DB	'u', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_19IILDEBPE@?$HO?g?$HO?mn8b?$AP?$AA?$AA@
CONST	SEGMENT
??_C@_19IILDEBPE@?$HO?g?$HO?mn8b?$AP?$AA?$AA@ DB 0e7H, '~', 0edH, '~8n', 0fH
	DB	'b', 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19CNLLPKFB@f?$ICP?2n8b?$AP?$AA?$AA@
CONST	SEGMENT
??_C@_19CNLLPKFB@f?$ICP?2n8b?$AP?$AA?$AA@ DB 082H, 'f\P8n', 0fH, 'b', 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@OIOCLOL@?$AAr?$AAe?$AAs?$AA?2?$AAm?$AAu?$AAs?$AAi?$AAc?$AA?2?$AAg?$AAa?$AAm?$AAe?$AAm?$AAu?$AAs?$AAi?$AAc?$AA?4?$AAw?$AAa?$AAv?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@OIOCLOL@?$AAr?$AAe?$AAs?$AA?2?$AAm?$AAu?$AAs?$AAi?$AAc?$AA?2?$AAg?$AAa?$AAm?$AAe?$AAm?$AAu?$AAs?$AAi?$AAc?$AA?4?$AAw?$AAa?$AAv?$AA?$AA@ DB 'r'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'm', 00H, 'u', 00H, 's', 00H
	DB	'i', 00H, 'c', 00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'u', 00H, 's', 00H, 'i', 00H, 'c', 00H, '.', 00H
	DB	'w', 00H, 'a', 00H, 'v', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@DEAGLPKJ@?$AAY?$AAo?$AAu?$AA?5?$AAw?$AAi?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?5?$AAl?$AAe?$AAv?$AAe?$AAl?$AA?$CB?$AA?6?$AA?5?$AAP?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAg@
CONST	SEGMENT
??_C@_1EM@DEAGLPKJ@?$AAY?$AAo?$AAu?$AA?5?$AAw?$AAi?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?5?$AAl?$AAe?$AAv?$AAe?$AAl?$AA?$CB?$AA?6?$AA?5?$AAP?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAg@ DB 'Y'
	DB	00H, 'o', 00H, 'u', 00H, ' ', 00H, 'w', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i'
	DB	00H, 's', 00H, ' ', 00H, 'l', 00H, 'e', 00H, 'v', 00H, 'e', 00H
	DB	'l', 00H, '!', 00H, 0aH, 00H, ' ', 00H, 'P', 00H, 'l', 00H, 'e'
	DB	00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'g', 00H, 'o', 00H
	DB	' ', 00H, 'o', 00H, 'n', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@CCLKKEBF@?$AAG?$AAo?$AA?5?$AAo?$AAn?$PP?$AB?$AA?$AA@
CONST	SEGMENT
??_C@_1O@CCLKKEBF@?$AAG?$AAo?$AA?5?$AAo?$AAn?$PP?$AB?$AA?$AA@ DB 'G', 00H
	DB	'o', 00H, ' ', 00H, 'o', 00H, 'n', 00H, 01H, 0ffH, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@ELCFKCIF@?$AAY?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAw?$AAi?$AAn?$AAn?$AAe?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@ELCFKCIF@?$AAY?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAw?$AAi?$AAn?$AAn?$AAe?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AA@ DB 'Y'
	DB	00H, 'o', 00H, 'u', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'w', 00H, 'i'
	DB	00H, 'n', 00H, 'n', 00H, 'e', 00H, 'r', 00H, '!', 00H, '!', 00H
	DB	'!', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@IONENMJH@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@IONENMJH@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AA?$AA@ DB 'S'
	DB	00H, 'u', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'f', 00H, 'u', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HNNNCGMC@res?2theme?2gamebkg?5?$CI3?$CJ?4bmp?$AA@
CONST	SEGMENT
??_C@_0BK@HNNNCGMC@res?2theme?2gamebkg?5?$CI3?$CJ?4bmp?$AA@ DB 'res\theme'
	DB	'\gamebkg (3).bmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BOANBDPI@res?2theme?2gamebkg?5?$CI5?$CJ?4bmp?$AA@
CONST	SEGMENT
??_C@_0BK@BOANBDPI@res?2theme?2gamebkg?5?$CI5?$CJ?4bmp?$AA@ DB 'res\theme'
	DB	'\gamebkg (5).bmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NLKKCNHG@res?2theme?2gamebkg?5?$CI2?$CJ?4bmp?$AA@
CONST	SEGMENT
??_C@_0BK@NLKKCNHG@res?2theme?2gamebkg?5?$CI2?$CJ?4bmp?$AA@ DB 'res\theme'
	DB	'\gamebkg (2).bmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@MAFPBOLK@?$AAr?$AAe?$AAs?$AA?2?$AAt?$AAh?$AAe?$AAm?$AAe?$AA?2?$AAp?$AAi?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?2?$AAa?$AAn?$AAi?$AAm?$AAa?$AAl?$AAs?$AA_?$AAm?$AAa?$AAs?$AAk?$AA?4?$AAb@
CONST	SEGMENT
??_C@_1EG@MAFPBOLK@?$AAr?$AAe?$AAs?$AA?2?$AAt?$AAh?$AAe?$AAm?$AAe?$AA?2?$AAp?$AAi?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?2?$AAa?$AAn?$AAi?$AAm?$AAa?$AAl?$AAs?$AA_?$AAm?$AAa?$AAs?$AAk?$AA?4?$AAb@ DB 'r'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 't', 00H, 'h', 00H, 'e', 00H
	DB	'm', 00H, 'e', 00H, '\', 00H, 'p', 00H, 'i', 00H, 'c', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'n', 00H
	DB	'i', 00H, 'm', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 's', 00H, 'k', 00H, '.', 00H, 'b', 00H, 'm', 00H
	DB	'p', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@JLJMBGN@?$AAr?$AAe?$AAs?$AA?2?$AAt?$AAh?$AAe?$AAm?$AAe?$AA?2?$AAp?$AAi?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?2?$AAa?$AAn?$AAi?$AAm?$AAa?$AAl?$AAs?$AA_?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn@
CONST	SEGMENT
??_C@_1EM@JLJMBGN@?$AAr?$AAe?$AAs?$AA?2?$AAt?$AAh?$AAe?$AAm?$AAe?$AA?2?$AAp?$AAi?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?2?$AAa?$AAn?$AAi?$AAm?$AAa?$AAl?$AAs?$AA_?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn@ DB 'r'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 't', 00H, 'h', 00H, 'e', 00H
	DB	'm', 00H, 'e', 00H, '\', 00H, 'p', 00H, 'i', 00H, 'c', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'n', 00H
	DB	'i', 00H, 'm', 00H, 'a', 00H, 'l', 00H, 's', 00H, '_', 00H, 'e'
	DB	00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'.', 00H, 'b', 00H, 'm', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@LALLHPFH@xn?$FL?$JO?$IJ?$IB?$JA?$AAQ?zT?$BH?$PP?$BP?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@LALLHPFH@xn?$FL?$JO?$IJ?$IB?$JA?$AAQ?zT?$BH?$PP?$BP?$AA?$AA@ DB 'n'
	DB	'x', 09eH, '[', 081H, 089H, 00H, 090H, 0faH, 'Q', 017H, 'T', 01fH
	DB	0ffH, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_15EGCHAEPE@c?Py?3?$AA?$AA@
CONST	SEGMENT
??_C@_15EGCHAEPE@c?Py?3?$AA?$AA@ DB 0d0H, 'c:y', 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HLNBPPPG@?$LP?$KI?M?$KI?A?$KM?A?$KM?$LP?$LE?9?$LJ?X?$LP?$KI?D?$KD?J?$LN?$AA@
CONST	SEGMENT
??_C@_0BE@HLNBPPPG@?$LP?$KI?M?$KI?A?$KM?A?$KM?$LP?$LE?9?$LJ?X?$LP?$KI?D?$KD?J?$LN?$AA@ DB 0bfH
	DB	0a8H, 0cdH, 0a8H, 0c1H, 0acH, 0c1H, 0acH, 0bfH, 0b4H, '-', 0b9H
	DB	0d8H, 0bfH, 0a8H, 0c4H, 0a3H, 0caH, 0bdH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MIOIJJOK@?$LP?$KI?M?$KI?A?$KM?A?$KM?$LP?$LE?9?P?$NN?O?P?D?$KD?J?$LN?$AA@
CONST	SEGMENT
??_C@_0BE@MIOIJJOK@?$LP?$KI?M?$KI?A?$KM?A?$KM?$LP?$LE?9?P?$NN?O?P?D?$KD?J?$LN?$AA@ DB 0bfH
	DB	0a8H, 0cdH, 0a8H, 0c1H, 0acH, 0c1H, 0acH, 0bfH, 0b4H, '-', 0d0H
	DB	0ddH, 0cfH, 0d0H, 0c4H, 0a3H, 0caH, 0bdH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@LAAAELAE@d?3?2study?2?J?$PN?$LO?$NN?$LN?a?$LJ?$LJ?S?k?K?c?$LH?$KI?W?$NL?$LK?O?J?$LF?Q?i?2@
CONST	SEGMENT
??_C@_0FB@LAAAELAE@d?3?2study?2?J?$PN?$LO?$NN?$LN?a?$LJ?$LJ?S?k?K?c?$LH?$KI?W?$NL?$LK?O?J?$LF?Q?i?2@ DB 'd'
	DB	':\study\', 0caH, 0fdH, 0beH, 0ddH, 0bdH, 0e1H, 0b9H, 0b9H, 0d3H
	DB	0ebH, 0cbH, 0e3H, 0b7H, 0a8H, 0d7H, 0dbH, 0baH, 0cfH, 0caH, 0b5H
	DB	0d1H, 0e9H, '\', 0c1H, 0acH, 0c1H, 0acH, 0bfH, 0b4H, 0d3H, 0ceH
	DB	0cfH, 0b7H, '\llkpro17.6.18\lianliankan\gamedlg.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??OnInitDialog@CGameDlg@@MAEHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??OnInitDialog@CGameDlg@@MAEHXZ@4JA DD 07cH ; `CGameDlg::OnInitDialog'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08GKMPLMMB@CGameDlg?$AA@
CONST	SEGMENT
??_C@_08GKMPLMMB@CGameDlg?$AA@ DB 'CGameDlg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CGameDlg@@6B@
CONST	SEGMENT
??_7CGameDlg@@6B@ DD FLAT:??_R4CGameDlg@@6B@		; CGameDlg::`vftable'
	DD	FLAT:?GetRuntimeClass@CGameDlg@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECGameDlg@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CDialog@@UBEXXZ
	DD	FLAT:?Dump@CDialog@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CDialog@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CGameDlg@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CGameDlg@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CGameDlg@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CGameDlg@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPB_W0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPB_W0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPB_W0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CWnd@@UAEHAAUtagCREATESTRUCTW@@@Z
	DD	FLAT:?CalcWindowRect@CWnd@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOW@@@Z
	DD	FLAT:?GetScrollBarCtrl@CWnd@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpW@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CDialogEx@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CGameDlg@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CDialogEx@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcW@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CWnd@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CDialog@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CDialog@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CDialog@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?Create@CDialog@@UAEHIPAVCWnd@@@Z
	DD	FLAT:?Create@CDialog@@UAEHPB_WPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPAXPAVCWnd@@@Z
	DD	FLAT:?CreateIndirect@CDialog@@UAEHPBUDLGTEMPLATE@@PAVCWnd@@PAX@Z
	DD	FLAT:?DoModal@CDialog@@UAEHXZ
	DD	FLAT:?OnInitDialog@CGameDlg@@MAEHXZ
	DD	FLAT:?OnSetFont@CDialog@@UAEXPAVCFont@@@Z
	DD	FLAT:?OnOK@CDialog@@MAEXXZ
	DD	FLAT:?OnCancel@CDialog@@MAEXXZ
	DD	FLAT:?PreInitDialog@CDialog@@MAEXXZ
CONST	ENDS
;	COMDAT ?interfaceMap@CGameDlg@@1UAFX_INTERFACEMAP@@B
CONST	SEGMENT
?interfaceMap@CGameDlg@@1UAFX_INTERFACEMAP@@B DD FLAT:?GetThisInterfaceMap@CWnd@@KGPBUAFX_INTERFACEMAP@@XZ ; CGameDlg::interfaceMap
	DD	FLAT:?_interfaceEntries@CGameDlg@@0QBUAFX_INTERFACEMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?dispatchMap@CGameDlg@@1UAFX_DISPMAP@@B
CONST	SEGMENT
?dispatchMap@CGameDlg@@1UAFX_DISPMAP@@B DD FLAT:?GetThisDispatchMap@CCmdTarget@@KGPBUAFX_DISPMAP@@XZ ; CGameDlg::dispatchMap
	DD	FLAT:?_dispatchEntries@CGameDlg@@0QBUAFX_DISPMAP_ENTRY@@B
	DD	FLAT:?_dispatchEntryCount@CGameDlg@@0IA
	DD	FLAT:?_dwStockPropMask@CGameDlg@@0KA
CONST	ENDS
;	COMDAT ?classCGameDlg@CGameDlg@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCGameDlg@CGameDlg@@2UCRuntimeClass@@B DD FLAT:??_C@_08GKMPLMMB@CGameDlg?$AA@ ; CGameDlg::classCGameDlg
	DD	01a8H
	DD	0ffffH
	DD	00H
	DD	FLAT:?_GetBaseClass@CGameDlg@@KGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$r	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$r	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CDialog@@8
rdata$r	SEGMENT
??_R2CDialog@@8 DD FLAT:??_R1A@?0A@EA@CDialog@@8	; CDialog::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CDialog@@8
rdata$r	SEGMENT
??_R3CDialog@@8 DD 00H					; CDialog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDialog@@@8
data$r	SEGMENT
??_R0?AVCDialog@@@8 DD FLAT:??_7type_info@@6B@		; CDialog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDialog@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDialog@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDialog@@8 DD FLAT:??_R0?AVCDialog@@@8	; CDialog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDialog@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$r	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ$0
__ehfuncinfo$?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ$0
__ehfuncinfo$?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnTimer@CGameDlg@@QAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnTimer@CGameDlg@@QAEXI@Z$0
__ehfuncinfo$?OnTimer@CGameDlg@@QAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnTimer@CGameDlg@@QAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LevelModelSupt@CGameDlg@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LevelModelSupt@CGameDlg@@AAEXXZ$0
__ehfuncinfo$?LevelModelSupt@CGameDlg@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LevelModelSupt@CGameDlg@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UpdateMap@CGameDlg@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateMap@CGameDlg@@AAEXXZ$0
__ehfuncinfo$?UpdateMap@CGameDlg@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UpdateMap@CGameDlg@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UpdateGameRect@CGameDlg@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateGameRect@CGameDlg@@AAEXXZ$0
__ehfuncinfo$?UpdateGameRect@CGameDlg@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UpdateGameRect@CGameDlg@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitBackground@CGameDlg@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitBackground@CGameDlg@@AAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?InitBackground@CGameDlg@@AAEXXZ$1
__ehfuncinfo$?InitBackground@CGameDlg@@AAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitBackground@CGameDlg@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z$1
__ehfuncinfo$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DrawTipFrame@CGameDlg@@IAEXHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DrawTipFrame@CGameDlg@@IAEXHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DrawTipFrame@CGameDlg@@IAEXHH@Z$1
__ehfuncinfo$?DrawTipFrame@CGameDlg@@IAEXHH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DrawTipFrame@CGameDlg@@IAEXHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitElement@CGameDlg@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitElement@CGameDlg@@IAEXXZ$0
__ehfuncinfo$?InitElement@CGameDlg@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitElement@CGameDlg@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnInitDialog@CGameDlg@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnInitDialog@CGameDlg@@MAEHXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnInitDialog@CGameDlg@@MAEHXZ$1
__ehfuncinfo$?OnInitDialog@CGameDlg@@MAEHXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?OnInitDialog@CGameDlg@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnPaint@CGameDlg@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnPaint@CGameDlg@@IAEXXZ$0
__ehfuncinfo$?OnPaint@CGameDlg@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnPaint@CGameDlg@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CGameDlg@@QAE@HPAVCWnd@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0CGameDlg@@QAE@HPAVCWnd@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CGameDlg@@QAE@HPAVCWnd@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$5
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGameDlg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGameDlg@@UAEPAXI@Z PROC				; CGameDlg::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGameDlg@@UAE@XZ	; CGameDlg::~CGameDlg
  0000b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0000e	a8 01		 test	 al, 1
  00010	74 1f		 je	 SHORT $LN7@scalar
  00012	a8 04		 test	 al, 4
  00014	75 0d		 jne	 SHORT $LN3@scalar
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
$LN3@scalar:
  00023	68 a8 01 00 00	 push	 424			; 000001a8H
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002e	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??_GCGameDlg@@UAEPAXI@Z ENDP				; CGameDlg::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ
_TEXT	SEGMENT
_gameHelpDlg$ = -224					; size = 208
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ PROC		; CGameDlg::OnBnClickedBtnHelp, COMDAT
; _this$ = ecx

; 554  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	68 d0 00 00 00	 push	 208			; 000000d0H
  00030	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _gameHelpDlg$[ebp]
  00036	6a 00		 push	 0
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 _memset
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 555  : 	//创建并模态显示“版主”对话框
; 556  : 	CGameHelp gameHelpDlg;

  00041	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _gameHelpDlg$[ebp]
  00047	6a 00		 push	 0
  00049	e8 00 00 00 00	 call	 ??0CGameHelp@@QAE@PAVCWnd@@@Z ; CGameHelp::CGameHelp

; 557  : 	gameHelpDlg.DoModal();

  0004e	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _gameHelpDlg$[ebp]
  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005b	e8 00 00 00 00	 call	 ?DoModal@CDialog@@UAEHXZ ; CDialog::DoModal

; 558  : }

  00060	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _gameHelpDlg$[ebp]
  00066	e8 00 00 00 00	 call	 ??1CGameHelp@@UAE@XZ	; CGameHelp::~CGameHelp
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	33 cd		 xor	 ecx, ebp
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ$0:
  00000	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _gameHelpDlg$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CGameHelp@@UAE@XZ	; CGameHelp::~CGameHelp
__ehhandler$?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 28 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-216]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnBnClickedBtnHelp@CGameDlg@@QAEXXZ ENDP		; CGameDlg::OnBnClickedBtnHelp
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ
_TEXT	SEGMENT
_rankStr$2 = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ PROC		; CGameDlg::OnBnClickedBtnRerank, COMDAT
; _this$ = ecx

; 456  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx

; 457  : 	if (m_bPlaying && nRerank > 0)   //只有游戏开始后有重排次数前提下才能重排

  0002c	80 bf 95 01 00
	00 00		 cmp	 BYTE PTR [edi+405], 0
  00033	74 71		 je	 SHORT $LN2@OnBnClicke
  00035	83 bf 98 01 00
	00 00		 cmp	 DWORD PTR [edi+408], 0
  0003c	7e 68		 jle	 SHORT $LN2@OnBnClicke

; 458  : 	{
; 459  : 		m_GameC.Rerank();   //重排地图元素

  0003e	8d 8f 34 01 00
	00		 lea	 ecx, DWORD PTR [edi+308]
  00044	e8 00 00 00 00	 call	 ?Rerank@CGameControl@@QAEXXZ ; CGameControl::Rerank

; 460  : 		UpdateMap();		//刷新地图

  00049	8b cf		 mov	 ecx, edi
  0004b	e8 00 00 00 00	 call	 ?UpdateMap@CGameDlg@@AAEXXZ ; CGameDlg::UpdateMap

; 461  : 		nRerank--;          //重排次数减1

  00050	ff 8f 98 01 00
	00		 dec	 DWORD PTR [edi+408]

; 462  : 		CButton *pBtn = (CButton*)GetDlgItem(IDC_BTN_Rerank);   //按钮指针指向IDC_BTN_Rerank这个按钮 

  00056	8b cf		 mov	 ecx, edi
  00058	68 f6 03 00 00	 push	 1014			; 000003f6H
  0005d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem

; 463  : 		CString rankStr;

  00062	8d 4d ec	 lea	 ecx, DWORD PTR _rankStr$2[ebp]
  00065	8b f0		 mov	 esi, eax
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ

; 464  : 		rankStr.Format(_T("重 排 %d"), nRerank);

  0006d	ff b7 98 01 00
	00		 push	 DWORD PTR [edi+408]
  00073	8d 45 ec	 lea	 eax, DWORD PTR _rankStr$2[ebp]
  00076	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_1O@DAFNBMPC@?$JB?M?$AA?5c?$JC?$AA?5?$AA?$CF?$AAd?$AA?$AA@
  00082	50		 push	 eax
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAAXPB_WZZ
  00089	83 c4 0c	 add	 esp, 12			; 0000000cH

; 465  : 		pBtn->SetWindowTextW(rankStr);    //设置“重排”按钮文本

  0008c	8d 4d ec	 lea	 ecx, DWORD PTR _rankStr$2[ebp]
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
  00095	50		 push	 eax
  00096	8b ce		 mov	 ecx, esi
  00098	e8 00 00 00 00	 call	 ?SetWindowTextW@CWnd@@QAEXPB_W@Z ; CWnd::SetWindowTextW

; 466  : 	}

  0009d	8d 4d ec	 lea	 ecx, DWORD PTR _rankStr$2[ebp]
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
$LN2@OnBnClicke:

; 467  : }

  000a6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b0	59		 pop	 ecx
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b6	33 cd		 xor	 ecx, ebp
  000b8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _rankStr$2[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnBnClickedBtnRerank@CGameDlg@@QAEXXZ ENDP		; CGameDlg::OnBnClickedBtnRerank
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnBnClickedBtnTip@CGameDlg@@QAEXXZ
_TEXT	SEGMENT
_nVexnum$ = -56						; size = 4
_avPath$ = -52						; size = 48
__$ArrayPad$ = -4					; size = 4
?OnBnClickedBtnTip@CGameDlg@@QAEXXZ PROC		; CGameDlg::OnBnClickedBtnTip, COMDAT
; _this$ = ecx

; 431  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx

; 432  : 	if (!m_bPlaying)   //游戏进行时才有效

  00013	80 bf 95 01 00
	00 00		 cmp	 BYTE PTR [edi+405], 0
  0001a	0f 84 89 00 00
	00		 je	 $LN4@OnBnClicke

; 433  : 		return;
; 434  : 	Vertex avPath[PathLen];
; 435  : 	int nVexnum = 0;
; 436  : 	bool bSuc = m_GameC.Help(avPath, nVexnum);   

  00020	8d 45 c8	 lea	 eax, DWORD PTR _nVexnum$[ebp]
  00023	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _nVexnum$[ebp], 0
  0002a	50		 push	 eax
  0002b	8d 45 cc	 lea	 eax, DWORD PTR _avPath$[ebp]
  0002e	50		 push	 eax
  0002f	8d 8f 34 01 00
	00		 lea	 ecx, DWORD PTR [edi+308]
  00035	e8 00 00 00 00	 call	 ?Help@CGameControl@@QAE_NPAUtagVertex@@AAH@Z ; CGameControl::Help

; 437  : 	if (bSuc == true)    	//如果可以生成提示
; 438  : 	{
; 439  : 		extraTime -= 30;         //规则：成功使用一次提示剩余时间减30s
; 440  : 		DrawTipLine(avPath, nVexnum);    // 画提示线，1遍 

  0003a	8b cf		 mov	 ecx, edi
  0003c	3c 01		 cmp	 al, 1
  0003e	75 5b		 jne	 SHORT $LN3@OnBnClicke
  00040	83 87 9c 01 00
	00 e2		 add	 DWORD PTR [edi+412], -30 ; ffffffe2H
  00047	8d 45 cc	 lea	 eax, DWORD PTR _avPath$[ebp]
  0004a	56		 push	 esi
  0004b	ff 75 c8	 push	 DWORD PTR _nVexnum$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z ; CGameDlg::DrawTipLine

; 441  : 		Sleep(300);     //暂停300ms，让玩家观察

  00054	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__Sleep@4
  0005a	68 2c 01 00 00	 push	 300			; 0000012cH
  0005f	ff d6		 call	 esi

; 442  : 		UpdateMap();    //刷新地图

  00061	8b cf		 mov	 ecx, edi
  00063	e8 00 00 00 00	 call	 ?UpdateMap@CGameDlg@@AAEXXZ ; CGameDlg::UpdateMap

; 443  : 		Sleep(300);     //暂停300ms，让玩家观察

  00068	68 2c 01 00 00	 push	 300			; 0000012cH
  0006d	ff d6		 call	 esi

; 444  : 		DrawTipLine(avPath, nVexnum);    // 画提示线，2遍

  0006f	ff 75 c8	 push	 DWORD PTR _nVexnum$[ebp]
  00072	8d 45 cc	 lea	 eax, DWORD PTR _avPath$[ebp]
  00075	8b cf		 mov	 ecx, edi
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z ; CGameDlg::DrawTipLine

; 445  : 		Sleep(300);     //暂停300ms，让玩家观察

  0007d	68 2c 01 00 00	 push	 300			; 0000012cH
  00082	ff d6		 call	 esi

; 446  : 		UpdateMap();    //刷新地图

  00084	8b cf		 mov	 ecx, edi
  00086	e8 00 00 00 00	 call	 ?UpdateMap@CGameDlg@@AAEXXZ ; CGameDlg::UpdateMap
  0008b	5e		 pop	 esi
  0008c	5f		 pop	 edi

; 451  : 	}
; 452  : }

  0008d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00090	33 cd		 xor	 ecx, ebp
  00092	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
$LN3@OnBnClicke:

; 447  : 	}
; 448  : 	else
; 449  : 	{
; 450  : 		MessageBox(_T("Sorry,there are not links! \n May you have failured!"));   //弹窗提示找不到可消除的图片

  0009b	6a 00		 push	 0
  0009d	6a 00		 push	 0
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_1GI@CKHJOPBH@?$AAS?$AAo?$AAr?$AAr?$AAy?$AA?0?$AAt?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl?$AAi?$AAn?$AAk?$AAs?$AA?$CB?$AA?5?$AA?6?$AA?5?$AAM?$AAa?$AAy@
  000a4	e8 00 00 00 00	 call	 ?MessageBoxW@CWnd@@QAEHPB_W0I@Z ; CWnd::MessageBoxW
$LN4@OnBnClicke:

; 451  : 	}
; 452  : }

  000a9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ac	33 cd		 xor	 ecx, ebp
  000ae	5f		 pop	 edi
  000af	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?OnBnClickedBtnTip@CGameDlg@@QAEXXZ ENDP		; CGameDlg::OnBnClickedBtnTip
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnBnClickedBtnStop@CGameDlg@@QAEXXZ
_TEXT	SEGMENT
?OnBnClickedBtnStop@CGameDlg@@QAEXXZ PROC		; CGameDlg::OnBnClickedBtnStop, COMDAT
; _this$ = ecx

; 419  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 420  : 	m_bPlaying = !m_bPlaying;     //游戏状态切换
; 421  : 	CButton *pBtn = (CButton*)GetDlgItem(IDC_BTN_Stop);   //按钮指针指向IDC_BTN_Stop这个按钮 

  00003	68 f4 03 00 00	 push	 1012			; 000003f4H
  00008	80 be 95 01 00
	00 00		 cmp	 BYTE PTR [esi+405], 0
  0000f	0f 94 c0	 sete	 al
  00012	88 86 95 01 00
	00		 mov	 BYTE PTR [esi+405], al
  00018	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem

; 422  : 	//根据游戏状态设置按钮上显示的文本
; 423  : 	if (m_bPlaying)

  0001d	80 be 95 01 00
	00 00		 cmp	 BYTE PTR [esi+405], 0

; 424  : 		pBtn->SetWindowTextW(_T("暂停游戏"));

  00024	8b c8		 mov	 ecx, eax
  00026	5e		 pop	 esi
  00027	74 0b		 je	 SHORT $LN2@OnBnClicke
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_19CNLLPKFB@f?$ICP?2n8b?$AP?$AA?$AA@

; 425  : 	else
; 426  : 		pBtn->SetWindowTextW(_T("继续游戏"));

  0002e	e8 00 00 00 00	 call	 ?SetWindowTextW@CWnd@@QAEXPB_W@Z ; CWnd::SetWindowTextW

; 427  : }

  00033	c3		 ret	 0
$LN2@OnBnClicke:

; 425  : 	else
; 426  : 		pBtn->SetWindowTextW(_T("继续游戏"));

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_19IILDEBPE@?$HO?g?$HO?mn8b?$AP?$AA?$AA@
  00039	e8 00 00 00 00	 call	 ?SetWindowTextW@CWnd@@QAEXPB_W@Z ; CWnd::SetWindowTextW

; 427  : }

  0003e	c3		 ret	 0
?OnBnClickedBtnStop@CGameDlg@@QAEXXZ ENDP		; CGameDlg::OnBnClickedBtnStop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnTimer@CGameDlg@@QAEXI@Z
_TEXT	SEGMENT
_timeStr$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_nIDEvent$ = 8						; size = 4
?OnTimer@CGameDlg@@QAEXI@Z PROC				; CGameDlg::OnTimer, COMDAT
; _this$ = ecx

; 471  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnTimer@CGameDlg@@QAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b f1		 mov	 esi, ecx

; 472  : 	if (!m_bPlaying)    //如果游戏处于停止状态，则不进行进度条操作

  0002b	80 be 95 01 00
	00 00		 cmp	 BYTE PTR [esi+405], 0
  00032	0f 84 b3 00 00
	00		 je	 $LN1@OnTimer

; 473  : 		return;
; 474  : 	int m_nStep = 1;      //步长
; 475  : 	//extraTime = pProgCtrl->StepIt();		//取得更新前位置,即当前剩余时间 
; 476  : 	extraTime -= m_nStep;         //剩余时间递减

  00038	ff 8e 9c 01 00
	00		 dec	 DWORD PTR [esi+412]

; 477  : 	pProgCtrl->SetPos(extraTime);    //更新进度位置

  0003e	ff b6 9c 01 00
	00		 push	 DWORD PTR [esi+412]
  00044	8b 8e 88 01 00
	00		 mov	 ecx, DWORD PTR [esi+392]
  0004a	e8 00 00 00 00	 call	 ?SetPos@CProgressCtrl@@QAEHH@Z ; CProgressCtrl::SetPos

; 478  : 	CString timeStr;              //剩余时间字符串对象

  0004f	8d 4d ec	 lea	 ecx, DWORD PTR _timeStr$[ebp]
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ

; 479  : 	timeStr.Format(_T("剩余时间:%ds"), extraTime);   //格式化修改静态文本

  00058	ff b6 9c 01 00
	00		 push	 DWORD PTR [esi+412]
  0005e	8d 45 ec	 lea	 eax, DWORD PTR _timeStr$[ebp]
  00061	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@NLDHDIMH@RiOYe?v?$JF?t?$AA?3?$AA?$CF?$AAd?$AAs?$AA?$AA@
  0006d	50		 push	 eax
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAAXPB_WZZ
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH

; 480  : 	pStaticTime->SetWindowTextW(timeStr);       //设置静态文本内容

  00077	8d 4d ec	 lea	 ecx, DWORD PTR _timeStr$[ebp]
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
  00080	8b 8e 8c 01 00
	00		 mov	 ecx, DWORD PTR [esi+396]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?SetWindowTextW@CWnd@@QAEXPB_W@Z ; CWnd::SetWindowTextW

; 481  : 
; 482  : 	if (extraTime <= 0)

  0008c	83 be 9c 01 00
	00 00		 cmp	 DWORD PTR [esi+412], 0
  00093	7f 43		 jg	 SHORT $LN4@OnTimer

; 483  : 	{
; 484  : 		KillTimer(TimerOne);      //卸载定时器

  00095	6a 01		 push	 1
  00097	8b ce		 mov	 ecx, esi
  00099	e8 00 00 00 00	 call	 ?KillTimer@CWnd@@QAEHI@Z ; CWnd::KillTimer

; 485  : 		CButton *pBtn = (CButton*)GetDlgItem(IDC_BTN_START);   //按钮指针指向IDC_BTN_START这个按钮 

  0009e	68 f3 03 00 00	 push	 1011			; 000003f3H
  000a3	8b ce		 mov	 ecx, esi
  000a5	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem

; 486  : 		pBtn->EnableWindow(TRUE);    // "开始游戏"按钮设为可用

  000aa	6a 01		 push	 1
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 487  : 		if (MessageBox(_T("There is no time! \n Please again."), _T("Failure"), MB_OK) == IDOK)   //弹窗提醒玩家超时！

  000b3	6a 00		 push	 0
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@KPPLMDID@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AA@
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_1EE@PLPIGKJC@?$AAT?$AAh?$AAe?$AAr?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AA?5?$AAt?$AAi?$AAm?$AAe?$AA?$CB?$AA?5?$AA?6?$AA?5?$AAP?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAa?$AAg?$AAa?$AAi?$AAn@
  000bf	8b ce		 mov	 ecx, esi
  000c1	e8 00 00 00 00	 call	 ?MessageBoxW@CWnd@@QAEHPB_W0I@Z ; CWnd::MessageBoxW
  000c6	83 f8 01	 cmp	 eax, 1
  000c9	75 0d		 jne	 SHORT $LN4@OnTimer

; 488  : 		{
; 489  : 			m_bPlaying = false;    //游戏置为停止状态

  000cb	c6 86 95 01 00
	00 00		 mov	 BYTE PTR [esi+405], 0

; 490  : 			level = 1;            //重置关卡等级

  000d2	89 86 a4 01 00
	00		 mov	 DWORD PTR [esi+420], eax
$LN4@OnTimer:

; 491  : 		}
; 492  : 	}
; 493  : 	CDialogEx::OnTimer(nIDEvent);

  000d8	ff 75 08	 push	 DWORD PTR _nIDEvent$[ebp]
  000db	8b ce		 mov	 ecx, esi
  000dd	e8 00 00 00 00	 call	 ?OnTimer@CWnd@@IAEXI@Z	; CWnd::OnTimer

; 494  : }

  000e2	8d 4d ec	 lea	 ecx, DWORD PTR _timeStr$[ebp]
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
$LN1@OnTimer:
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f5	59		 pop	 ecx
  000f6	5e		 pop	 esi
  000f7	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fa	33 cd		 xor	 ecx, ebp
  000fc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnTimer@CGameDlg@@QAEXI@Z$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _timeStr$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?OnTimer@CGameDlg@@QAEXI@Z:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnTimer@CGameDlg@@QAEXI@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnTimer@CGameDlg@@QAEXI@Z ENDP				; CGameDlg::OnTimer
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnLButtonUp@CGameDlg@@QAEXIVCPoint@@@Z
_TEXT	SEGMENT
_nVexnum$1 = -56					; size = 4
_avPath$2 = -52						; size = 48
__$ArrayPad$ = -4					; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonUp@CGameDlg@@QAEXIVCPoint@@@Z PROC		; CGameDlg::OnLButtonUp, COMDAT
; _this$ = ecx

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx

; 308  : 	if (!m_bPlaying)    //如果游戏未在进行，不响应鼠标事件

  00013	80 be 95 01 00
	00 00		 cmp	 BYTE PTR [esi+405], 0
  0001a	0f 84 b3 01 00
	00		 je	 $LN7@OnLButtonU

; 309  : 		return;
; 310  : 	// 判断鼠标点击的区域  
; 311  : 	if(point.y < m_rtGameRect.top + m_sizeElem.cy || point.y > m_rtGameRect.bottom - m_sizeElem.cy || point.x < m_rtGameRect.left + m_sizeElem.cx || point.x > m_rtGameRect.right - m_sizeElem.cx)

  00020	8b 86 28 01 00
	00		 mov	 eax, DWORD PTR [esi+296]
  00026	8b 55 10	 mov	 edx, DWORD PTR _point$[ebp+4]
  00029	53		 push	 ebx
  0002a	8b 9e 20 01 00
	00		 mov	 ebx, DWORD PTR [esi+288]
  00030	03 c3		 add	 eax, ebx
  00032	57		 push	 edi
  00033	8b 7d 0c	 mov	 edi, DWORD PTR _point$[ebp]
  00036	3b d0		 cmp	 edx, eax
  00038	0f 8c 87 01 00
	00		 jl	 $LN4@OnLButtonU
  0003e	8b 86 30 01 00
	00		 mov	 eax, DWORD PTR [esi+304]
  00044	2b c3		 sub	 eax, ebx
  00046	3b d0		 cmp	 edx, eax
  00048	0f 8f 77 01 00
	00		 jg	 $LN4@OnLButtonU
  0004e	8b 86 1c 01 00
	00		 mov	 eax, DWORD PTR [esi+284]
  00054	03 86 24 01 00
	00		 add	 eax, DWORD PTR [esi+292]
  0005a	3b f8		 cmp	 edi, eax
  0005c	0f 8c 63 01 00
	00		 jl	 $LN4@OnLButtonU
  00062	8b 8e 2c 01 00
	00		 mov	 ecx, DWORD PTR [esi+300]
  00068	2b 8e 1c 01 00
	00		 sub	 ecx, DWORD PTR [esi+284]
  0006e	3b f9		 cmp	 edi, ecx
  00070	0f 8f 4f 01 00
	00		 jg	 $LN4@OnLButtonU

; 314  : 	} 
; 315  : 	int nRow = (int)(point.y - m_rtGameRect.top) / m_sizeElem.cy;    //点击位置所在行号

  00076	2b 96 28 01 00
	00		 sub	 edx, DWORD PTR [esi+296]

; 316  : 	int nCol = (int)(point.x - m_rtGameRect.left) / m_sizeElem.cx;   //点击位置所在列号
; 317  : 
; 318  : 	if (m_GameC.GetElement(nRow, nCol) != BLANK)   // 若未被消除则选中

  0007c	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
  00082	8b c2		 mov	 eax, edx
  00084	2b be 24 01 00
	00		 sub	 edi, DWORD PTR [esi+292]
  0008a	99		 cdq
  0008b	f7 fb		 idiv	 ebx
  0008d	8b d8		 mov	 ebx, eax
  0008f	8b c7		 mov	 eax, edi
  00091	99		 cdq
  00092	f7 be 1c 01 00
	00		 idiv	 DWORD PTR [esi+284]
  00098	8b f8		 mov	 edi, eax
  0009a	57		 push	 edi
  0009b	53		 push	 ebx
  0009c	e8 00 00 00 00	 call	 ?GetElement@CGameControl@@QAEHHH@Z ; CGameControl::GetElement
  000a1	83 f8 ff	 cmp	 eax, -1
  000a4	0f 84 27 01 00
	00		 je	 $LN13@OnLButtonU

; 319  : 	{
; 320  : 		if (m_bFirstPoint)  // 第一个点  

  000aa	80 be 94 01 00
	00 00		 cmp	 BYTE PTR [esi+404], 0

; 321  : 		{
; 322  : 			DrawTipFrame(nRow, nCol);     //绘制第一个矩形提示框

  000b1	8b ce		 mov	 ecx, esi
  000b3	57		 push	 edi
  000b4	53		 push	 ebx
  000b5	74 2c		 je	 SHORT $LN6@OnLButtonU
  000b7	e8 00 00 00 00	 call	 ?DrawTipFrame@CGameDlg@@IAEXHH@Z ; CGameDlg::DrawTipFrame

; 323  : 			m_GameC.SetFirstPoint(nRow, nCol);   //设置选中的第一个点的记录

  000bc	57		 push	 edi
  000bd	53		 push	 ebx
  000be	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
  000c4	e8 00 00 00 00	 call	 ?SetFirstPoint@CGameControl@@QAEXHH@Z ; CGameControl::SetFirstPoint
  000c9	5f		 pop	 edi
  000ca	5b		 pop	 ebx

; 324  : 			m_bFirstPoint = false;

  000cb	c6 86 94 01 00
	00 00		 mov	 BYTE PTR [esi+404], 0
  000d2	5e		 pop	 esi

; 359  : 		}
; 360  : 	}
; 361  : }

  000d3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d6	33 cd		 xor	 ecx, ebp
  000d8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c2 0c 00	 ret	 12			; 0000000cH
$LN6@OnLButtonU:

; 325  : 		}
; 326  : 		else               // 第二个点
; 327  : 		{
; 328  : 			DrawTipFrame(nRow, nCol);     //绘制第二个矩形提示框

  000e3	e8 00 00 00 00	 call	 ?DrawTipFrame@CGameDlg@@IAEXHH@Z ; CGameDlg::DrawTipFrame

; 329  : 			m_GameC.SetSecPoint(nRow, nCol);   //设置选中的第二个点的记录

  000e8	57		 push	 edi
  000e9	53		 push	 ebx
  000ea	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
  000f0	e8 00 00 00 00	 call	 ?SetSecPoint@CGameControl@@QAEXHH@Z ; CGameControl::SetSecPoint

; 330  : 
; 331  : 			// 连子判断  
; 332  : 			Vertex avPath[PathLen];
; 333  : 			int nVexnum = 0;
; 334  : 			bool bSuc = m_GameC.Link(avPath, nVexnum);

  000f5	8d 45 c8	 lea	 eax, DWORD PTR _nVexnum$1[ebp]
  000f8	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _nVexnum$1[ebp], 0
  000ff	50		 push	 eax
  00100	8d 45 cc	 lea	 eax, DWORD PTR _avPath$2[ebp]
  00103	50		 push	 eax
  00104	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
  0010a	e8 00 00 00 00	 call	 ?Link@CGameControl@@QAE_NPAUtagVertex@@AAH@Z ; CGameControl::Link

; 335  : 			if (bSuc == true)

  0010f	3c 01		 cmp	 al, 1
  00111	0f 85 84 00 00
	00		 jne	 $LN11@OnLButtonU

; 336  : 			{
; 337  : 				DrawTipLine(avPath, nVexnum);    // 画提示线  

  00117	ff 75 c8	 push	 DWORD PTR _nVexnum$1[ebp]
  0011a	8d 45 cc	 lea	 eax, DWORD PTR _avPath$2[ebp]
  0011d	8b ce		 mov	 ecx, esi
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 ?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z ; CGameDlg::DrawTipLine

; 338  : 				Sleep(200);     //暂停200ms，避免一闪而过

  00125	68 c8 00 00 00	 push	 200			; 000000c8H
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4

; 339  : 				extraTime += 10;      //消除一对后剩余时间加10s

  00130	83 86 9c 01 00
	00 0a		 add	 DWORD PTR [esi+412], 10	; 0000000aH

; 340  : 				//PlaySound(_T("res\\music\\cut2.wav"), NULL, SND_FILENAME | SND_ASYNC );   // 播放消除声音
; 341  : 				if (m_GameC.IsWin())

  00137	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
  0013d	e8 00 00 00 00	 call	 ?IsWin@CGameControl@@QAE_NXZ ; CGameControl::IsWin
  00142	84 c0		 test	 al, al
  00144	74 55		 je	 SHORT $LN11@OnLButtonU

; 342  : 				{
; 343  : 					CButton *pBtn = (CButton*)GetDlgItem(IDC_BTN_START);   //按钮指针指向IDC_BTN_START这个按钮 

  00146	68 f3 03 00 00	 push	 1011			; 000003f3H
  0014b	8b ce		 mov	 ecx, esi
  0014d	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem

; 344  : 					pBtn->EnableWindow(TRUE);    // "开始游戏"按钮设为可用

  00152	6a 01		 push	 1
  00154	8b c8		 mov	 ecx, eax
  00156	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow

; 345  : 					KillTimer(TimerOne);

  0015b	6a 01		 push	 1
  0015d	8b ce		 mov	 ecx, esi
  0015f	e8 00 00 00 00	 call	 ?KillTimer@CWnd@@QAEHI@Z ; CWnd::KillTimer

; 346  : 					if(gameModel!=2)

  00164	83 be a0 01 00
	00 02		 cmp	 DWORD PTR [esi+416], 2

; 347  : 						MessageBox(_T("You are the winner!!!"), _T("Successful"), MB_OK);   //弹窗提醒玩家胜利！

  0016b	8b ce		 mov	 ecx, esi
  0016d	74 0e		 je	 SHORT $LN10@OnLButtonU
  0016f	6a 00		 push	 0
  00171	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@IONENMJH@?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AA?$AA@
  00176	68 00 00 00 00	 push	 OFFSET ??_C@_1CM@ELCFKCIF@?$AAY?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAt?$AAh?$AAe?$AA?5?$AAw?$AAi?$AAn?$AAn?$AAe?$AAr?$AA?$CB?$AA?$CB?$AA?$CB?$AA?$AA@

; 348  : 					else           

  0017b	eb 19		 jmp	 SHORT $LN15@OnLButtonU
$LN10@OnLButtonU:

; 349  : 					{
; 350  : 						level++;      //关卡加1

  0017d	ff 86 a4 01 00
	00		 inc	 DWORD PTR [esi+420]

; 351  : 						LevelModelSupt();      //完成下一关卡的准备工作

  00183	e8 00 00 00 00	 call	 ?LevelModelSupt@CGameDlg@@AAEXXZ ; CGameDlg::LevelModelSupt

; 352  : 						//关卡模式下，弹窗提醒玩家继续！
; 353  : 						MessageBox(_T("You win in this level!\n Please go on!"), _T("Go on！"), MB_OK);

  00188	6a 00		 push	 0
  0018a	68 00 00 00 00	 push	 OFFSET ??_C@_1O@CCLKKEBF@?$AAG?$AAo?$AA?5?$AAo?$AAn?$PP?$AB?$AA?$AA@
  0018f	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@DEAGLPKJ@?$AAY?$AAo?$AAu?$AA?5?$AAw?$AAi?$AAn?$AA?5?$AAi?$AAn?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?5?$AAl?$AAe?$AAv?$AAe?$AAl?$AA?$CB?$AA?6?$AA?5?$AAP?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAg@
  00194	8b ce		 mov	 ecx, esi
$LN15@OnLButtonU:
  00196	e8 00 00 00 00	 call	 ?MessageBoxW@CWnd@@QAEHPB_W0I@Z ; CWnd::MessageBoxW
$LN11@OnLButtonU:

; 354  : 					}
; 355  : 				}
; 356  : 			}
; 357  : 			UpdateMap();      // 更新地图

  0019b	8b ce		 mov	 ecx, esi
  0019d	e8 00 00 00 00	 call	 ?UpdateMap@CGameDlg@@AAEXXZ ; CGameDlg::UpdateMap

; 358  : 			m_bFirstPoint = !m_bFirstPoint;   //重置

  001a2	80 be 94 01 00
	00 00		 cmp	 BYTE PTR [esi+404], 0
  001a9	5f		 pop	 edi
  001aa	0f 94 c0	 sete	 al
  001ad	5b		 pop	 ebx
  001ae	88 86 94 01 00
	00		 mov	 BYTE PTR [esi+404], al
  001b4	5e		 pop	 esi

; 359  : 		}
; 360  : 	}
; 361  : }

  001b5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b8	33 cd		 xor	 ecx, ebp
  001ba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001bf	8b e5		 mov	 esp, ebp
  001c1	5d		 pop	 ebp
  001c2	c2 0c 00	 ret	 12			; 0000000cH
$LN4@OnLButtonU:

; 312  : 	{  
; 313  : 		return CDialogEx::OnLButtonUp(nFlags, point); 

  001c5	52		 push	 edx
  001c6	57		 push	 edi
  001c7	ff 75 08	 push	 DWORD PTR _nFlags$[ebp]
  001ca	8b ce		 mov	 ecx, esi
  001cc	e8 00 00 00 00	 call	 ?OnLButtonUp@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnLButtonUp
$LN13@OnLButtonU:
  001d1	5f		 pop	 edi
  001d2	5b		 pop	 ebx
$LN7@OnLButtonU:

; 359  : 		}
; 360  : 	}
; 361  : }

  001d3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d6	33 cd		 xor	 ecx, ebp
  001d8	5e		 pop	 esi
  001d9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001de	8b e5		 mov	 esp, ebp
  001e0	5d		 pop	 ebp
  001e1	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonUp@CGameDlg@@QAEXIVCPoint@@@Z ENDP		; CGameDlg::OnLButtonUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnClose@CGameDlg@@QAEXXZ
_TEXT	SEGMENT
?OnClose@CGameDlg@@QAEXXZ PROC				; CGameDlg::OnClose, COMDAT
; _this$ = ecx

; 183  : {

  00000	56		 push	 esi

; 184  : 	if (MessageBox(_T("确实要退出吗？"), _T("提示"), MB_OKCANCEL | MB_ICONWARNING) == IDOK)

  00001	6a 31		 push	 49			; 00000031H
  00003	68 00 00 00 00	 push	 OFFSET ??_C@_15EGCHAEPE@c?Py?3?$AA?$AA@
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@LALLHPFH@xn?$FL?$JO?$IJ?$IB?$JA?$AAQ?zT?$BH?$PP?$BP?$AA?$AA@
  0000d	8b f1		 mov	 esi, ecx
  0000f	e8 00 00 00 00	 call	 ?MessageBoxW@CWnd@@QAEHPB_W0I@Z ; CWnd::MessageBoxW
  00014	83 f8 01	 cmp	 eax, 1
  00017	75 21		 jne	 SHORT $LN2@OnClose

; 185  : 	{
; 186  : 		PlaySound(NULL, NULL, SND_FILENAME);    //停止播放背景音乐

  00019	68 00 00 02 00	 push	 131072			; 00020000H
  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PlaySoundW@12

; 187  : 		m_GameC.s_nPicNum = 20;     //退出游戏界面时完成地图默认数据恢复
; 188  : 		CDialog::OnClose();

  00028	8b ce		 mov	 ecx, esi
  0002a	c7 05 00 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?s_nPicNum@CGameControl@@2HA, 20 ; CGameControl::s_nPicNum, 00000014H
  00034	5e		 pop	 esi
  00035	e9 00 00 00 00	 jmp	 ?OnClose@CWnd@@IAEXXZ	; CWnd::OnClose
$LN2@OnClose:
  0003a	5e		 pop	 esi

; 189  : 	}
; 190  : }

  0003b	c3		 ret	 0
?OnClose@CGameDlg@@QAEXXZ ENDP				; CGameDlg::OnClose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnBnClickedBtnStart@CGameDlg@@QAEXXZ
_TEXT	SEGMENT
?OnBnClickedBtnStart@CGameDlg@@QAEXXZ PROC		; CGameDlg::OnBnClickedBtnStart, COMDAT
; _this$ = ecx

; 398  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 399  : 	m_GameC.StartGame();

  00003	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
  00009	e8 00 00 00 00	 call	 ?StartGame@CGameControl@@QAEXXZ ; CGameControl::StartGame

; 400  : 	/*初始化游戏图片元素，不能放在这里！重复点击“开始游戏”按钮会重复
; 401  : 	 *加载CDC位图内存，触发中断。并不知道原因。 */
; 402  : 	UpdateMap();     //更新地图，加载游戏图片

  0000e	8b ce		 mov	 ecx, esi
  00010	e8 00 00 00 00	 call	 ?UpdateMap@CGameDlg@@AAEXXZ ; CGameDlg::UpdateMap

; 403  : 	pProgCtrl->SetPos(extraTime);    //设置进度条初始位置

  00015	ff b6 9c 01 00
	00		 push	 DWORD PTR [esi+412]
  0001b	8b 8e 88 01 00
	00		 mov	 ecx, DWORD PTR [esi+392]
  00021	e8 00 00 00 00	 call	 ?SetPos@CProgressCtrl@@QAEHH@Z ; CProgressCtrl::SetPos

; 404  : 	m_bPlaying = true;                 //游戏进行状态
; 405  : 	if (gameModel != 1)             //只要不是休闲模式就设定定时器

  00026	83 be a0 01 00
	00 01		 cmp	 DWORD PTR [esi+416], 1
  0002d	c6 86 95 01 00
	00 01		 mov	 BYTE PTR [esi+405], 1
  00034	74 10		 je	 SHORT $LN2@OnBnClicke

; 406  : 		SetTimer(TimerOne, 1000, NULL);     //定时器，每1s触发一次OnTimer()

  00036	6a 00		 push	 0
  00038	68 e8 03 00 00	 push	 1000			; 000003e8H
  0003d	6a 01		 push	 1
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z ; CWnd::SetTimer
$LN2@OnBnClicke:

; 407  : 	nRerank = 3;                    //重排次数置为3次
; 408  : 	sndPlaySound(_T("res\\music\\gamemusic.wav"), SND_FILENAME | SND_ASYNC | SND_LOOP);  //异步播放背景音乐

  00046	68 09 00 02 00	 push	 131081			; 00020009H
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_1DA@OIOCLOL@?$AAr?$AAe?$AAs?$AA?2?$AAm?$AAu?$AAs?$AAi?$AAc?$AA?2?$AAg?$AAa?$AAm?$AAe?$AAm?$AAu?$AAs?$AAi?$AAc?$AA?4?$AAw?$AAa?$AAv?$AA?$AA@
  00050	c7 86 98 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+408], 3
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sndPlaySoundW@8

; 409  : 	 //设置“开始游戏”按钮禁用
; 410  : 	CButton *pBtn = (CButton*)GetDlgItem(IDC_BTN_START);   //按钮指针指向IDC_BTN_START这个按钮 

  00060	68 f3 03 00 00	 push	 1011			; 000003f3H
  00065	8b ce		 mov	 ecx, esi
  00067	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem
  0006c	5e		 pop	 esi

; 411  : 	if (pBtn != NULL)

  0006d	85 c0		 test	 eax, eax
  0006f	74 09		 je	 SHORT $LN3@OnBnClicke

; 412  : 	{
; 413  : 		pBtn->EnableWindow(FALSE);  // True or False 

  00071	6a 00		 push	 0
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ?EnableWindow@CWnd@@QAEHH@Z ; CWnd::EnableWindow
$LN3@OnBnClicke:

; 414  : 	}
; 415  : }

  0007a	c3		 ret	 0
?OnBnClickedBtnStart@CGameDlg@@QAEXXZ ENDP		; CGameDlg::OnBnClickedBtnStart
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?LevelModelSupt@CGameDlg@@AAEXXZ
_TEXT	SEGMENT
_levelStr$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?LevelModelSupt@CGameDlg@@AAEXXZ PROC			; CGameDlg::LevelModelSupt, COMDAT
; _this$ = ecx

; 498  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LevelModelSupt@CGameDlg@@AAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b f1		 mov	 esi, ecx

; 499  : 	// 关卡文本显示控制
; 500  : 	pStaticLevel->ShowWindow(SW_SHOW);    //显示关卡静态文本

  0002b	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  00031	6a 05		 push	 5
  00033	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 501  : 	CString levelStr;            //关卡字符串对象

  00038	8d 4d ec	 lea	 ecx, DWORD PTR _levelStr$[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ

; 502  : 	levelStr.Format(_T("关卡:%d"), level);   //格式化修改静态文本

  00041	ff b6 a4 01 00
	00		 push	 DWORD PTR [esi+420]
  00047	8d 45 ec	 lea	 eax, DWORD PTR _levelStr$[ebp]
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1M@OMBMMBOJ@QsSa?$AA?3?$AA?$CF?$AAd?$AA?$AA@
  00056	50		 push	 eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAAXPB_WZZ
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 503  : 	pStaticLevel->SetWindowTextW(levelStr);       //设置静态文本内容

  00060	8d 4d ec	 lea	 ecx, DWORD PTR _levelStr$[ebp]
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
  00069	8b 8e 90 01 00
	00		 mov	 ecx, DWORD PTR [esi+400]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?SetWindowTextW@CWnd@@QAEXPB_W@Z ; CWnd::SetWindowTextW

; 504  : 
; 505  : 	// 根据关卡设定进度条显示控制
; 506  : 	//根据关卡设置进度条时间
; 507  : 	if (ProgCtrlMAX - level * 5 > 24)

  00075	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0007a	2b 86 a4 01 00
	00		 sub	 eax, DWORD PTR [esi+420]
  00080	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00083	83 f8 18	 cmp	 eax, 24			; 00000018H
  00086	7e 08		 jle	 SHORT $LN2@LevelModel

; 508  : 		extraTime = ProgCtrlMAX - level * 5;

  00088	89 86 9c 01 00
	00		 mov	 DWORD PTR [esi+412], eax

; 509  : 	else

  0008e	eb 0a		 jmp	 SHORT $LN3@LevelModel
$LN2@LevelModel:

; 510  : 		extraTime = 24;

  00090	c7 86 9c 01 00
	00 18 00 00 00	 mov	 DWORD PTR [esi+412], 24	; 00000018H
$LN3@LevelModel:

; 511  : 	pProgCtrl->SetRange(0, extraTime);    //设置进度条范围

  0009a	0f b7 86 9c 01
	00 00		 movzx	 eax, WORD PTR [esi+412]
  000a1	8b 8e 88 01 00
	00		 mov	 ecx, DWORD PTR [esi+392]
  000a7	50		 push	 eax
  000a8	6a 00		 push	 0
  000aa	e8 00 00 00 00	 call	 ?SetRange@CProgressCtrl@@QAEXFF@Z ; CProgressCtrl::SetRange

; 512  : 	
; 513  : 	// 根据关卡设定游戏地图图片数量
; 514  : 	/*
; 515  : 	if (level == 1)
; 516  : 	{
; 517  : 		m_GameC.s_nRows = 5;
; 518  : 		m_GameC.s_nCols = 6;
; 519  : 		m_GameC.s_nPicNum = 3;
; 520  : 	}
; 521  : 	else if (level <= 9)
; 522  : 	{
; 523  : 		if (level % 2 == 1 || level % 4 == 0)
; 524  : 			m_GameC.s_nRows = 6 + level / 2;
; 525  : 		else
; 526  : 			m_GameC.s_nRows = 7 + level / 2;
; 527  : 		m_GameC.s_nCols = 6 + level;
; 528  : 		m_GameC.s_nPicNum = level + 6;
; 529  : 	}
; 530  : 	else if(level == 15)
; 531  : 	{
; 532  : 		m_GameC.s_nRows = 10;
; 533  : 		m_GameC.s_nCols = 16;
; 534  : 		m_GameC.s_nPicNum = 20;
; 535  : 	}
; 536  : 		//其余默认即可...
; 537  : 	*/
; 538  : 	if (level == 1 || level == 2)

  000af	8b 86 a4 01 00
	00		 mov	 eax, DWORD PTR [esi+420]
  000b5	83 f8 01	 cmp	 eax, 1
  000b8	74 69		 je	 SHORT $LN6@LevelModel
  000ba	83 f8 02	 cmp	 eax, 2
  000bd	74 64		 je	 SHORT $LN6@LevelModel

; 540  : 	else if (level >= 3 || level <= 5)

  000bf	83 f8 03	 cmp	 eax, 3
  000c2	7d 53		 jge	 SHORT $LN9@LevelModel
  000c4	83 f8 05	 cmp	 eax, 5
  000c7	7e 4e		 jle	 SHORT $LN9@LevelModel

; 542  : 	else if (level >= 6 || level <= 9)

  000c9	83 f8 06	 cmp	 eax, 6
  000cc	7d 3d		 jge	 SHORT $LN12@LevelModel
  000ce	83 f8 09	 cmp	 eax, 9
  000d1	7e 38		 jle	 SHORT $LN12@LevelModel

; 544  : 	else if (level >= 10 || level <= 12)

  000d3	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  000d6	7d 27		 jge	 SHORT $LN15@LevelModel
  000d8	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  000db	7e 22		 jle	 SHORT $LN15@LevelModel

; 546  : 	else if (level >= 13 || level <= 15)

  000dd	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  000e0	7d 11		 jge	 SHORT $LN18@LevelModel
  000e2	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  000e5	7e 0c		 jle	 SHORT $LN18@LevelModel

; 549  : 		m_GameC.s_nPicNum = 20;

  000e7	c7 05 00 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?s_nPicNum@CGameControl@@2HA, 20 ; CGameControl::s_nPicNum, 00000014H
  000f1	eb 3a		 jmp	 SHORT $LN17@LevelModel
$LN18@LevelModel:

; 547  : 		m_GameC.s_nPicNum = 16;

  000f3	c7 05 00 00 00
	00 10 00 00 00	 mov	 DWORD PTR ?s_nPicNum@CGameControl@@2HA, 16 ; CGameControl::s_nPicNum, 00000010H

; 548  : 	else

  000fd	eb 2e		 jmp	 SHORT $LN17@LevelModel
$LN15@LevelModel:

; 545  : 		m_GameC.s_nPicNum = 10;

  000ff	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?s_nPicNum@CGameControl@@2HA, 10 ; CGameControl::s_nPicNum, 0000000aH
  00109	eb 22		 jmp	 SHORT $LN17@LevelModel
$LN12@LevelModel:

; 543  : 		m_GameC.s_nPicNum = 8;

  0010b	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?s_nPicNum@CGameControl@@2HA, 8 ; CGameControl::s_nPicNum
  00115	eb 16		 jmp	 SHORT $LN17@LevelModel
$LN9@LevelModel:

; 541  : 		m_GameC.s_nPicNum = 4;

  00117	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?s_nPicNum@CGameControl@@2HA, 4 ; CGameControl::s_nPicNum
  00121	eb 0a		 jmp	 SHORT $LN17@LevelModel
$LN6@LevelModel:

; 539  : 		m_GameC.s_nPicNum = 2;

  00123	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?s_nPicNum@CGameControl@@2HA, 2 ; CGameControl::s_nPicNum
$LN17@LevelModel:

; 550  : }

  0012d	8d 4d ec	 lea	 ecx, DWORD PTR _levelStr$[ebp]
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
  00136	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00139	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00140	59		 pop	 ecx
  00141	5e		 pop	 esi
  00142	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00145	33 cd		 xor	 ecx, ebp
  00147	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014c	8b e5		 mov	 esp, ebp
  0014e	5d		 pop	 ebp
  0014f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LevelModelSupt@CGameDlg@@AAEXXZ$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _levelStr$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?LevelModelSupt@CGameDlg@@AAEXXZ:
  00009	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00010	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00013	33 c8		 xor	 ecx, eax
  00015	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LevelModelSupt@CGameDlg@@AAEXXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LevelModelSupt@CGameDlg@@AAEXXZ ENDP			; CGameDlg::LevelModelSupt
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?UpdateMap@CGameDlg@@AAEXXZ
_TEXT	SEGMENT
tv307 = -76						; size = 4
tv305 = -72						; size = 4
_nLeft$1$ = -68						; size = 4
_i$1$ = -64						; size = 4
_nElemW$1$ = -60					; size = 4
tv306 = -56						; size = 4
_nCols$1$ = -56						; size = 4
_nElemH$1$ = -52					; size = 4
tv303 = -48						; size = 4
_this$GSCopy$1$ = -44					; size = 4
tv302 = -40						; size = 4
_nTop$1$ = -40						; size = 4
_dcGame$ = -36						; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?UpdateMap@CGameDlg@@AAEXXZ PROC			; CGameDlg::UpdateMap, COMDAT
; _this$ = ecx

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UpdateMap@CGameDlg@@AAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	89 7d d4	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi

; 275  : 	UpdateGameRect();   //重绘矩形游戏区域背景

  0002f	e8 00 00 00 00	 call	 ?UpdateGameRect@CGameDlg@@AAEXXZ ; CGameDlg::UpdateGameRect

; 276  : 
; 277  : 	// 获取地图行数、列数和图片数  
; 278  : 	int nRows = CGameControl::s_nRows;
; 279  : 	int nCols = CGameControl::s_nCols;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_nCols@CGameControl@@2HA ; CGameControl::s_nCols

; 280  : 	int nPicNum = CGameControl::s_nPicNum;
; 281  : 
; 282  : 	// 计算图片的顶点坐标与图片大小
; 283  : 	int nLeft = m_ptGameTop.x, nTop = m_ptGameTop.y;	 //游戏区起始顶点坐标
; 284  : 	int nElemW = m_sizeElem.cx, nElemH = m_sizeElem.cy;   //图片高度和宽度像素

  00039	8b 4d d4	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0003c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?s_nRows@CGameControl@@2HA ; CGameControl::s_nRows
  00042	89 45 c8	 mov	 DWORD PTR _nCols$1$[ebp], eax
  00045	8b 87 14 01 00
	00		 mov	 eax, DWORD PTR [edi+276]
  0004b	89 45 bc	 mov	 DWORD PTR _nLeft$1$[ebp], eax
  0004e	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  00054	8b bf 1c 01 00
	00		 mov	 edi, DWORD PTR [edi+284]
  0005a	89 45 d8	 mov	 DWORD PTR _nTop$1$[ebp], eax
  0005d	8b 81 20 01 00
	00		 mov	 eax, DWORD PTR [ecx+288]
  00063	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0

; 285  : 	
; 286  : 	CClientDC dcGame(this);

  00067	51		 push	 ecx
  00068	8d 4d dc	 lea	 ecx, DWORD PTR _dcGame$[ebp]
  0006b	89 7d c4	 mov	 DWORD PTR _nElemW$1$[ebp], edi
  0006e	89 45 cc	 mov	 DWORD PTR _nElemH$1$[ebp], eax
  00071	c5 fa 7f 45 dc	 vmovdqu XMMWORD PTR _dcGame$[ebp], xmm0
  00076	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _dcGame$[ebp+16], 0
  0007d	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 287  : 	for (int i = 1; i < nRows + 1; i++) {

  00082	b9 01 00 00 00	 mov	 ecx, 1
  00087	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0008e	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00091	89 4d c0	 mov	 DWORD PTR _i$1$[ebp], ecx
  00094	89 45 b4	 mov	 DWORD PTR tv307[ebp], eax
  00097	3b c1		 cmp	 eax, ecx
  00099	0f 8e c3 00 00
	00		 jle	 $LN3@UpdateMap
  0009f	8b 45 c8	 mov	 eax, DWORD PTR _nCols$1$[ebp]
  000a2	8b 55 d8	 mov	 edx, DWORD PTR _nTop$1$[ebp]
  000a5	40		 inc	 eax
  000a6	89 45 c8	 mov	 DWORD PTR tv306[ebp], eax
  000a9	8b 45 cc	 mov	 eax, DWORD PTR _nElemH$1$[ebp]
  000ac	03 d0		 add	 edx, eax
  000ae	89 55 d8	 mov	 DWORD PTR tv302[ebp], edx
$LL4@UpdateMap:

; 288  : 		for (int j = 1; j < nCols + 1; j++) {   

  000b1	be 01 00 00 00	 mov	 esi, 1
  000b6	39 75 c8	 cmp	 DWORD PTR tv306[ebp], esi
  000b9	0f 8e 91 00 00
	00		 jle	 $LN2@UpdateMap
  000bf	8b 55 d4	 mov	 edx, DWORD PTR _this$GSCopy$1$[ebp]
  000c2	8b 45 bc	 mov	 eax, DWORD PTR _nLeft$1$[ebp]
  000c5	81 c2 34 01 00
	00		 add	 edx, 308		; 00000134H
  000cb	03 c7		 add	 eax, edi
  000cd	89 55 b8	 mov	 DWORD PTR tv305[ebp], edx
  000d0	89 45 d0	 mov	 DWORD PTR tv303[ebp], eax
$LL7@UpdateMap:

; 289  : 			// 得到图片编号的值   
; 290  : 			int nElemVal = m_GameC.GetElement(i, j); 

  000d3	56		 push	 esi
  000d4	51		 push	 ecx
  000d5	8b ca		 mov	 ecx, edx
  000d7	e8 00 00 00 00	 call	 ?GetElement@CGameControl@@QAEHHH@Z ; CGameControl::GetElement
  000dc	8b f8		 mov	 edi, eax

; 291  : 			if (nElemVal != BLANK)    //如果已被置为BLANK(-1)，则跳过

  000de	83 ff ff	 cmp	 edi, -1
  000e1	74 55		 je	 SHORT $LN5@UpdateMap

; 292  : 			{
; 293  : 				// 将背景与掩码相或，边保留，图像区域为 1            
; 294  : 				//dcGame.BitBlt(nLeft + j * nElemW, nTop + i * nElemH, nElemW, nElemH, &m_dcMask, 0, nElemVal * nElemH, SRCPAINT); 
; 295  : 				dcGame.StretchBlt(nLeft + j * nElemW, nTop + i * nElemH, nElemW, nElemH, &m_dcMask, 0, nElemVal * nElemH, nElemW, nElemH, SRCPAINT);

  000e3	8b 55 cc	 mov	 edx, DWORD PTR _nElemH$1$[ebp]
  000e6	8b 4d c4	 mov	 ecx, DWORD PTR _nElemW$1$[ebp]
  000e9	8b 45 d4	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  000ec	68 86 00 ee 00	 push	 15597702		; 00ee0086H
  000f1	52		 push	 edx
  000f2	51		 push	 ecx
  000f3	0f af fa	 imul	 edi, edx
  000f6	05 04 01 00 00	 add	 eax, 260		; 00000104H
  000fb	57		 push	 edi
  000fc	6a 00		 push	 0
  000fe	50		 push	 eax
  000ff	52		 push	 edx
  00100	51		 push	 ecx
  00101	ff 75 d8	 push	 DWORD PTR tv302[ebp]
  00104	8d 4d dc	 lea	 ecx, DWORD PTR _dcGame$[ebp]
  00107	ff 75 d0	 push	 DWORD PTR tv303[ebp]
  0010a	e8 00 00 00 00	 call	 ?StretchBlt@CDC@@QAEHHHHHPAV1@HHHHK@Z ; CDC::StretchBlt

; 296  : 
; 297  : 				// 与元素图片相与，边保留，图像区域为元素图片           
; 298  : 				//dcGame.BitBlt(nLeft + j * nElemW, nTop + i * nElemH , nElemW, nElemH, &m_dcElement, 0, nElemVal * nElemH, SRCAND);
; 299  : 				dcGame.StretchBlt(nLeft + j * nElemW, nTop + i * nElemH, nElemW, nElemH, &m_dcElement, 0, nElemVal * nElemH, nElemW, nElemH, SRCAND);

  0010f	8b 55 cc	 mov	 edx, DWORD PTR _nElemH$1$[ebp]
  00112	8b 4d c4	 mov	 ecx, DWORD PTR _nElemW$1$[ebp]
  00115	8b 45 d4	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00118	68 c6 00 88 00	 push	 8913094			; 008800c6H
  0011d	52		 push	 edx
  0011e	51		 push	 ecx
  0011f	57		 push	 edi
  00120	6a 00		 push	 0
  00122	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  00127	50		 push	 eax
  00128	52		 push	 edx
  00129	51		 push	 ecx
  0012a	ff 75 d8	 push	 DWORD PTR tv302[ebp]
  0012d	8d 4d dc	 lea	 ecx, DWORD PTR _dcGame$[ebp]
  00130	ff 75 d0	 push	 DWORD PTR tv303[ebp]
  00133	e8 00 00 00 00	 call	 ?StretchBlt@CDC@@QAEHHHHHPAV1@HHHHK@Z ; CDC::StretchBlt
$LN5@UpdateMap:

; 288  : 		for (int j = 1; j < nCols + 1; j++) {   

  00138	8b 7d c4	 mov	 edi, DWORD PTR _nElemW$1$[ebp]
  0013b	46		 inc	 esi
  0013c	01 7d d0	 add	 DWORD PTR tv303[ebp], edi
  0013f	8b 4d c0	 mov	 ecx, DWORD PTR _i$1$[ebp]
  00142	8b 55 b8	 mov	 edx, DWORD PTR tv305[ebp]
  00145	3b 75 c8	 cmp	 esi, DWORD PTR tv306[ebp]
  00148	7c 89		 jl	 SHORT $LL7@UpdateMap
  0014a	8b 45 cc	 mov	 eax, DWORD PTR _nElemH$1$[ebp]
  0014d	8b 55 d8	 mov	 edx, DWORD PTR tv302[ebp]
$LN2@UpdateMap:

; 287  : 	for (int i = 1; i < nRows + 1; i++) {

  00150	41		 inc	 ecx
  00151	03 d0		 add	 edx, eax
  00153	89 4d c0	 mov	 DWORD PTR _i$1$[ebp], ecx
  00156	89 55 d8	 mov	 DWORD PTR tv302[ebp], edx
  00159	3b 4d b4	 cmp	 ecx, DWORD PTR tv307[ebp]
  0015c	0f 8c 4f ff ff
	ff		 jl	 $LL4@UpdateMap
$LN3@UpdateMap:

; 300  : 			}
; 301  : 		}
; 302  : 	} 
; 303  : }

  00162	8d 4d dc	 lea	 ecx, DWORD PTR _dcGame$[ebp]
  00165	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  0016a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0016d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00174	59		 pop	 ecx
  00175	5f		 pop	 edi
  00176	5e		 pop	 esi
  00177	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017a	33 cd		 xor	 ecx, ebp
  0017c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00181	8b e5		 mov	 esp, ebp
  00183	5d		 pop	 ebp
  00184	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UpdateMap@CGameDlg@@AAEXXZ$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _dcGame$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
__ehhandler$?UpdateMap@CGameDlg@@AAEXXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UpdateMap@CGameDlg@@AAEXXZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UpdateMap@CGameDlg@@AAEXXZ ENDP			; CGameDlg::UpdateMap
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?UpdateWindow@CGameDlg@@AAEXXZ
_TEXT	SEGMENT
_rtClient$ = -36					; size = 16
_rtWin$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?UpdateWindow@CGameDlg@@AAEXXZ PROC			; CGameDlg::UpdateWindow, COMDAT
; _this$ = ecx

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0

; 255  : 	// 调整窗口大小     
; 256  : 	CRect rtWin;    
; 257  : 	CRect rtClient;     
; 258  : 	this->GetWindowRect(rtWin);       // 获得窗口大小 

  00015	8d 45 ec	 lea	 eax, DWORD PTR _rtWin$[ebp]
  00018	8b f1		 mov	 esi, ecx
  0001a	50		 push	 eax
  0001b	c5 fa 7f 45 ec	 vmovdqu XMMWORD PTR _rtWin$[ebp], xmm0
  00020	c5 fa 7f 45 dc	 vmovdqu XMMWORD PTR _rtClient$[ebp], xmm0
  00025	e8 00 00 00 00	 call	 ?GetWindowRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetWindowRect

; 259  : 	this->GetClientRect(rtClient);    // 获得客户区大小 

  0002a	8d 45 dc	 lea	 eax, DWORD PTR _rtClient$[ebp]
  0002d	8b ce		 mov	 ecx, esi
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 260  : 
; 261  : 	// 标题栏和外边框的大小     
; 262  : 	int nSpanWidth = rtWin.Width() - rtClient.Width();     
; 263  : 	int nSpanHeight = rtWin.Height() - rtClient.Height(); 
; 264  : 
; 265  : 	// 设置窗口大小     
; 266  : 	MoveWindow(0, 0, 800 + nSpanWidth, 600 + nSpanHeight); 

  00035	8b 4d e0	 mov	 ecx, DWORD PTR _rtClient$[ebp+4]
  00038	2b 4d e8	 sub	 ecx, DWORD PTR _rtClient$[ebp+12]
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _rtWin$[ebp+12]
  0003e	2b 4d f0	 sub	 ecx, DWORD PTR _rtWin$[ebp+4]
  00041	05 58 02 00 00	 add	 eax, 600		; 00000258H
  00046	8b 55 f4	 mov	 edx, DWORD PTR _rtWin$[ebp+8]
  00049	03 c1		 add	 eax, ecx
  0004b	2b 55 e4	 sub	 edx, DWORD PTR _rtClient$[ebp+8]
  0004e	8b ce		 mov	 ecx, esi
  00050	2b 55 ec	 sub	 edx, DWORD PTR _rtWin$[ebp]
  00053	6a 01		 push	 1
  00055	50		 push	 eax
  00056	8b 45 dc	 mov	 eax, DWORD PTR _rtClient$[ebp]
  00059	05 20 03 00 00	 add	 eax, 800		; 00000320H
  0005e	03 c2		 add	 eax, edx
  00060	50		 push	 eax
  00061	6a 00		 push	 0
  00063	6a 00		 push	 0
  00065	e8 00 00 00 00	 call	 ?MoveWindow@CWnd@@QAEXHHHHH@Z ; CWnd::MoveWindow

; 267  : 
; 268  : 	// 设置对话框显示在 windows 窗口正中央。
; 269  : 	CenterWindow();

  0006a	6a 00		 push	 0
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?CenterWindow@CWnd@@QAEXPAV1@@Z ; CWnd::CenterWindow

; 270  : }

  00073	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00076	33 cd		 xor	 ecx, ebp
  00078	5e		 pop	 esi
  00079	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
?UpdateWindow@CGameDlg@@AAEXXZ ENDP			; CGameDlg::UpdateWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?UpdateGameRect@CGameDlg@@AAEXXZ
_TEXT	SEGMENT
_dc$ = -36						; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?UpdateGameRect@CGameDlg@@AAEXXZ PROC			; CGameDlg::UpdateGameRect, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UpdateGameRect@CGameDlg@@AAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0

; 246  : 	// 获得当前对话框的视频内存    
; 247  : 	CClientDC dc(this);

  00030	57		 push	 edi
  00031	8d 4d dc	 lea	 ecx, DWORD PTR _dc$[ebp]
  00034	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _dc$[ebp+16], 0
  0003b	c5 fa 7f 45 dc	 vmovdqu XMMWORD PTR _dc$[ebp], xmm0
  00040	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 248  : 	//重绘矩形游戏区域背景
; 249  : 	dc.StretchBlt(m_ptGameTop.x, m_ptGameTop.y, m_rtGameRect.right- m_rtGameRect.left, m_rtGameRect.bottom- m_rtGameRect.top, &m_dcBG, m_rtGameRect.left, m_rtGameRect.top, m_rtGameRect.right - m_rtGameRect.left, m_rtGameRect.bottom - m_rtGameRect.top, SRCCOPY);  

  00045	8b 8f 28 01 00
	00		 mov	 ecx, DWORD PTR [edi+296]
  0004b	8b b7 30 01 00
	00		 mov	 esi, DWORD PTR [edi+304]
  00051	8b 87 24 01 00
	00		 mov	 eax, DWORD PTR [edi+292]
  00057	2b f1		 sub	 esi, ecx
  00059	8b 97 2c 01 00
	00		 mov	 edx, DWORD PTR [edi+300]
  0005f	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  00064	56		 push	 esi
  00065	2b d0		 sub	 edx, eax
  00067	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006e	52		 push	 edx
  0006f	51		 push	 ecx
  00070	50		 push	 eax
  00071	8d 87 e4 00 00
	00		 lea	 eax, DWORD PTR [edi+228]
  00077	50		 push	 eax
  00078	56		 push	 esi
  00079	52		 push	 edx
  0007a	ff b7 18 01 00
	00		 push	 DWORD PTR [edi+280]
  00080	8d 4d dc	 lea	 ecx, DWORD PTR _dc$[ebp]
  00083	ff b7 14 01 00
	00		 push	 DWORD PTR [edi+276]
  00089	e8 00 00 00 00	 call	 ?StretchBlt@CDC@@QAEHHHHHPAV1@HHHHK@Z ; CDC::StretchBlt

; 250  : }

  0008e	8d 4d dc	 lea	 ecx, DWORD PTR _dc$[ebp]
  00091	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  00096	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00099	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a0	59		 pop	 ecx
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a6	33 cd		 xor	 ecx, ebp
  000a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UpdateGameRect@CGameDlg@@AAEXXZ$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
__ehhandler$?UpdateGameRect@CGameDlg@@AAEXXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UpdateGameRect@CGameDlg@@AAEXXZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UpdateGameRect@CGameDlg@@AAEXXZ ENDP			; CGameDlg::UpdateGameRect
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?InitBackground@CGameDlg@@AAEXXZ
_TEXT	SEGMENT
_dc$ = -40						; size = 20
_bkgPath$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?InitBackground@CGameDlg@@AAEXXZ PROC			; CGameDlg::InitBackground, COMDAT
; _this$ = ecx

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitBackground@CGameDlg@@AAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx

; 214  : 	UpdateWindow();

  0002c	e8 00 00 00 00	 call	 ?UpdateWindow@CGameDlg@@AAEXXZ ; CGameDlg::UpdateWindow

; 215  : 	/* 静态加载游戏背景
; 216  : 	// 获得当前对话框的视频内存    
; 217  : 	CClientDC dc(this);
; 218  : 	// 创建与视频内存兼容的内存 DC     
; 219  : 	m_dcBG.CreateCompatibleDC(&dc);
; 220  : 	CBitmap bmpGameBG;
; 221  : 	bmpGameBG.LoadBitmap(IDB_GAME_BG1);
; 222  : 	// 将位图资源选入 DC    
; 223  : 	m_dcBG.SelectObject(bmpGameBG);
; 224  : 	*/
; 225  : 
; 226  : 	//根据游戏模式选择加载的背景图片
; 227  : 	CString bkgPath("res\\theme\\gamebkg (2).bmp");

  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NLKKCNHG@res?2theme?2gamebkg?5?$CI2?$CJ?4bmp?$AA@
  00036	8d 4d ec	 lea	 ecx, DWORD PTR _bkgPath$[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PBD@Z

; 228  : 	if (gameModel == 1)

  0003f	8b 87 a0 01 00
	00		 mov	 eax, DWORD PTR [edi+416]
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	75 07		 jne	 SHORT $LN2@InitBackgr

; 229  : 		bkgPath = "res\\theme\\gamebkg (5).bmp";

  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@BOANBDPI@res?2theme?2gamebkg?5?$CI5?$CJ?4bmp?$AA@
  00056	eb 0a		 jmp	 SHORT $LN12@InitBackgr
$LN2@InitBackgr:

; 230  : 	else if (gameModel == 2)

  00058	83 f8 02	 cmp	 eax, 2
  0005b	75 0e		 jne	 SHORT $LN4@InitBackgr

; 231  : 		bkgPath = "res\\theme\\gamebkg (3).bmp";

  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HNNNCGMC@res?2theme?2gamebkg?5?$CI3?$CJ?4bmp?$AA@
$LN12@InitBackgr:
  00062	8d 4d ec	 lea	 ecx, DWORD PTR _bkgPath$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z
$LN4@InitBackgr:

; 232  : 	// 动态方法
; 233  : 	// 获得当前对话框的视频内存    
; 234  : 	CClientDC dc(this);

  0006b	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  0006f	57		 push	 edi
  00070	8d 4d d8	 lea	 ecx, DWORD PTR _dc$[ebp]
  00073	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _dc$[ebp+16], 0
  0007a	c5 fa 7f 45 d8	 vmovdqu XMMWORD PTR _dc$[ebp], xmm0
  0007f	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 235  : 	// 动态方法加载游戏背景图片资源   
; 236  : 	HANDLE hBackG = ::LoadImageW(NULL, bkgPath, IMAGE_BITMAP, 0, 0, LR_LOADFROMFILE);

  00084	6a 10		 push	 16			; 00000010H
  00086	6a 00		 push	 0
  00088	6a 00		 push	 0
  0008a	6a 00		 push	 0
  0008c	8d 4d ec	 lea	 ecx, DWORD PTR _bkgPath$[ebp]
  0008f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
  00099	50		 push	 eax
  0009a	6a 00		 push	 0
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadImageW@24
  000a2	8b f0		 mov	 esi, eax

; 237  : 	// 创建与视频内存兼容的内存 DC     
; 238  : 	m_dcBG.CreateCompatibleDC(&dc);

  000a4	8d 8f e4 00 00
	00		 lea	 ecx, DWORD PTR [edi+228]
  000aa	8d 45 d8	 lea	 eax, DWORD PTR _dc$[ebp]
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?CreateCompatibleDC@CDC@@QAEHPAV1@@Z ; CDC::CreateCompatibleDC

; 239  : 	// 将位图资源选入 DC     
; 240  : 	m_dcBG.SelectObject(hBackG);

  000b3	56		 push	 esi
  000b4	8d 8f e4 00 00
	00		 lea	 ecx, DWORD PTR [edi+228]
  000ba	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject

; 241  : }

  000bf	8d 4d d8	 lea	 ecx, DWORD PTR _dc$[ebp]
  000c2	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  000c7	8d 4d ec	 lea	 ecx, DWORD PTR _bkgPath$[ebp]
  000ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
  000d0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000da	59		 pop	 ecx
  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e0	33 cd		 xor	 ecx, ebp
  000e2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitBackground@CGameDlg@@AAEXXZ$0:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR _bkgPath$[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?InitBackground@CGameDlg@@AAEXXZ$1:
  00009	8d 4d d8	 lea	 ecx, DWORD PTR _dc$[ebp]
  0000c	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
__ehhandler$?InitBackground@CGameDlg@@AAEXXZ:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00025	33 c8		 xor	 ecx, eax
  00027	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitBackground@CGameDlg@@AAEXXZ
  00031	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitBackground@CGameDlg@@AAEXXZ ENDP			; CGameDlg::InitBackground
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?GetInterfaceMap@CGameDlg@@MBEPBUAFX_INTERFACEMAP@@XZ
_TEXT	SEGMENT
?GetInterfaceMap@CGameDlg@@MBEPBUAFX_INTERFACEMAP@@XZ PROC ; CGameDlg::GetInterfaceMap, COMDAT
; _this$ = ecx

; 86   : BEGIN_INTERFACE_MAP(CGameDlg, CDialogEx)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?interfaceMap@CGameDlg@@1UAFX_INTERFACEMAP@@B ; CGameDlg::interfaceMap
  00005	c3		 ret	 0
?GetInterfaceMap@CGameDlg@@MBEPBUAFX_INTERFACEMAP@@XZ ENDP ; CGameDlg::GetInterfaceMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?GetThisInterfaceMap@CGameDlg@@KGPBUAFX_INTERFACEMAP@@XZ
_TEXT	SEGMENT
?GetThisInterfaceMap@CGameDlg@@KGPBUAFX_INTERFACEMAP@@XZ PROC ; CGameDlg::GetThisInterfaceMap, COMDAT

; 86   : BEGIN_INTERFACE_MAP(CGameDlg, CDialogEx)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?interfaceMap@CGameDlg@@1UAFX_INTERFACEMAP@@B ; CGameDlg::interfaceMap
  00005	c3		 ret	 0
?GetThisInterfaceMap@CGameDlg@@KGPBUAFX_INTERFACEMAP@@XZ ENDP ; CGameDlg::GetThisInterfaceMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?GetDispatchMap@CGameDlg@@MBEPBUAFX_DISPMAP@@XZ
_TEXT	SEGMENT
?GetDispatchMap@CGameDlg@@MBEPBUAFX_DISPMAP@@XZ PROC	; CGameDlg::GetDispatchMap, COMDAT
; _this$ = ecx

; 75   : BEGIN_DISPATCH_MAP(CGameDlg, CDialogEx)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?dispatchMap@CGameDlg@@1UAFX_DISPMAP@@B ; CGameDlg::dispatchMap
  00005	c3		 ret	 0
?GetDispatchMap@CGameDlg@@MBEPBUAFX_DISPMAP@@XZ ENDP	; CGameDlg::GetDispatchMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?GetThisDispatchMap@CGameDlg@@KGPBUAFX_DISPMAP@@XZ
_TEXT	SEGMENT
?GetThisDispatchMap@CGameDlg@@KGPBUAFX_DISPMAP@@XZ PROC	; CGameDlg::GetThisDispatchMap, COMDAT

; 75   : BEGIN_DISPATCH_MAP(CGameDlg, CDialogEx)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?dispatchMap@CGameDlg@@1UAFX_DISPMAP@@B ; CGameDlg::dispatchMap
  00005	c3		 ret	 0
?GetThisDispatchMap@CGameDlg@@KGPBUAFX_DISPMAP@@XZ ENDP	; CGameDlg::GetThisDispatchMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?GetMessageMap@CGameDlg@@MBEPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetMessageMap@CGameDlg@@MBEPBUAFX_MSGMAP@@XZ PROC	; CGameDlg::GetMessageMap, COMDAT
; _this$ = ecx

; 63   : BEGIN_MESSAGE_MAP(CGameDlg, CDialogEx)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CGameDlg@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetMessageMap@CGameDlg@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CGameDlg::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?GetThisMessageMap@CGameDlg@@KGPBUAFX_MSGMAP@@XZ
_TEXT	SEGMENT
?GetThisMessageMap@CGameDlg@@KGPBUAFX_MSGMAP@@XZ PROC	; CGameDlg::GetThisMessageMap, COMDAT

; 64   : 	ON_WM_PAINT()
; 65   : 	ON_BN_CLICKED(IDC_BTN_START, &CGameDlg::OnBnClickedBtnStart)
; 66   : 	ON_WM_CLOSE()
; 67   : 	ON_WM_LBUTTONUP()
; 68   : 	ON_WM_TIMER()
; 69   : 	ON_BN_CLICKED(IDC_BTN_Rerank, &CGameDlg::OnBnClickedBtnRerank)
; 70   : 	ON_BN_CLICKED(IDC_BTN_Stop, &CGameDlg::OnBnClickedBtnStop)
; 71   : 	ON_BN_CLICKED(IDC_BTN_Tip, &CGameDlg::OnBnClickedBtnTip)
; 72   : 	ON_BN_CLICKED(IDB_BTN_HELP, &CGameDlg::OnBnClickedBtnHelp)
; 73   : END_MESSAGE_MAP()

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CGameDlg@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00005	c3		 ret	 0
?GetThisMessageMap@CGameDlg@@KGPBUAFX_MSGMAP@@XZ ENDP	; CGameDlg::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z
_TEXT	SEGMENT
$T2 = -64						; size = 8
_pOldPen$1$ = -56					; size = 4
_this$GSCopy$1$ = -52					; size = 4
tv343 = -48						; size = 4
_asvPath$GSCopy$1$ = -48				; size = 4
_dc$ = -44						; size = 20
_penLine$ = -24						; size = 8
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_asvPath$ = 8						; size = 4
_nVexnum$ = 12						; size = 4
?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z PROC	; CGameDlg::DrawTipLine, COMDAT
; _this$ = ecx

; 382  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	89 7d cc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  0002f	8b 45 08	 mov	 eax, DWORD PTR _asvPath$[ebp]

; 383  : 	CClientDC dc(this);   //获得当前视频内存

  00032	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  00035	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  00039	57		 push	 edi
  0003a	89 45 d0	 mov	 DWORD PTR _asvPath$GSCopy$1$[ebp], eax
  0003d	c5 fa 7f 45 d4	 vmovdqu XMMWORD PTR _dc$[ebp], xmm0
  00042	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dc$[ebp+16], 0
  00049	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 384  : 	CPen penLine(PS_SOLID, 2, RGB(0, 255, 0));   //定义画笔属性、颜色（浅绿色）

  0004e	68 00 ff 00 00	 push	 65280			; 0000ff00H
  00053	6a 02		 push	 2
  00055	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  00059	6a 00		 push	 0
  0005b	8d 4d e8	 lea	 ecx, DWORD PTR _penLine$[ebp]
  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00065	c5 f9 d6 45 e8	 vmovq	 QWORD PTR _penLine$[ebp], xmm0
  0006a	e8 00 00 00 00	 call	 ??0CPen@@QAE@HHK@Z	; CPen::CPen

; 385  : 	CPen* pOldPen = dc.SelectObject(&penLine);   //将画笔选入视频内存

  0006f	8d 45 e8	 lea	 eax, DWORD PTR _penLine$[ebp]
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	50		 push	 eax
  00077	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  0007a	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 386  : 
; 387  : 	dc.MoveTo(m_ptGameTop.x + asvPath[0].col * m_sizeElem.cx + m_sizeElem.cx / 2, m_ptGameTop.y + asvPath[0].row * m_sizeElem.cy + m_sizeElem.cy / 2);  //画笔定位

  0007f	8b 4d d0	 mov	 ecx, DWORD PTR _asvPath$GSCopy$1$[ebp]
  00082	8b b7 1c 01 00
	00		 mov	 esi, DWORD PTR [edi+284]
  00088	89 45 c8	 mov	 DWORD PTR _pOldPen$1$[ebp], eax
  0008b	8b 87 20 01 00
	00		 mov	 eax, DWORD PTR [edi+288]
  00091	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00093	0f af c8	 imul	 ecx, eax
  00096	99		 cdq
  00097	2b c2		 sub	 eax, edx
  00099	d1 f8		 sar	 eax, 1
  0009b	03 c8		 add	 ecx, eax
  0009d	8b 45 d0	 mov	 eax, DWORD PTR _asvPath$GSCopy$1$[ebp]
  000a0	03 8f 18 01 00
	00		 add	 ecx, DWORD PTR [edi+280]
  000a6	51		 push	 ecx
  000a7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000aa	8b c6		 mov	 eax, esi
  000ac	0f af ce	 imul	 ecx, esi
  000af	99		 cdq
  000b0	2b c2		 sub	 eax, edx
  000b2	d1 f8		 sar	 eax, 1
  000b4	03 c8		 add	 ecx, eax
  000b6	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  000b9	03 8f 14 01 00
	00		 add	 ecx, DWORD PTR [edi+276]
  000bf	51		 push	 ecx
  000c0	50		 push	 eax
  000c1	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  000c4	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@HH@Z ; CDC::MoveTo

; 388  : 
; 389  : 	for (int i = 1; i < nVexnum; i++)    // 从起始点逐个顶点画线连接至终点

  000c9	8b 4d 0c	 mov	 ecx, DWORD PTR _nVexnum$[ebp]
  000cc	83 f9 01	 cmp	 ecx, 1
  000cf	7e 5b		 jle	 SHORT $LN3@DrawTipLin
  000d1	8b 75 d0	 mov	 esi, DWORD PTR _asvPath$GSCopy$1$[ebp]
  000d4	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  000d7	83 c6 0c	 add	 esi, 12			; 0000000cH
  000da	89 45 d0	 mov	 DWORD PTR tv343[ebp], eax
  000dd	0f 1f 00	 npad	 3
$LL4@DrawTipLin:

; 390  : 	{
; 391  : 		dc.LineTo(m_ptGameTop.x + asvPath[i].col * m_sizeElem.cx + m_sizeElem.cx / 2, m_ptGameTop.y + asvPath[i].row * m_sizeElem.cy + m_sizeElem.cy / 2);

  000e0	8b 87 20 01 00
	00		 mov	 eax, DWORD PTR [edi+288]
  000e6	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000e8	8b bf 1c 01 00
	00		 mov	 edi, DWORD PTR [edi+284]
  000ee	0f af c8	 imul	 ecx, eax
  000f1	99		 cdq
  000f2	2b c2		 sub	 eax, edx
  000f4	d1 f8		 sar	 eax, 1
  000f6	03 c8		 add	 ecx, eax
  000f8	8b 45 cc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  000fb	03 88 18 01 00
	00		 add	 ecx, DWORD PTR [eax+280]
  00101	8b c7		 mov	 eax, edi
  00103	51		 push	 ecx
  00104	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00107	0f af cf	 imul	 ecx, edi
  0010a	8b 7d cc	 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  0010d	99		 cdq
  0010e	2b c2		 sub	 eax, edx
  00110	d1 f8		 sar	 eax, 1
  00112	03 c8		 add	 ecx, eax
  00114	03 8f 14 01 00
	00		 add	 ecx, DWORD PTR [edi+276]
  0011a	51		 push	 ecx
  0011b	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  0011e	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHHH@Z	; CDC::LineTo
  00123	83 6d d0 01	 sub	 DWORD PTR tv343[ebp], 1
  00127	8d 76 0c	 lea	 esi, DWORD PTR [esi+12]
  0012a	75 b4		 jne	 SHORT $LL4@DrawTipLin
$LN3@DrawTipLin:

; 392  : 	}
; 393  : 	dc.SelectObject(pOldPen);

  0012c	ff 75 c8	 push	 DWORD PTR _pOldPen$1$[ebp]
  0012f	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  00132	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 394  : }

  00137	8d 4d e8	 lea	 ecx, DWORD PTR _penLine$[ebp]
  0013a	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen
  0013f	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  00142	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  00147	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00151	59		 pop	 ecx
  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00157	33 cd		 xor	 ecx, ebp
  00159	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015e	8b e5		 mov	 esp, ebp
  00160	5d		 pop	 ebp
  00161	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
__unwindfunclet$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z$1:
  00008	8d 4d e8	 lea	 ecx, DWORD PTR _penLine$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__ehhandler$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DrawTipLine@CGameDlg@@IAEXQAUtagVertex@@H@Z ENDP	; CGameDlg::DrawTipLine
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?DrawTipFrame@CGameDlg@@IAEXHH@Z
_TEXT	SEGMENT
$T2 = -76						; size = 16
_initY$1$ = -60						; size = 4
_rightBottom$1$ = -56					; size = 4
_recY$1$ = -52						; size = 4
_recX$1$ = -48						; size = 4
_dc$ = -44						; size = 20
_pen$ = -24						; size = 8
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_nRow$ = 8						; size = 4
_nCol$ = 12						; size = 4
?DrawTipFrame@CGameDlg@@IAEXHH@Z PROC			; CGameDlg::DrawTipFrame, COMDAT
; _this$ = ecx

; 365  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DrawTipFrame@CGameDlg@@IAEXHH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 366  : 	int recX = nCol*m_sizeElem.cx + m_rtGameRect.left;   //矩形左上角X坐标

  0002a	8b 91 1c 01 00
	00		 mov	 edx, DWORD PTR [ecx+284]
  00030	8b fa		 mov	 edi, edx

; 367  : 	int recY = nRow*m_sizeElem.cy + m_rtGameRect.top;    //矩形左上角Y坐标

  00032	8b 81 20 01 00
	00		 mov	 eax, DWORD PTR [ecx+288]
  00038	8b f0		 mov	 esi, eax
  0003a	0f af 7d 0c	 imul	 edi, DWORD PTR _nCol$[ebp]
  0003e	0f af 75 08	 imul	 esi, DWORD PTR _nRow$[ebp]
  00042	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0

; 368  : 	CPoint topLeft(recX, recY);     //绘制矩形的左上角坐标
; 369  : 	CPoint rightBottom(recX + m_sizeElem.cx, recY + m_sizeElem.cy);   //绘制矩形的右下角坐标
; 370  : 	CClientDC dc(this);

  00046	51		 push	 ecx
  00047	c5 fa 7f 45 d4	 vmovdqu XMMWORD PTR _dc$[ebp], xmm0
  0004c	03 b9 24 01 00
	00		 add	 edi, DWORD PTR [ecx+292]
  00052	03 b1 28 01 00
	00		 add	 esi, DWORD PTR [ecx+296]
  00058	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  0005b	03 c6		 add	 eax, esi
  0005d	89 7d d0	 mov	 DWORD PTR _recX$1$[ebp], edi
  00060	89 45 c4	 mov	 DWORD PTR _initY$1$[ebp], eax
  00063	8d 04 3a	 lea	 eax, DWORD PTR [edx+edi]
  00066	89 75 cc	 mov	 DWORD PTR _recY$1$[ebp], esi
  00069	89 45 c8	 mov	 DWORD PTR _rightBottom$1$[ebp], eax
  0006c	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dc$[ebp+16], 0
  00073	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 371  : 	CPen pen(PS_SOLID, 1, RGB(233, 43, 43));    //定义钢笔属性、颜色（红色）

  00078	68 e9 2b 2b 00	 push	 2829289			; 002b2be9H
  0007d	6a 01		 push	 1
  0007f	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  00083	6a 00		 push	 0
  00085	8d 4d e8	 lea	 ecx, DWORD PTR _pen$[ebp]
  00088	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0008f	c5 f9 d6 45 e8	 vmovq	 QWORD PTR _pen$[ebp], xmm0
  00094	e8 00 00 00 00	 call	 ??0CPen@@QAE@HHK@Z	; CPen::CPen

; 372  : 	CPen *pOldPen = dc.SelectObject(&pen);

  00099	8d 45 e8	 lea	 eax, DWORD PTR _pen$[ebp]
  0009c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a0	50		 push	 eax
  000a1	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  000a4	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 373  : 	CBrush *pBrush = CBrush::FromHandle((HBRUSH)GetStockObject(NULL_BRUSH));

  000a9	6a 05		 push	 5
  000ab	8b f8		 mov	 edi, eax
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?FromHandle@CBrush@@SGPAV1@PAUHBRUSH__@@@Z ; CBrush::FromHandle

; 374  : 	CBrush *pOldBrush = dc.SelectObject(pBrush);

  000b9	50		 push	 eax
  000ba	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  000bd	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCBrush@@PAV2@@Z ; CDC::SelectObject
  000c2	8b f0		 mov	 esi, eax

; 375  : 	dc.Rectangle(CRect(topLeft, rightBottom));

  000c4	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h

; 568  : 	left = topLeft.x;

  000c7	8b 45 d0	 mov	 eax, DWORD PTR _recX$1$[ebp]
  000ca	89 45 b4	 mov	 DWORD PTR $T2[ebp], eax

; 569  : 	top = topLeft.y;

  000cd	8b 45 cc	 mov	 eax, DWORD PTR _recY$1$[ebp]
  000d0	89 45 b8	 mov	 DWORD PTR $T2[ebp+4], eax

; 570  : 	right = bottomRight.x;

  000d3	8b 45 c8	 mov	 eax, DWORD PTR _rightBottom$1$[ebp]
  000d6	89 45 bc	 mov	 DWORD PTR $T2[ebp+8], eax

; 571  : 	bottom = bottomRight.y;

  000d9	8b 45 c4	 mov	 eax, DWORD PTR _initY$1$[ebp]
  000dc	89 45 c0	 mov	 DWORD PTR $T2[ebp+12], eax
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp

; 375  : 	dc.Rectangle(CRect(topLeft, rightBottom));

  000df	8d 45 b4	 lea	 eax, DWORD PTR $T2[ebp]
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ?Rectangle@CDC@@QAEHPBUtagRECT@@@Z ; CDC::Rectangle

; 376  : 	dc.SelectObject(pOldPen);

  000e8	57		 push	 edi
  000e9	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  000ec	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 377  : 	dc.SelectObject(pOldBrush);

  000f1	56		 push	 esi
  000f2	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  000f5	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCBrush@@PAV2@@Z ; CDC::SelectObject

; 378  : }

  000fa	8d 4d e8	 lea	 ecx, DWORD PTR _pen$[ebp]
  000fd	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen
  00102	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  00105	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  0010a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00114	59		 pop	 ecx
  00115	5f		 pop	 edi
  00116	5e		 pop	 esi
  00117	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011a	33 cd		 xor	 ecx, ebp
  0011c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00121	8b e5		 mov	 esp, ebp
  00123	5d		 pop	 ebp
  00124	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DrawTipFrame@CGameDlg@@IAEXHH@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
__unwindfunclet$?DrawTipFrame@CGameDlg@@IAEXHH@Z$1:
  00008	8d 4d e8	 lea	 ecx, DWORD PTR _pen$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__ehhandler$?DrawTipFrame@CGameDlg@@IAEXHH@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DrawTipFrame@CGameDlg@@IAEXHH@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DrawTipFrame@CGameDlg@@IAEXHH@Z ENDP			; CGameDlg::DrawTipFrame
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?InitElement@CGameDlg@@IAEXXZ
_TEXT	SEGMENT
_this$GSCopy$1$ = -40					; size = 4
_dc$ = -36						; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?InitElement@CGameDlg@@IAEXXZ PROC			; CGameDlg::InitElement, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InitElement@CGameDlg@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	89 7d d8	 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  0002f	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0

; 194  : 	// 获得当前对话框的视频内存     
; 195  : 	CClientDC dc(this);

  00033	57		 push	 edi
  00034	8d 4d dc	 lea	 ecx, DWORD PTR _dc$[ebp]
  00037	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _dc$[ebp+16], 0
  0003e	c5 fa 7f 45 dc	 vmovdqu XMMWORD PTR _dc$[ebp], xmm0
  00043	e8 00 00 00 00	 call	 ??0CClientDC@@QAE@PAVCWnd@@@Z ; CClientDC::CClientDC

; 196  : 	// 加载 BMP 图片资源     
; 197  : 	HANDLE hBmp = ::LoadImageW(NULL, _T("res\\theme\\picture\\animals_element.bmp"), IMAGE_BITMAP, 0, 0, LR_LOADFROMFILE);

  00048	6a 10		 push	 16			; 00000010H
  0004a	6a 00		 push	 0
  0004c	6a 00		 push	 0
  0004e	6a 00		 push	 0
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1EM@JLJMBGN@?$AAr?$AAe?$AAs?$AA?2?$AAt?$AAh?$AAe?$AAm?$AAe?$AA?2?$AAp?$AAi?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?2?$AAa?$AAn?$AAi?$AAm?$AAa?$AAl?$AAs?$AA_?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn@
  00055	6a 00		 push	 0
  00057	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadImageW@24
  00064	8b f0		 mov	 esi, eax

; 198  : 	// 创建与视频内存兼容的内存 DC 
; 199  : 	m_dcElement.CreateCompatibleDC(&dc); 

  00066	8d 8f f4 00 00
	00		 lea	 ecx, DWORD PTR [edi+244]
  0006c	8d 45 dc	 lea	 eax, DWORD PTR _dc$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?CreateCompatibleDC@CDC@@QAEHPAV1@@Z ; CDC::CreateCompatibleDC

; 200  : 	// 将位图资源选入 DC     
; 201  : 	m_dcElement.SelectObject(hBmp);

  00075	56		 push	 esi
  00076	8d 8f f4 00 00
	00		 lea	 ecx, DWORD PTR [edi+244]
  0007c	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject

; 202  : 
; 203  : 	// 加载掩码 BMP 图片资源   
; 204  : 	HANDLE hMask = ::LoadImageW(NULL, _T("res\\theme\\picture\\animals_mask.bmp"), IMAGE_BITMAP, 0, 0, LR_LOADFROMFILE);

  00081	6a 10		 push	 16			; 00000010H
  00083	6a 00		 push	 0
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@MAFPBOLK@?$AAr?$AAe?$AAs?$AA?2?$AAt?$AAh?$AAe?$AAm?$AAe?$AA?2?$AAp?$AAi?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?2?$AAa?$AAn?$AAi?$AAm?$AAa?$AAl?$AAs?$AA_?$AAm?$AAa?$AAs?$AAk?$AA?4?$AAb@
  0008e	6a 00		 push	 0
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadImageW@24
  00096	8b f0		 mov	 esi, eax

; 205  : 	// 创建与视频内存兼容的内存 DC     
; 206  : 	m_dcMask.CreateCompatibleDC(&dc);

  00098	8d 8f 04 01 00
	00		 lea	 ecx, DWORD PTR [edi+260]
  0009e	8d 45 dc	 lea	 eax, DWORD PTR _dc$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?CreateCompatibleDC@CDC@@QAEHPAV1@@Z ; CDC::CreateCompatibleDC

; 207  : 	// 将位图资源选入 DC     
; 208  : 	m_dcMask.SelectObject(hMask);

  000a7	56		 push	 esi
  000a8	8d 8f 04 01 00
	00		 lea	 ecx, DWORD PTR [edi+260]
  000ae	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject

; 209  : }

  000b3	8d 4d dc	 lea	 ecx, DWORD PTR _dc$[ebp]
  000b6	e8 00 00 00 00	 call	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c5	59		 pop	 ecx
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cb	33 cd		 xor	 ecx, ebp
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitElement@CGameDlg@@IAEXXZ$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CClientDC@@UAE@XZ	; CClientDC::~CClientDC
__ehhandler$?InitElement@CGameDlg@@IAEXXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InitElement@CGameDlg@@IAEXXZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InitElement@CGameDlg@@IAEXXZ ENDP			; CGameDlg::InitElement
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\afx.h
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\afx.h
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnInitDialog@CGameDlg@@MAEHXZ
_TEXT	SEGMENT
_pSysMenu$1$ = -56					; size = 4
_msg$2 = -52						; size = 28
_strAboutMenu$3 = -24					; size = 4
_title$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnInitDialog@CGameDlg@@MAEHXZ PROC			; CGameDlg::OnInitDialog, COMDAT
; _this$ = ecx

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnInitDialog@CGameDlg@@MAEHXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b d9		 mov	 ebx, ecx

; 125  : 	CDialogEx::OnInitDialog();

  0002d	e8 00 00 00 00	 call	 ?OnInitDialog@CDialog@@UAEHXZ ; CDialog::OnInitDialog

; 126  : 
; 127  : 	// 将“关于...”菜单项添加到系统菜单中。
; 128  : 	// IDM_ABOUTBOX 必须在系统命令范围内。
; 129  : 	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
; 130  : 	ASSERT(IDM_ABOUTBOX < 0xF000);
; 131  : 
; 132  : 	CMenu* pSysMenu = GetSystemMenu(FALSE);

  00032	6a 00		 push	 0
  00034	8b cb		 mov	 ecx, ebx
  00036	e8 00 00 00 00	 call	 ?GetSystemMenu@CWnd@@QBEPAVCMenu@@H@Z ; CWnd::GetSystemMenu
  0003b	8b f0		 mov	 esi, eax
  0003d	89 75 c8	 mov	 DWORD PTR _pSysMenu$1$[ebp], esi

; 133  : 	if (pSysMenu != NULL)

  00040	85 f6		 test	 esi, esi
  00042	0f 84 a9 00 00
	00		 je	 $LN2@OnInitDial

; 134  : 	{
; 135  : 		BOOL bNameValid;
; 136  : 		CString strAboutMenu;	

  00048	8d 4d e8	 lea	 ecx, DWORD PTR _strAboutMenu$3[ebp]
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ

; 137  : 		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);

  00051	6a 65		 push	 101			; 00000065H
  00053	8d 4d e8	 lea	 ecx, DWORD PTR _strAboutMenu$3[ebp]
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringW@?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z

; 138  : 		ASSERT(bNameValid);

  00063	85 c0		 test	 eax, eax
  00065	75 48		 jne	 SHORT $LN8@OnInitDial
  00067	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?__LINE__Var@?0??OnInitDialog@CGameDlg@@MAEHXZ@4JA
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\afx.h

; 332  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  0006d	6a 01		 push	 1
  0006f	6a 12		 push	 18			; 00000012H
  00071	6a 12		 push	 18			; 00000012H
  00073	50		 push	 eax
  00074	8d 45 cc	 lea	 eax, DWORD PTR _msg$2[ebp]
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp

; 138  : 		ASSERT(bNameValid);

  00077	83 c7 0e	 add	 edi, 14			; 0000000eH
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\afx.h

; 332  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  0007a	50		 push	 eax
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageW@20

; 333  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  00081	6a 00		 push	 0
  00083	6a 00		 push	 0
  00085	57		 push	 edi
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@LAAAELAE@d?3?2study?2?J?$PN?$LO?$NN?$LN?a?$LJ?$LJ?S?k?K?c?$LH?$KI?W?$NL?$LK?O?J?$LF?Q?i?2@
  0008b	6a 02		 push	 2
  0008d	8b f0		 mov	 esi, eax
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00095	83 c4 14	 add	 esp, 20			; 00000014H
  00098	8b f8		 mov	 edi, eax

; 334  : 	if (bQuit)

  0009a	85 f6		 test	 esi, esi
  0009c	74 09		 je	 SHORT $LN12@OnInitDial

; 335  : 		PostQuitMessage((int)msg.wParam);

  0009e	ff 75 d4	 push	 DWORD PTR _msg$2[ebp+8]
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$LN12@OnInitDial:
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp

; 138  : 		ASSERT(bNameValid);

  000a7	85 ff		 test	 edi, edi
  000a9	74 01		 je	 SHORT $LN14@OnInitDial
  000ab	cc		 int	 3
$LN14@OnInitDial:
  000ac	8b 75 c8	 mov	 esi, DWORD PTR _pSysMenu$1$[ebp]
$LN8@OnInitDial:

; 139  : 		if (!strAboutMenu.IsEmpty())

  000af	8d 4d e8	 lea	 ecx, DWORD PTR _strAboutMenu$3[ebp]
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@?$CSimpleStringT@_W$00@ATL@@QBE_NXZ
  000b8	84 c0		 test	 al, al
  000ba	75 25		 jne	 SHORT $LN3@OnInitDial

; 140  : 		{
; 141  : 			pSysMenu->AppendMenu(MF_SEPARATOR);

  000bc	6a 00		 push	 0
  000be	6a 00		 push	 0
  000c0	68 00 08 00 00	 push	 2048			; 00000800H
  000c5	8b ce		 mov	 ecx, esi
  000c7	e8 00 00 00 00	 call	 ?AppendMenuW@CMenu@@QAEHIIPB_W@Z ; CMenu::AppendMenuW

; 142  : 			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);

  000cc	8d 4d e8	 lea	 ecx, DWORD PTR _strAboutMenu$3[ebp]
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
  000d5	50		 push	 eax
  000d6	6a 10		 push	 16			; 00000010H
  000d8	6a 00		 push	 0
  000da	8b ce		 mov	 ecx, esi
  000dc	e8 00 00 00 00	 call	 ?AppendMenuW@CMenu@@QAEHIIPB_W@Z ; CMenu::AppendMenuW
$LN3@OnInitDial:

; 143  : 		}
; 144  : 	}

  000e1	8d 4d e8	 lea	 ecx, DWORD PTR _strAboutMenu$3[ebp]
  000e4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
$LN2@OnInitDial:

; 145  : 
; 146  : 	// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动
; 147  : 	//  执行此操作
; 148  : 	SetIcon(m_hIcon, TRUE);	    // 设置大图标

  000f1	6a 01		 push	 1
  000f3	ff b3 d0 00 00
	00		 push	 DWORD PTR [ebx+208]
  000f9	8b cb		 mov	 ecx, ebx
  000fb	e8 00 00 00 00	 call	 ?SetIcon@CWnd@@QAEPAUHICON__@@PAU2@H@Z ; CWnd::SetIcon

; 149  : 	SetIcon(m_hIcon, TRUE);		// 设置小图标

  00100	6a 01		 push	 1
  00102	ff b3 d0 00 00
	00		 push	 DWORD PTR [ebx+208]
  00108	8b cb		 mov	 ecx, ebx
  0010a	e8 00 00 00 00	 call	 ?SetIcon@CWnd@@QAEPAUHICON__@@PAU2@H@Z ; CWnd::SetIcon

; 150  : 
; 151  : 	// TODO: 在此添加额外的初始化代码
; 152  : 
; 153  : 	InitBackground();   //加载背景图片

  0010f	8b cb		 mov	 ecx, ebx
  00111	e8 00 00 00 00	 call	 ?InitBackground@CGameDlg@@AAEXXZ ; CGameDlg::InitBackground

; 154  : 	InitElement();     //初始化游戏图片元素

  00116	8b cb		 mov	 ecx, ebx
  00118	e8 00 00 00 00	 call	 ?InitElement@CGameDlg@@IAEXXZ ; CGameDlg::InitElement

; 155  : 	// 初始化进度条
; 156  : 	pProgCtrl = (CProgressCtrl*)GetDlgItem(IDC_PROGRESS_TIME);

  0011d	68 f8 03 00 00	 push	 1016			; 000003f8H
  00122	8b cb		 mov	 ecx, ebx
  00124	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem

; 157  : 	pProgCtrl->SetRange(0, ProgCtrlMAX);    //设置进度条范围  

  00129	6a 78		 push	 120			; 00000078H
  0012b	6a 00		 push	 0
  0012d	8b c8		 mov	 ecx, eax
  0012f	89 83 88 01 00
	00		 mov	 DWORD PTR [ebx+392], eax
  00135	e8 00 00 00 00	 call	 ?SetRange@CProgressCtrl@@QAEXFF@Z ; CProgressCtrl::SetRange

; 158  : 	//pProgCtrl->SetPos(ProgCtrlMAX);			//设置进度条当前位置为最大值
; 159  : 	//静态文本指针定位
; 160  : 	pStaticTime = (CStatic*)GetDlgItem(IDC_extraTimeText);	  

  0013a	68 f9 03 00 00	 push	 1017			; 000003f9H
  0013f	8b cb		 mov	 ecx, ebx
  00141	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem

; 161  : 	pStaticLevel = (CStatic*)GetDlgItem(IDC_STATIC_Level);    

  00146	68 00 04 00 00	 push	 1024			; 00000400H
  0014b	8b cb		 mov	 ecx, ebx
  0014d	89 83 8c 01 00
	00		 mov	 DWORD PTR [ebx+396], eax
  00153	e8 00 00 00 00	 call	 ?GetDlgItem@CWnd@@QBEPAV1@H@Z ; CWnd::GetDlgItem

; 162  : 	CString title;    //对话框标题文本

  00158	8d 4d ec	 lea	 ecx, DWORD PTR _title$[ebp]
  0015b	89 83 90 01 00
	00		 mov	 DWORD PTR [ebx+400], eax
  00161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ

; 163  : 	//休闲模式下隐藏时间进度条和时间提示文本,修改对话框标题
; 164  : 	if (gameModel == 1)

  00167	8b 83 a0 01 00
	00		 mov	 eax, DWORD PTR [ebx+416]
  0016d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00174	83 f8 01	 cmp	 eax, 1
  00177	75 3b		 jne	 SHORT $LN4@OnInitDial

; 165  : 	{
; 166  : 		pProgCtrl->ShowWindow(SW_HIDE);

  00179	8b 8b 88 01 00
	00		 mov	 ecx, DWORD PTR [ebx+392]
  0017f	6a 00		 push	 0
  00181	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 167  : 		pStaticTime->ShowWindow(SW_HIDE);

  00186	8b 8b 8c 01 00
	00		 mov	 ecx, DWORD PTR [ebx+396]
  0018c	6a 00		 push	 0
  0018e	e8 00 00 00 00	 call	 ?ShowWindow@CWnd@@QAEHH@Z ; CWnd::ShowWindow

; 168  : 		title = "卡通连连看-休闲模式";

  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MIOIJJOK@?$LP?$KI?M?$KI?A?$KM?A?$KM?$LP?$LE?9?P?$NN?O?P?D?$KD?J?$LN?$AA@
  00198	8d 4d ec	 lea	 ecx, DWORD PTR _title$[ebp]
  0019b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z

; 169  : 		SetWindowText(title);

  001a1	8d 4d ec	 lea	 ecx, DWORD PTR _title$[ebp]
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
  001aa	50		 push	 eax
  001ab	8b cb		 mov	 ecx, ebx
  001ad	e8 00 00 00 00	 call	 ?SetWindowTextW@CWnd@@QAEXPB_W@Z ; CWnd::SetWindowTextW
  001b2	eb 2b		 jmp	 SHORT $LN6@OnInitDial
$LN4@OnInitDial:

; 170  : 	}
; 171  : 	else if (gameModel == 2)

  001b4	83 f8 02	 cmp	 eax, 2
  001b7	75 26		 jne	 SHORT $LN6@OnInitDial

; 172  : 	{
; 173  : 		title = "卡通连连看-关卡模式";

  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HLNBPPPG@?$LP?$KI?M?$KI?A?$KM?A?$KM?$LP?$LE?9?$LJ?X?$LP?$KI?D?$KD?J?$LN?$AA@
  001be	8d 4d ec	 lea	 ecx, DWORD PTR _title$[ebp]
  001c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PBD@Z

; 174  : 		SetWindowText(title);

  001c7	8d 4d ec	 lea	 ecx, DWORD PTR _title$[ebp]
  001ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@_W$00@ATL@@QBEPB_WXZ
  001d0	50		 push	 eax
  001d1	8b cb		 mov	 ecx, ebx
  001d3	e8 00 00 00 00	 call	 ?SetWindowTextW@CWnd@@QAEXPB_W@Z ; CWnd::SetWindowTextW

; 175  : 		LevelModelSupt();	    //关卡模式的相关控制支持

  001d8	8b cb		 mov	 ecx, ebx
  001da	e8 00 00 00 00	 call	 ?LevelModelSupt@CGameDlg@@AAEXXZ ; CGameDlg::LevelModelSupt
$LN6@OnInitDial:

; 176  : 	}
; 177  : 		
; 178  : 	return TRUE;    // 除非将焦点设置到控件，否则返回 TRUE

  001df	8d 4d ec	 lea	 ecx, DWORD PTR _title$[ebp]
  001e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
  001e8	b8 01 00 00 00	 mov	 eax, 1

; 179  : }

  001ed	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001f0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f7	59		 pop	 ecx
  001f8	5f		 pop	 edi
  001f9	5e		 pop	 esi
  001fa	5b		 pop	 ebx
  001fb	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001fe	33 cd		 xor	 ecx, ebp
  00200	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00205	8b e5		 mov	 esp, ebp
  00207	5d		 pop	 ebp
  00208	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnInitDialog@CGameDlg@@MAEHXZ$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _strAboutMenu$3[ebp]
  00003	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
__unwindfunclet$?OnInitDialog@CGameDlg@@MAEHXZ$1:
  00009	8d 4d ec	 lea	 ecx, DWORD PTR _title$[ebp]
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1?$CStringT@_WV?$StrTraitMFC_DLL@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
__ehhandler$?OnInitDialog@CGameDlg@@MAEHXZ:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00026	33 c8		 xor	 ecx, eax
  00028	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnInitDialog@CGameDlg@@MAEHXZ
  00032	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnInitDialog@CGameDlg@@MAEHXZ ENDP			; CGameDlg::OnInitDialog
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnPaint@CGameDlg@@IAEXXZ
_TEXT	SEGMENT
_dc$ = -116						; size = 84
_rect$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?OnPaint@CGameDlg@@IAEXXZ PROC				; CGameDlg::OnPaint, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnPaint@CGameDlg@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 68	 sub	 esp, 104		; 00000068H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b d9		 mov	 ebx, ecx
  0002c	6a 54		 push	 84			; 00000054H
  0002e	8d 45 8c	 lea	 eax, DWORD PTR _dc$[ebp]
  00031	6a 00		 push	 0
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 _memset
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH

; 96   : 	CPaintDC dc(this); // 用于绘制的设备上下文

  0003c	8d 4d 8c	 lea	 ecx, DWORD PTR _dc$[ebp]
  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??0CPaintDC@@QAE@PAVCWnd@@@Z ; CPaintDC::CPaintDC

; 97   : 	CRect rect;
; 98   : 	GetClientRect(&rect);

  00045	8d 45 e0	 lea	 eax, DWORD PTR _rect$[ebp]
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004f	c5 f9 ef c0	 vpxor	 xmm0, xmm0, xmm0
  00053	50		 push	 eax
  00054	8b cb		 mov	 ecx, ebx
  00056	c5 fa 7f 45 e0	 vmovdqu XMMWORD PTR _rect$[ebp], xmm0
  0005b	e8 00 00 00 00	 call	 ?GetClientRect@CWnd@@QBEXPAUtagRECT@@@Z ; CWnd::GetClientRect

; 99   : 	if (IsIconic())

  00060	8b cb		 mov	 ecx, ebx
  00062	e8 00 00 00 00	 call	 ?IsIconic@CWnd@@QBEHXZ	; CWnd::IsIconic

; 100  : 	{
; 101  : 		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

  00067	8d 4d 8c	 lea	 ecx, DWORD PTR _dc$[ebp]
  0006a	85 c0		 test	 eax, eax
  0006c	74 53		 je	 SHORT $LN2@OnPaint
  0006e	6a 00		 push	 0
  00070	e8 00 00 00 00	 call	 ?GetSafeHdc@CDC@@QBEPAUHDC__@@XZ ; CDC::GetSafeHdc
  00075	50		 push	 eax
  00076	6a 27		 push	 39			; 00000027H
  00078	8b cb		 mov	 ecx, ebx
  0007a	e8 00 00 00 00	 call	 ?SendMessageW@CWnd@@QBEJIIJ@Z ; CWnd::SendMessageW

; 102  : 
; 103  : 		// 使图标在工作区矩形中居中
; 104  : 		int cxIcon = GetSystemMetrics(SM_CXICON);

  0007f	6a 0b		 push	 11			; 0000000bH
  00081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4

; 105  : 		int cyIcon = GetSystemMetrics(SM_CYICON);

  00087	6a 0c		 push	 12			; 0000000cH
  00089	8b f8		 mov	 edi, eax
  0008b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4

; 106  : 
; 107  : 		int x = (rect.Width() - cxIcon + 1) / 2;
; 108  : 		int y = (rect.Height() - cyIcon + 1) / 2;
; 109  : 
; 110  : 		// 绘制图标
; 111  : 		dc.DrawIcon(x, y, m_hIcon);

  00091	ff b3 d0 00 00
	00		 push	 DWORD PTR [ebx+208]
  00097	8b c8		 mov	 ecx, eax
  00099	8b 45 ec	 mov	 eax, DWORD PTR _rect$[ebp+12]
  0009c	2b 45 e4	 sub	 eax, DWORD PTR _rect$[ebp+4]
  0009f	2b c1		 sub	 eax, ecx
  000a1	8d 4d 8c	 lea	 ecx, DWORD PTR _dc$[ebp]
  000a4	40		 inc	 eax
  000a5	99		 cdq
  000a6	2b c2		 sub	 eax, edx
  000a8	d1 f8		 sar	 eax, 1
  000aa	50		 push	 eax
  000ab	8b 45 e8	 mov	 eax, DWORD PTR _rect$[ebp+8]
  000ae	2b 45 e0	 sub	 eax, DWORD PTR _rect$[ebp]
  000b1	2b c7		 sub	 eax, edi
  000b3	40		 inc	 eax
  000b4	99		 cdq
  000b5	2b c2		 sub	 eax, edx
  000b7	d1 f8		 sar	 eax, 1
  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ?DrawIcon@CDC@@QAEHHHPAUHICON__@@@Z ; CDC::DrawIcon

; 112  : 	}
; 113  : 	else

  000bf	eb 3e		 jmp	 SHORT $LN3@OnPaint
$LN2@OnPaint:

; 116  : 		dc.BitBlt(0, 0, rect.Width(), rect.Height(), &m_dcBG, 0, 0, SRCCOPY);   // 绘制背景图片

  000c1	68 20 00 cc 00	 push	 13369376		; 00cc0020H
  000c6	6a 00		 push	 0
  000c8	6a 00		 push	 0
  000ca	8d 83 e4 00 00
	00		 lea	 eax, DWORD PTR [ebx+228]
  000d0	50		 push	 eax
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h

; 581  : 	return bottom - top;

  000d1	8b 45 ec	 mov	 eax, DWORD PTR _rect$[ebp+12]
  000d4	2b 45 e4	 sub	 eax, DWORD PTR _rect$[ebp+4]
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp

; 116  : 		dc.BitBlt(0, 0, rect.Width(), rect.Height(), &m_dcBG, 0, 0, SRCCOPY);   // 绘制背景图片

  000d7	50		 push	 eax
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h

; 576  : 	return right - left;

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _rect$[ebp+8]
  000db	2b 45 e0	 sub	 eax, DWORD PTR _rect$[ebp]
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp

; 116  : 		dc.BitBlt(0, 0, rect.Width(), rect.Height(), &m_dcBG, 0, 0, SRCCOPY);   // 绘制背景图片

  000de	50		 push	 eax
  000df	6a 00		 push	 0
  000e1	6a 00		 push	 0
  000e3	e8 00 00 00 00	 call	 ?BitBlt@CDC@@QAEHHHHHPAV1@HHK@Z ; CDC::BitBlt

; 117  : 		if (m_bPlaying)    //如果游戏处于开始状态，则需要重绘游戏地图，主要是为了窗口最小化还原后可以自动重绘元素

  000e8	80 bb 95 01 00
	00 00		 cmp	 BYTE PTR [ebx+405], 0
  000ef	74 07		 je	 SHORT $LN4@OnPaint

; 118  : 			UpdateMap();    //如果是刚进入游戏界面，还没有点击“开始游戏”，则不需要加载游戏地图

  000f1	8b cb		 mov	 ecx, ebx
  000f3	e8 00 00 00 00	 call	 ?UpdateMap@CGameDlg@@AAEXXZ ; CGameDlg::UpdateMap
$LN4@OnPaint:

; 119  : 		CDialogEx::OnPaint();   //原来自带的父类函数

  000f8	8b cb		 mov	 ecx, ebx
  000fa	e8 00 00 00 00	 call	 ?OnPaint@CDialog@@IAEXXZ ; CDialog::OnPaint
$LN3@OnPaint:

; 120  : 	}
; 121  : }

  000ff	8d 4d 8c	 lea	 ecx, DWORD PTR _dc$[ebp]
  00102	e8 00 00 00 00	 call	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
  00107	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00111	59		 pop	 ecx
  00112	5f		 pop	 edi
  00113	5b		 pop	 ebx
  00114	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00117	33 cd		 xor	 ecx, ebp
  00119	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnPaint@CGameDlg@@IAEXXZ$0:
  00000	8d 4d 8c	 lea	 ecx, DWORD PTR _dc$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CPaintDC@@UAE@XZ	; CPaintDC::~CPaintDC
__ehhandler$?OnPaint@CGameDlg@@IAEXXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnPaint@CGameDlg@@IAEXXZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnPaint@CGameDlg@@IAEXXZ ENDP				; CGameDlg::OnPaint
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?DoDataExchange@CGameDlg@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT
_pDX$ = 8						; size = 4
?DoDataExchange@CGameDlg@@MAEXPAVCDataExchange@@@Z PROC	; CGameDlg::DoDataExchange, COMDAT
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 60   : }

  00003	5d		 pop	 ebp

; 59   : 	CDialogEx::DoDataExchange(pDX);

  00004	e9 00 00 00 00	 jmp	 ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z ; CWnd::DoDataExchange
?DoDataExchange@CGameDlg@@MAEXPAVCDataExchange@@@Z ENDP	; CGameDlg::DoDataExchange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?OnFinalRelease@CGameDlg@@UAEXXZ
_TEXT	SEGMENT
?OnFinalRelease@CGameDlg@@UAEXXZ PROC			; CGameDlg::OnFinalRelease, COMDAT
; _this$ = ecx

; 49   : 	// 释放了对自动化对象的最后一个引用后，将调用
; 50   : 	// OnFinalRelease。  基类将自动
; 51   : 	// 删除该对象。  在调用该基类之前，请添加您的
; 52   : 	// 对象所需的附加清理代码。
; 53   : 
; 54   : 	CDialogEx::OnFinalRelease();

  00000	e9 00 00 00 00	 jmp	 ?OnFinalRelease@CWnd@@UAEXXZ ; CWnd::OnFinalRelease
?OnFinalRelease@CGameDlg@@UAEXXZ ENDP			; CGameDlg::OnFinalRelease
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ??1CGameDlg@@UAE@XZ
_TEXT	SEGMENT
??1CGameDlg@@UAE@XZ PROC				; CGameDlg::~CGameDlg, COMDAT
; _this$ = ecx

; 44   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 45   : }

  00003	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGameDlg@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CGameControl@@QAE@XZ	; CGameControl::~CGameControl
  00014	8d 8e 04 01 00
	00		 lea	 ecx, DWORD PTR [esi+260]
  0001a	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  0001f	8d 8e f4 00 00
	00		 lea	 ecx, DWORD PTR [esi+244]
  00025	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  0002a	8d 8e e4 00 00
	00		 lea	 ecx, DWORD PTR [esi+228]
  00030	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  00035	8d 8e d4 00 00
	00		 lea	 ecx, DWORD PTR [esi+212]
  0003b	e8 00 00 00 00	 call	 ??1CDC@@UAE@XZ		; CDC::~CDC
  00040	8d 8e c0 00 00
	00		 lea	 ecx, DWORD PTR [esi+192]
  00046	e8 00 00 00 00	 call	 ??1CDialogImpl@@MAE@XZ	; CDialogImpl::~CDialogImpl
  0004b	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  00051	e8 00 00 00 00	 call	 ??1CBrush@@UAE@XZ	; CBrush::~CBrush
  00056	8b ce		 mov	 ecx, esi
  00058	5e		 pop	 esi
  00059	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
??1CGameDlg@@UAE@XZ ENDP				; CGameDlg::~CGameDlg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ??0CGameDlg@@QAE@HPAVCWnd@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_gModel$ = 8						; size = 4
_pParent$ = 12						; size = 4
??0CGameDlg@@QAE@HPAVCWnd@@@Z PROC			; CGameDlg::CGameDlg, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGameDlg@@QAE@HPAVCWnd@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 23   : 	: CDialogEx(IDD_GAME_DIALOG, pParent)

  00029	ff 75 0c	 push	 DWORD PTR _pParent$[ebp]
  0002c	68 8c 00 00 00	 push	 140			; 0000008cH
  00031	e8 00 00 00 00	 call	 ??0CDialogEx@@QAE@IPAVCWnd@@@Z ; CDialogEx::CDialogEx

; 24   : {

  00036	8d 8e d4 00 00
	00		 lea	 ecx, DWORD PTR [esi+212]
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGameDlg@@6B@
  00049	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
  0004e	8d 8e e4 00 00
	00		 lea	 ecx, DWORD PTR [esi+228]
  00054	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00058	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
  0005d	8d 8e f4 00 00
	00		 lea	 ecx, DWORD PTR [esi+244]
  00063	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00067	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
  0006c	8d 8e 04 01 00
	00		 lea	 ecx, DWORD PTR [esi+260]
  00072	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00076	e8 00 00 00 00	 call	 ??0CDC@@QAE@XZ		; CDC::CDC
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h

; 400  : 	x = 0;

  0007b	c7 86 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+276], 0
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp

; 24   : {

  00085	8d 8e 34 01 00
	00		 lea	 ecx, DWORD PTR [esi+308]
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h

; 401  : 	y = 0;

  0008b	c7 86 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+280], 0

; 304  : 	cx = 0;

  00095	c7 86 1c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+284], 0

; 305  : 	cy = 0;

  0009f	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp

; 24   : {

  000a9	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h

; 528  : 	left = 0;

  000ad	c7 86 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+292], 0

; 529  : 	top = 0;

  000b7	c7 86 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+296], 0

; 530  : 	right = 0;

  000c1	c7 86 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+300], 0

; 531  : 	bottom = 0;

  000cb	c7 86 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+304], 0
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp

; 24   : {

  000d5	e8 00 00 00 00	 call	 ??0CGameControl@@QAE@XZ	; CGameControl::CGameControl

; 25   : 	m_hIcon = AfxGetApp()->LoadIcon(IDI_APP_ICON);

  000da	6a 7f		 push	 127			; 0000007fH
  000dc	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000e0	e8 00 00 00 00	 call	 ?AfxGetApp@@YGPAVCWinApp@@XZ ; AfxGetApp
  000e5	8b c8		 mov	 ecx, eax
  000e7	e8 00 00 00 00	 call	 ?LoadIconW@CWinApp@@QBEPAUHICON__@@I@Z ; CWinApp::LoadIconW

; 26   : 	EnableAutomation();

  000ec	8b ce		 mov	 ecx, esi
  000ee	89 86 d0 00 00
	00		 mov	 DWORD PTR [esi+208], eax
  000f4	e8 00 00 00 00	 call	 ?EnableAutomation@CCmdTarget@@QAEXXZ ; CCmdTarget::EnableAutomation
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h

; 432  : 	x += xOffset;

  000f9	ff 86 14 01 00
	00		 inc	 DWORD PTR [esi+276]

; 433  : 	y += yOffset;

  000ff	83 86 18 01 00
	00 2d		 add	 DWORD PTR [esi+280], 45	; 0000002dH

; 358  : 	cx = CX;

  00106	c7 86 1c 01 00
	00 28 00 00 00	 mov	 DWORD PTR [esi+284], 40	; 00000028H

; 359  : 	cy = CY;

  00110	c7 86 20 01 00
	00 28 00 00 00	 mov	 DWORD PTR [esi+288], 40	; 00000028H
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp

; 31   : 	m_rtGameRect.left = m_ptGameTop.x;

  0011a	8b 96 14 01 00
	00		 mov	 edx, DWORD PTR [esi+276]

; 32   : 	m_rtGameRect.top = m_ptGameTop.y;

  00120	8b 8e 18 01 00
	00		 mov	 ecx, DWORD PTR [esi+280]
  00126	89 96 24 01 00
	00		 mov	 DWORD PTR [esi+292], edx
  0012c	89 8e 28 01 00
	00		 mov	 DWORD PTR [esi+296], ecx

; 33   : 	m_rtGameRect.bottom = m_ptGameTop.y + m_sizeElem.cy * (CGameControl::s_nRows + 2);

  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_nRows@CGameControl@@2HA ; CGameControl::s_nRows
  00137	83 c0 02	 add	 eax, 2
  0013a	0f af 86 20 01
	00 00		 imul	 eax, DWORD PTR [esi+288]
  00141	03 c1		 add	 eax, ecx
  00143	89 86 30 01 00
	00		 mov	 DWORD PTR [esi+304], eax

; 34   : 	m_rtGameRect.right = m_ptGameTop.x + m_sizeElem.cx * (CGameControl::s_nCols + 2);

  00149	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_nCols@CGameControl@@2HA ; CGameControl::s_nCols
  0014e	83 c0 02	 add	 eax, 2

; 35   : 	m_bFirstPoint = true;    //bool初始化

  00151	66 c7 86 94 01
	00 00 01 00	 mov	 WORD PTR [esi+404], 1
  0015a	0f af 86 1c 01
	00 00		 imul	 eax, DWORD PTR [esi+284]

; 36   : 	m_bPlaying = false;      //游戏未在进行状态
; 37   : 	nRerank = 3;			//重排剩余次数初始化为3次

  00161	c7 86 98 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+408], 3

; 38   : 	extraTime = ProgCtrlMAX;   //剩余时间初始化为120s

  0016b	c7 86 9c 01 00
	00 78 00 00 00	 mov	 DWORD PTR [esi+412], 120 ; 00000078H

; 39   : 	gameModel = gModel;			//游戏模式位初始化，默认为“基本模式”
; 40   : 	level = 1;              //关卡等级初始化为1级

  00175	c7 86 a4 01 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+420], 1
  0017f	03 c2		 add	 eax, edx
  00181	89 86 2c 01 00
	00		 mov	 DWORD PTR [esi+300], eax
  00187	8b 45 08	 mov	 eax, DWORD PTR _gModel$[ebp]
  0018a	89 86 a0 01 00
	00		 mov	 DWORD PTR [esi+416], eax

; 41   : }

  00190	8b c6		 mov	 eax, esi
  00192	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00195	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0019c	59		 pop	 ecx
  0019d	5e		 pop	 esi
  0019e	8b e5		 mov	 esp, ebp
  001a0	5d		 pop	 ebp
  001a1	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDialogEx@@UAE@XZ
__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 d4 00 00
	00		 add	 ecx, 212		; 000000d4H
  00011	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 e4 00 00
	00		 add	 ecx, 228		; 000000e4H
  0001f	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$3:
  00024	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	81 c1 f4 00 00
	00		 add	 ecx, 244		; 000000f4H
  0002d	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$4:
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	81 c1 04 01 00
	00		 add	 ecx, 260		; 00000104H
  0003b	e9 00 00 00 00	 jmp	 ??1CDC@@UAE@XZ		; CDC::~CDC
__unwindfunclet$??0CGameDlg@@QAE@HPAVCWnd@@@Z$5:
  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	81 c1 34 01 00
	00		 add	 ecx, 308		; 00000134H
  00049	e9 00 00 00 00	 jmp	 ??1CGameControl@@QAE@XZ	; CGameControl::~CGameControl
__ehhandler$??0CGameDlg@@QAE@HPAVCWnd@@@Z:
  0004e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00052	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00055	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00058	33 c8		 xor	 ecx, eax
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGameDlg@@QAE@HPAVCWnd@@@Z
  00064	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGameDlg@@QAE@HPAVCWnd@@@Z ENDP			; CGameDlg::CGameDlg
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?GetRuntimeClass@CGameDlg@@UBEPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?GetRuntimeClass@CGameDlg@@UBEPAUCRuntimeClass@@XZ PROC	; CGameDlg::GetRuntimeClass, COMDAT
; _this$ = ecx

; 20   : IMPLEMENT_DYNAMIC(CGameDlg, CDialogEx)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?classCGameDlg@CGameDlg@@2UCRuntimeClass@@B ; CGameDlg::classCGameDlg
  00005	c3		 ret	 0
?GetRuntimeClass@CGameDlg@@UBEPAUCRuntimeClass@@XZ ENDP	; CGameDlg::GetRuntimeClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?GetThisClass@CGameDlg@@SGPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?GetThisClass@CGameDlg@@SGPAUCRuntimeClass@@XZ PROC	; CGameDlg::GetThisClass, COMDAT

; 20   : IMPLEMENT_DYNAMIC(CGameDlg, CDialogEx)

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?classCGameDlg@CGameDlg@@2UCRuntimeClass@@B ; CGameDlg::classCGameDlg
  00005	c3		 ret	 0
?GetThisClass@CGameDlg@@SGPAUCRuntimeClass@@XZ ENDP	; CGameDlg::GetThisClass
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?_GetBaseClass@CGameDlg@@KGPAUCRuntimeClass@@XZ
_TEXT	SEGMENT
?_GetBaseClass@CGameDlg@@KGPAUCRuntimeClass@@XZ PROC	; CGameDlg::_GetBaseClass, COMDAT

; 20   : IMPLEMENT_DYNAMIC(CGameDlg, CDialogEx)

  00000	e9 00 00 00 00	 jmp	 ?GetThisClass@CDialogEx@@SGPAUCRuntimeClass@@XZ ; CDialogEx::GetThisClass
?_GetBaseClass@CGameDlg@@KGPAUCRuntimeClass@@XZ ENDP	; CGameDlg::_GetBaseClass
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@CGameHelp@@QAEXI@Z
_TEXT	SEGMENT
_classSize$ = 8						; size = 4
?__autoclassinit2@CGameHelp@@QAEXI@Z PROC		; CGameHelp::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _classSize$[ebp]
  00006	6a 00		 push	 0
  00008	51		 push	 ecx
  00009	e8 00 00 00 00	 call	 _memset
  0000e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?__autoclassinit2@CGameHelp@@QAEXI@Z ENDP		; CGameHelp::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1CDialogEx@@UAE@XZ
_TEXT	SEGMENT
??1CDialogEx@@UAE@XZ PROC				; CDialogEx::~CDialogEx, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 8e c0 00 00
	00		 lea	 ecx, DWORD PTR [esi+192]
  00009	e8 00 00 00 00	 call	 ??1CDialogImpl@@MAE@XZ	; CDialogImpl::~CDialogImpl
  0000e	8d 8e b4 00 00
	00		 lea	 ecx, DWORD PTR [esi+180]
  00014	e8 00 00 00 00	 call	 ??1CBrush@@UAE@XZ	; CBrush::~CBrush
  00019	8b ce		 mov	 ecx, esi
  0001b	5e		 pop	 esi
  0001c	e9 00 00 00 00	 jmp	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
??1CDialogEx@@UAE@XZ ENDP				; CDialogEx::~CDialogEx
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@CClientDC@@QAEXI@Z
_TEXT	SEGMENT
_classSize$ = 8						; size = 4
?__autoclassinit2@CClientDC@@QAEXI@Z PROC		; CClientDC::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _classSize$[ebp]
  00006	6a 00		 push	 0
  00008	51		 push	 ecx
  00009	e8 00 00 00 00	 call	 _memset
  0000e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?__autoclassinit2@CClientDC@@QAEXI@Z ENDP		; CClientDC::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@CPaintDC@@QAEXI@Z
_TEXT	SEGMENT
_classSize$ = 8						; size = 4
?__autoclassinit2@CPaintDC@@QAEXI@Z PROC		; CPaintDC::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _classSize$[ebp]
  00006	6a 00		 push	 0
  00008	51		 push	 ecx
  00009	e8 00 00 00 00	 call	 _memset
  0000e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?__autoclassinit2@CPaintDC@@QAEXI@Z ENDP		; CPaintDC::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@CPen@@QAEXI@Z
_TEXT	SEGMENT
_classSize$ = 8						; size = 4
?__autoclassinit2@CPen@@QAEXI@Z PROC			; CPen::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 08	 push	 DWORD PTR _classSize$[ebp]
  00006	6a 00		 push	 0
  00008	51		 push	 ecx
  00009	e8 00 00 00 00	 call	 _memset
  0000e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?__autoclassinit2@CPen@@QAEXI@Z ENDP			; CPen::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ??BCRect@@QAEPAUtagRECT@@XZ
_TEXT	SEGMENT
??BCRect@@QAEPAUtagRECT@@XZ PROC			; CRect::operator tagRECT *, COMDAT
; _this$ = ecx

; 628  : 	return this;

  00000	8b c1		 mov	 eax, ecx

; 629  : }

  00002	c3		 ret	 0
??BCRect@@QAEPAUtagRECT@@XZ ENDP			; CRect::operator tagRECT *
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ?Height@CRect@@QBEHXZ
_TEXT	SEGMENT
?Height@CRect@@QBEHXZ PROC				; CRect::Height, COMDAT
; _this$ = ecx

; 581  : 	return bottom - top;

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]

; 582  : }

  00006	c3		 ret	 0
?Height@CRect@@QBEHXZ ENDP				; CRect::Height
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ?Width@CRect@@QBEHXZ
_TEXT	SEGMENT
?Width@CRect@@QBEHXZ PROC				; CRect::Width, COMDAT
; _this$ = ecx

; 576  : 	return right - left;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]

; 577  : }

  00005	c3		 ret	 0
?Width@CRect@@QBEHXZ ENDP				; CRect::Width
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ??0CRect@@QAE@UtagPOINT@@0@Z
_TEXT	SEGMENT
_topLeft$ = 8						; size = 8
_bottomRight$ = 16					; size = 8
??0CRect@@QAE@UtagPOINT@@0@Z PROC			; CRect::CRect, COMDAT
; _this$ = ecx

; 567  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 568  : 	left = topLeft.x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _topLeft$[ebp]
  00006	89 01		 mov	 DWORD PTR [ecx], eax

; 569  : 	top = topLeft.y;

  00008	8b 45 0c	 mov	 eax, DWORD PTR _topLeft$[ebp+4]
  0000b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 570  : 	right = bottomRight.x;

  0000e	8b 45 10	 mov	 eax, DWORD PTR _bottomRight$[ebp]
  00011	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 571  : 	bottom = bottomRight.y;

  00014	8b 45 14	 mov	 eax, DWORD PTR _bottomRight$[ebp+4]
  00017	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 572  : }

  0001a	8b c1		 mov	 eax, ecx
  0001c	5d		 pop	 ebp
  0001d	c2 10 00	 ret	 16			; 00000010H
??0CRect@@QAE@UtagPOINT@@0@Z ENDP			; CRect::CRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ??0CRect@@QAE@XZ
_TEXT	SEGMENT
??0CRect@@QAE@XZ PROC					; CRect::CRect, COMDAT
; _this$ = ecx

; 528  : 	left = 0;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 529  : 	top = 0;
; 530  : 	right = 0;
; 531  : 	bottom = 0;
; 532  : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00016	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001d	c3		 ret	 0
??0CRect@@QAE@XZ ENDP					; CRect::CRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ?Offset@CPoint@@QAEXHH@Z
_TEXT	SEGMENT
_xOffset$ = 8						; size = 4
_yOffset$ = 12						; size = 4
?Offset@CPoint@@QAEXHH@Z PROC				; CPoint::Offset, COMDAT
; _this$ = ecx

; 431  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 432  : 	x += xOffset;

  00003	8b 45 08	 mov	 eax, DWORD PTR _xOffset$[ebp]
  00006	01 01		 add	 DWORD PTR [ecx], eax

; 433  : 	y += yOffset;

  00008	8b 45 0c	 mov	 eax, DWORD PTR _yOffset$[ebp]
  0000b	01 41 04	 add	 DWORD PTR [ecx+4], eax

; 434  : }

  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?Offset@CPoint@@QAEXHH@Z ENDP				; CPoint::Offset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ??0CPoint@@QAE@HH@Z
_TEXT	SEGMENT
_initX$ = 8						; size = 4
_initY$ = 12						; size = 4
??0CPoint@@QAE@HH@Z PROC				; CPoint::CPoint, COMDAT
; _this$ = ecx

; 407  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 408  : 	x = initX;

  00003	8b 45 08	 mov	 eax, DWORD PTR _initX$[ebp]
  00006	89 01		 mov	 DWORD PTR [ecx], eax

; 409  : 	y = initY;

  00008	8b 45 0c	 mov	 eax, DWORD PTR _initY$[ebp]
  0000b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 410  : }

  0000e	8b c1		 mov	 eax, ecx
  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
??0CPoint@@QAE@HH@Z ENDP				; CPoint::CPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ??0CPoint@@QAE@XZ
_TEXT	SEGMENT
??0CPoint@@QAE@XZ PROC					; CPoint::CPoint, COMDAT
; _this$ = ecx

; 400  : 	x = 0;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 401  : 	y = 0;
; 402  : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c3		 ret	 0
??0CPoint@@QAE@XZ ENDP					; CPoint::CPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ?SetSize@CSize@@QAEXHH@Z
_TEXT	SEGMENT
_CX$ = 8						; size = 4
_CY$ = 12						; size = 4
?SetSize@CSize@@QAEXHH@Z PROC				; CSize::SetSize, COMDAT
; _this$ = ecx

; 357  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 358  : 	cx = CX;

  00003	8b 45 08	 mov	 eax, DWORD PTR _CX$[ebp]
  00006	89 01		 mov	 DWORD PTR [ecx], eax

; 359  : 	cy = CY;

  00008	8b 45 0c	 mov	 eax, DWORD PTR _CY$[ebp]
  0000b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 360  : }

  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?SetSize@CSize@@QAEXHH@Z ENDP				; CSize::SetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltypes.h
;	COMDAT ??0CSize@@QAE@XZ
_TEXT	SEGMENT
??0CSize@@QAE@XZ PROC					; CSize::CSize, COMDAT
; _this$ = ecx

; 304  : 	cx = 0;

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 305  : 	cy = 0;
; 306  : }

  00006	8b c1		 mov	 eax, ecx
  00008	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000f	c3		 ret	 0
??0CSize@@QAE@XZ ENDP					; CSize::CSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z
_TEXT	SEGMENT
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 330  : 		if (pszCategory == nullptr)

  00003	8b 55 08	 mov	 edx, DWORD PTR _pszCategory$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 5b		 je	 SHORT $LN1@RegisterCa

; 331  : 		{
; 332  : 			return;
; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0000a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0000f	83 f8 20	 cmp	 eax, 32			; 00000020H
  00012	72 29		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm?$AAa?$AAn?$AAy?$AA?5?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAd?$AAe@
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0001e	6a 00		 push	 0
  00020	68 51 01 00 00	 push	 337			; 00000151H
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@PCOKKAMF@?$AAd?$AA?3?$AA?2?$AAd?$AAe?$AAv?$AAe?$AAl?$AAo?$AAp?$AAe?$AAr?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa?$AAl?$AA?5?$AAs?$AAt@
  0002a	6a 02		 push	 2
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00032	83 c4 18	 add	 esp, 24			; 00000018H
  00035	83 f8 01	 cmp	 eax, 1
  00038	75 2b		 jne	 SHORT $LN1@RegisterCa
  0003a	cc		 int	 3

; 355  : 	}

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
$LN3@RegisterCa:

; 338  : 			return;
; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  0003d	69 c8 04 01 00
	00		 imul	 ecx, eax, 260
  00043	8b 45 0c	 mov	 eax, DWORD PTR _nCategory$[ebp]

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);

  00046	52		 push	 edx
  00047	6a 7f		 push	 127			; 0000007fH
  00049	89 81 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[ecx], eax
  0004f	8d 81 04 00 00
	00		 lea	 eax, DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[ecx+4]
  00055	50		 push	 eax
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	
; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);
; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);
; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  0005f	ff 05 00 00 00
	00		 inc	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 00 02 00	 push	 131072			; 00020000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@GMLILNDJ@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00012	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 00 02 00	 push	 131072			; 00020000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00000	68 00 20 00 00	 push	 8192			; 00002000H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@IMMADNAP@?$AAa?$AAt?$AAl?$AAT?$AAr?$AAa?$AAc?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
  0000a	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  0000f	83 c4 08	 add	 esp, 8

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00012	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  00004	68 00 20 00 00	 push	 8192			; 00002000H
  00009	ff 75 08	 push	 DWORD PTR _pszCategoryName$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPB_WI@Z ; ATL::CTrace::RegisterCategory
  00013	83 c4 08	 add	 esp, 8

; 482  : }

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PB_W@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\developer\microsoft visual studio 14.0\vc\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_msg$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _lpszFileName$[ebp]

; 329  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 330  : 	// won't display
; 331  : 	MSG msg;
; 332  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00015	8d 45 e0	 lea	 eax, DWORD PTR _msg$[ebp]
  00018	6a 01		 push	 1
  0001a	6a 12		 push	 18			; 00000012H
  0001c	6a 12		 push	 18			; 00000012H
  0001e	6a 00		 push	 0
  00020	50		 push	 eax
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageW@20

; 333  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  00027	6a 00		 push	 0
  00029	6a 00		 push	 0
  0002b	ff 75 0c	 push	 DWORD PTR _nLine$[ebp]
  0002e	8b f0		 mov	 esi, eax
  00030	57		 push	 edi
  00031	6a 02		 push	 2
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00039	83 c4 14	 add	 esp, 20			; 00000014H
  0003c	8b f8		 mov	 edi, eax

; 334  : 	if (bQuit)

  0003e	85 f6		 test	 esi, esi
  00040	74 0b		 je	 SHORT $LN2@AfxAssertF

; 335  : 		PostQuitMessage((int)msg.wParam);

  00042	ff 75 e8	 push	 DWORD PTR _msg$[ebp+8]
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4

; 336  : 	return bResult;

  0004b	8b c7		 mov	 eax, edi
$LN2@AfxAssertF:

; 337  : }

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00050	5f		 pop	 edi
  00051	33 cd		 xor	 ecx, ebp
  00053	5e		 pop	 esi
  00054	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\study\数据结构与算法综合实验\连连看游戏\llkpro17.6.18\lianliankan\gamedlg.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
